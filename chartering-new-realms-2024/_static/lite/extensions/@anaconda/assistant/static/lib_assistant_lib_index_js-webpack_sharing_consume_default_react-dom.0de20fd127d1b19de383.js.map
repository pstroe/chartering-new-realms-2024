{"version":3,"file":"lib_assistant_lib_index_js-webpack_sharing_consume_default_react-dom.0de20fd127d1b19de383.js","mappings":";;;;;;;;;;;;;;;AAA+B;AAC/B;AACA;AACA;AACA;AACA;AACO,kCAAkC,gDAAmB,GAAG;;;;;;;;;;;;;;;;;;;ACNhC;AAC0C;AACrB;AACpD;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,mCAAmC,EAAE,6CAAgB,CAAC,iFAAyB;AAC3F;AACA,8CAA8C,gBAAgB;AAC9D;AACA,kCAAkC,aAAa,EAAE,YAAY;AAC7D,8BAA8B,4DAAa,CAAC,GAAG,mBAAmB;AAClE;AACA;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,gDAAmB,CAAC,iFAAyB,aAAa;AACtE;AACA;AACA,WAAW;AACX,QAAQ,gDAAmB,sBAAsB,gBAAgB,2BAA2B;AAC5F;;;;;;;;;;;;;;;;;;AC3B+B;AACa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,gDAAmB,CAAC,qDAAW,kBAAkB,WAAW,cAAc;AACrF;;;;;;;;;;;;;;;;;;ACV+B;AACa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,gDAAmB,CAAC,qDAAW,kBAAkB,WAAW,WAAW;AAClF;;;;;;;;;;;;;;;;;;ACV+B;AACa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,gDAAmB,CAAC,qDAAW,kBAAkB,WAAW,aAAa;AACpF;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,2CAA2C,KAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC7B8B;AACL;AACH;AACa;;;;;;;;;;;;;;;;;;;;;ACHT;AACiB;AACM;AACF;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA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ACA,gBAAgB,0DAAmB,wBAAwB,sFAAsF;AACjJ,YAAY,0DAAmB,QAAQ,mCAAmC;AAC1E,gBAAgB,0DAAmB,WAAW,8mEAA8mE;AAC5pE,gBAAgB,0DAAmB,WAAW,kPAAkP;AAChS,gBAAgB,0DAAmB,WAAW,uUAAuU;AACrX,gBAAgB,0DAAmB,WAAW,qUAAqU;AACnX,gBAAgB,0DAAmB,WAAW,iVAAiV;AAC/X,YAAY,0DAAmB;AAC/B,gBAAgB,0DAAmB,eAAe,uBAAuB;AACzE,oBAAoB,0DAAmB,WAAW,+CAA+C;AACjG;AACA;AACA;AACA,gBAAgB,0DAAmB,wBAAwB,sFAAsF;AACjJ,YAAY,0DAAmB,WAAW,qtBAAqtB;AAC/vB;AACA;AACA,CAAC,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpSC;AACQ;AACY;AACjB;AACH;;;;;;;;;;;;;;;;;;;;;;ACJE;AACqB;AACA;AACd;AACjC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,iJAAiJ;AAC7J;AACA;AACA;AACA;AACA,kCAAkC,0DAAmB,CAAC,uDAAc;AACpE;AACA;AACA,QAAQ,0DAAmB,QAAQ,yFA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,gBAAgB,0DAAmB,CAAC,+CAAG,IAAI,wBAAwB;AACnE;AACA,QAAQ,0DAAmB,CAAC,iFAAyB,aAAa,OAAO,+DAAc;AACvF;AACA;AACA,+BAA+B,gEAAyB;AACxD;AACA,aAAa,GAAG;AAChB,YAAY,0DAAmB,CAAC,yDAAkB,IAAI,wKAAwK;AAC9N;;;;;;;;;;;;;;;;;;;;;AChFyC;AACV;;;;;;;;;;;;;;;;ACDyB;AACxD;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,wDAAwD;AACpE;AACA;AACA;AACA;AACA;AACA,6BAA6B,oEAAiB;AAC9C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClB0B;AACnB;AACP;AACA;AACA;AACA;AACO;AACP,iCAAiC,cAAc,GAAG,WAAW,GAAG,UAAU;AAC1E;AACA;AACA;AACA,oBAAoB,0DAAmB,YAAY,wBAAwB,2BAA2B,cAAc,GAAG,UAAU,MAAM,cAAc,GAAG,WAAW,GAAG,UAAU;AAChL;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCoE;AACL;AACV;AACD;AACU;AACqB;AACzB;AACsB;AACtB;AACY;AACgG;AACxH;AACvC;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,sCAAsC,+EAAqC;AAC3E,QAAQ,4DAAc;AACtB;AACA;AACA;AACA,+BAA+B,6EAAmC;AAClE;AACA;AACA,SAAS;AACT,oCAAoC,wEAAyB;AAC7D,yBAAyB,8DAA2B;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+CAA+C;AACpF,SAAS;AACT;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,SAAS;AACT;AACA;AACA,eAAe,gGAA8B;AAC7C;AACA,SAAS;AACT;AACA;AACA,eAAe,uEAAc;AAC7B;AACA;AACA,qBAAqB,iFAA8B;AACnD,SAAS;AACT;AACA;AACA,uBAAuB,uEAAc;AACrC;AACA;AACA,qBAAqB,6EAA0B;AAC/C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kCAAkC,2EAAgB;AAClD;AACA;AACA,qBAAqB,mFAAgC;AACrD;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,6FAAyB;AACxC;AACA;AACA,qBAAqB,sFAAmC;AACxD;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzCmH;AACnH;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA,uCAAuC,aAAa,EAAE,KAAK;AAC3D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8BAA8B,iEAAuB,SAAS,mBAAmB;AACjF;AACA,0BAA0B,iEAAuB,+EAA+E,mBAAmB;AACnJ;AACA,qBAAqB;AACrB;AACA;AACA,2BAA2B,yEAA+B;AAC1D;AACA;AACA,sBAAsB,kEAAwB,+EAA+E,SAAS;AACtI;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CoG;AACrC;AACV;AACL;AAClB;;;;;;;;;;;;;;;;ACJ2B;AACzD;AACA;AACA;AACA;AACO;AACP,YAAY,OAAO;AACnB,YAAY,oBAAoB;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;AC3BgJ;AAChJ;AACA;AACA;AACA;AACO;AACP,YAAY,0CAA0C;AACtD,IAAI,6DAAe,UAAU,4EAAkC;AAC/D,YAAY,kCAAkC;AAC9C;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,KAAK;AACL;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0EAAgC;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,0EAAgC;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;ACrC2F;AAC3F;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,OAAO;AACnB,YAAY,oBAAoB;AAChC;AACA;AACA,KAAK;AACL;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0EAAgC;AAClD;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;AC5BuH;AACT;AAC9G;AACA;AACA;AACA;AACO;AACP,YAAY,0CAA0C;AACtD,IAAI,6DAAe,UAAU,4EAAkC;AAC/D;AACA,YAAY,kCAAkC;AAC9C;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,KAAK;AACL;AACA,kBAAkB,0EAAgC;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA,aAAa,mEAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA,2BAA2B,gEAAe;AAC1C,8BAA8B,mEAAkB;AAChD;AACA,yBAAyB,iEAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9C8G;AAC9G;AACA;AACA;AACA;AACO;AACP,YAAY,0CAA0C;AACtD,IAAI,6DAAe,UAAU,4EAAkC;AAC/D,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;ACrB8G;AAC9G;AACA;AACA;AACA;AACO;AACP,YAAY,yBAAyB;AACrC,IAAI,6DAAe,UAAU,4EAAkC;AAC/D,YAAY,kCAAkC;AAC9C;AACA,kBAAkB,QAAQ;AAC1B;AACA,KAAK;AACL;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF;AACjF;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB;AAC7D;AACA,qCAAqC,qBAAqB;AAC1D;AACA,mBAAmB,UAAU,IAAI,cAAc,EAAE,WAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU,IAAI,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sEAAsE,QAAQ,wBAAwB,6BAA6B;AACnI;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7NA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5EsG;AAC/F;AACP;AACA,iBAAiB,+EAAqC;AACtD,kBAAkB,wEAA8B,qBAAqB,IAAI;AACzE;AACA;;;;;;;;;;;;;;;;;ACNuD;AACJ;AAC5C;AACP;AACA,kCAAkC,mEAAc;AAChD;AACA;AACA;AACA,oBAAoB,+DAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjBsE;AACH;AAC5D;AACP,uBAAuB,+DAAa;AACpC,2BAA2B,mEAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sBAAsB,2EAAuB;AAC7C;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjEmD;AAC5C;AACP;AACA,qBAAqB,+DAAe;AACpC;AACA;AACA;AACA;AACA;AACO;AACP;AACA,qBAAqB,+DAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+DAA+D;AAC5F;AACA;AACA;;;;;;;;;;;;;;;;;AC3BiD;AACE;AAC5C;AACP;AACA,qBAAqB,+DAAe;AACpC;AACA;AACA,kBAAkB,yDAAc;AAChC;AACA;;;;;;;;;;;;;;;;;;ACT4D;AACN;AACtD;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,sEAAiB;AACxC;AACA,kCAAkC,mEAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBkD;AACc;AACU;AAC2B;AACjC;AAC3B;AACmB;AACT;AACT;AACoD;AACT;AAC9E;AACA;AACQ;AACf;AACA,gBAAgB,uCAAuC;AACvD,cAAc,qEAAU;AACxB,aAAa,qEAAU;AACvB;AACA;AACA;AACA,QAAQ,2FAA6B;AACrC,uBAAuB,qEAAU;AACjC,cAAc,gEAAgB;AAC9B,2BAA2B,mDAAc;AACzC;AACA;AACA;AACA,kCAAkC,kDAAQ;AAC1C,SAAS;AACT;AACA;AACA,cAAc,iFAAoB;AAClC,QAAQ,qFAAwB;AAChC,2CAA2C,mFAAsB;AACjE;AACA;AACA,SAAS;AACT,oCAAoC,yEAAe;AACnD,QAAQ,iFAAmB,GAAG,yDAA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FAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAe;AACvB;AACA;AACA;AACA,YAAY,iEAAe;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6EAAgB;AACnD;AACA,qCAAqC,mFAAsB;AAC3D,gBAAgB,kDAAQ;AACxB,2CAA2C,6EAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA,mCAAmC,kDAAQ;AAC3C;AACA;AACA;AACA;AACA,wBAAwB,iEAAe;AACvC;AACA;AACA;AACA,wBAAwB,iEAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iEAAe;AAC3B;AACA,sCAAsC;AACtC,kBAAkB,iEAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yEAAgB;AACpC,eAAe,gDAAmB,CAAC,6DAAc;AACjD;AACA,mBAAmB,gDAAmB,CAAC,4DAAc,IAAI,8FAA8F;AACvJ;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxI+B;AACoB;AACmB;AACX;AACpD,mCAAmC,6DAAW;AACrD;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAW;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gBAAgB,gDAAmB,CAAC,qDAAa,IAAI,cAAc;AACnE,YAAY,gDAAmB,CAAC,+EAAuB,IAAI,gCAAgC;AAC3F;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB+B;AACQ;AACqF;AAClF;AACD;AACY;AACR;AACH;AACG;AACF;AACI;AACJ;AAC0C;AAC9E;AACP,YAAY,gDAAmB,CAAC,gEAAa,IAAI,mBAAmB,sDAAW,EAAE;AACjF,QAAQ,gDAAmB,6BAA6B;AACxD;AACA;AACA,0CAA0C,2CAAc;AACxD,yGAAyG,sDAAQ;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,qDAAO;AACd;AACA,eAAe,gDAAmB,CAAC,wDAAY;AAC/C;AACA;A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A;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;ACjB4D;AACP;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA,gBAAgB,kEAAU;AAC1B;AACA;AACA,iCAAiC,qEAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,uBAAuB,qEAAU;AACjC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACO;;;;;;;;;;;;;;;;ACjC0C;AACtB;;;;;;;;;;;;;;;;;;;ACDkB;AACH;AAC6B;AAChE;AACP;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mFAAsB;AACnD;AACA,YAAY,kDAAQ;AACpB;AACA;AACA;AACA,kCAAkC,uDAAQ;AAC1C;AACA;AACA;AACA,yBAAyB,oBAAoB;AAC7C,uBAAuB;AACvB,aAAa;AACb;AACA,iCAAiC,mFAAsB;AACvD,YAAY,kDAAQ;AACpB;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChC6D;AACV;AACW;AACc;AACrE,qCAAqC,mDAAM;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2EAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wDAAW;AACrD;AACA,2BAA2B,kDAAK;AAChC,yCAAyC,oFAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;;;;;;;;;AC/C8E;AAChB;AACZ;AACH;AACK;AACJ;AAChD;AACP;AACA;AACA,+BAA+B,8DAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,kCAAkC,6EAAmB;AACrD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oCAAoC,uEAAU;AAC9C;AACA;AACA;AACA,6GAA6G,uDAAa;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,+DAA+D,kDAAQ;AACvE;AACA;AACA,oBAAoB,kDAAQ;AAC5B;AACA,0BAA0B,mEAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iGAA8B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAQ;AACxB;AACA;AACA,wDAAwD,kDAAQ;AAChE,iBAAiB,kDAAQ;AACzB;AACA,gBAAgB,kDAAQ;AACxB;AACA;AACA;AACA;AACA,uCAAuC,cAAc,WAAW,cAAc;AAC9E,gBAAgB,kDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;ACjJ0C;AACnB;AACvB;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS,yBAAyB,GAAG,UAAU;AACrF;AACA;AACA,+BAA+B,kDAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kDAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kDAAQ;AAC9B;AACA,YAAY,kDAAQ,2CAA2C,wCAAwC;AACvG;AACA;AACA;AACA;AACA,+BAA+B,sDAAU;AACzC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC3DyD;AACE;AACJ;AACvD;AACA;AACA;AACA;AACA;AACA;AACO;AACP,8BAA8B,mEAAc;AAC5C;AACA;AACA;AACA;AACA,qBAAqB,kDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAU;AACd,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,qBAAqB,uDAAa;AAClC,SAAS;AACT,KAAK;AACL;AACO;AACP,8BAA8B,mEAAc;AAC5C;AACA;AACA;AACA;AACA,IAAI,uEAAU;AACd,mBAAmB,4CAA4C;AAC/D;AACA,+BAA+B;AAC/B,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;AC/C0C;AACQ;AACF;AACN;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,oBAAoB,sDAAS;AAC7B;AACA,YAAY,kDAAQ;AACpB;AACA;AACA;AACA,kBAAkB,kDAAQ;AAC1B;AACA;AACA;AACA;AACA,cAAc,+DAAc;AAC5B,cAAc,6DAAa;AAC3B;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACpDgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B,6DAAiB;AAC5C;AACA;AACA;AACA;AACO;AACP,2BAA2B,6DAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtFkD;AACa;AAC/D;AACO;AACP;AACA;AACA;AACA,YAAY,8CAAM;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,yBAAyB,6DAAiB;AAC1C,2BAA2B,yDAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAO;AACrC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+CAAO,2BAA2B,8CAAM;AACnD;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEsD;AAClB;AACuC;AACb;AAC7B;AACuD;AACvC;AACgB;AACoC;AAC9F;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wBAAwB,8EAAsB;AAC9C,+BAA+B;AAC/B,SAAS;AACT;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,YAAY,EAAE,wDAAgB;AAC1C,QAAQ,uFAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,YAAY,EAAE,wDAAgB;AAC1C,iBAAiB,uFAAqB;AACtC,uBAAuB,iDAAS;AAChC;AACA;AACA,kBAAkB,yDAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB,+CAAQ;AAC5B;AACA,uBAAuB,yEAAoB;AAC3C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACO;AACP,YAAY,0BAA0B,EAAE,wDAAgB;AACxD;AACA;AACO;AACP,YAAY,YAAY,EAAE,wDAAgB;AAC1C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,2CAA2C;AAC3C;AACA;AACO;AACP;AACA;AACA,2CAA2C;AAC3C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,uBAAuB,iDAAS;AAChC,8BAA8B,iDAAS;AACvC;AACA;AACA;AACA;AACA,KAAK;AACL,6BAA6B;AAC7B;AACA;AACA;AACA,oBAAoB,gDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW,gDAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iDAAS;AACpC;AACA;AACA;AACA,sBAAsB,yCAAyC,iDAAS,cAAc;AACtF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,6EAAsB;AACzC;AACA;AACA,4BAA4B,OAAO;AACnC;AACA,uCAAuC,OAAO;AAC9C;AACA,8BAA8B,OAAO;AACrC;AACA,8BAA8B,OAAO;AACrC;AACA,+BAA+B,OAAO;AACtC;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,uCAAuC,2EAAuB;AAC9D,uBAAuB,wFAAgC;AACvD;AACA;AACA,0BAA0B,aAAa,SAAS,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrWiC;AACyC;AACzB;AACkT;AACgB;AACjU;AACH;AACsB;AACU;AACxB;AACQ;AACZ;AACV;AACoB;AACO;AACd;AACH;AAC8C;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,iBAAiB,gDAAM,CAAC,4DAAO,CAAC,6DAAQ,CAAC,gEAAK;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qDAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAW;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kFAAoB;AACpC;AACA,SAAS;AACT,KAAK;AACL;AACA,YAAY,mEAAU;AACtB;AACA,8BAA8B,0EAAiB;AAC/C,gCAAgC,iFAAmB;AACnD;AACA;AACA,+BAA+B,yDAAa;AAC5C;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,qBAAqB,yEAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,4DAAgB;AAC1C,qBAAqB,yEAAiB;AACtC,KAAK;AACL;AACA;AACA,qBAAqB,yDAAa;AAClC,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,0BAA0B,wDAAY;AACtC,KAAK;AACL;AACA,0BAA0B,4DAAgB;AAC1C,KAAK;AACL;AACA,0BAA0B,iEAAqB;AAC/C;AACA,sCAAsC,gEAAc;AACpD,8BAA8B,6DAAiB;AAC/C;AACA;AACA,8BAA8B,iEAAqB;AACnD,8BAA8B,+DAAmB;AACjD;AACA,KAAK;AACL;AACA,0BAA0B,mEAAuB;AACjD,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,6BAA6B,aAAa;AAC1C,qBAAqB,yDAAa;AAClC,gDAAgD;AAChD,sCAAsC,sBAAsB;AAC5D,KAAK;AACL,8BAA8B,sBAAsB;AACpD;AACA,qBAAqB,oEAAwB;AAC7C,gBAAgB,sBAAsB;AACtC,oBAAoB,gEAAe;AACnC,wBAAwB,iFAAe;AACvC;AACA,mEAAmE,iBAAiB;AACpF,6BAA6B,sDAAU;AACvC;AACA,yBAAyB,2DAAe;AACxC;AACA,gBAAgB,kFAAoB;AACpC,aAAa;AACb;AACA;AACA;AACA;AACA,yBAAyB,wDAAY;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,qBAAqB,yDAAa;AAClC,qBAAqB,2DAAe;AACpC;AACA,oCAAoC,8DAA8D;AAClG,KAAK;AACL;AACA;AACA,+BAA+B,yDAAa;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,0DAAc;AACxC,wBAAwB,yDAAa;AACrC;AACA,kBAAkB,2DAAY,GAAG,mBAAmB;AACpD,KAAK;AACL;AACA,0BAA0B,yDAAa;AACvC;AACA;AACA;AACA,yBAAyB,gEAAoB;AAC7C,oCAAoC,sBAAsB;AAC1D;AACA,KAAK;AACL;AACA,0BAA0B,4DAAgB;AAC1C,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,oBAAoB,gEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,6BAA6B,6DAAiB;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,YAAY,wFAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6DAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC,MAAM,SAAS,aAAoB,qBAAqB;AACzD;AACA;AACA;AACA,aAAa,sEAAiB,QAAQ,yDAAU,KAAK,gEAAiB;AACtE,8BAA8B,gEAAgB;AAC9C,CAAC;AACM;AACP,qBAAqB,6DAAiB;AACtC,sBAAsB,yDAAa;AACnC,YAAY,iBAAiB;AAC7B;AACA;AACA,YAAY,gBAAgB;AAC5B,aAAa;AACb;AACO;AACP,cAAc,kBAAkB,GAAG,WAAW;AAC9C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,QAAQ,0DAAe;AACvB,QAAQ,6EAAwB;AAChC,QAAQ,qFAAgC;AACxC,QAAQ,oFAA+B;AACvC,QAAQ,8FAAyC;AACjD,QAAQ,qFAAgC;AACxC,QAAQ,6EAAwB;AAChC,QAAQ,6FAAwC;AAChD,QAAQ,6FAAwC;AAChD,QAAQ,qFAAgC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3V+D;AACZ;AACnD;AACA;AACO;AACP,2BAA2B,6DAAiB;AAC5C,uBAAuB,yDAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,YAAY,iEAAiE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+DAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrDA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChBO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAA2D;AACjF;AACA;;;;;;;;;;;;;;;;;;ACjBkC;AAC0B;AACrD;AACP;AACA;AACA;AACA;AACA,8CAA8C,iCAAiC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gDAAQ,mCAAmC,aAAa,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA,mCAAmC,qEAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,yCAAyC,MAAM,0BAA0B;AACvF;;;;;;;;;;;;;;;;ACjDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,IAAI,EAAE,QAAQ,EAAE,QAAQ;AACzD,6BAA6B,IAAI,EAAE,qBAAqB,EAAE,QAAQ;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;ACtE6D;AAC7D;AACA,4BAA4B,qEAAU;AACtC;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrCO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACb+C;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,kEAAgB;AACrC,uBAAuB,yDAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,yBAAyB,kEAAgB;AACzC;AACA;AACA,kBAAkB,kEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kEAAgB;AAClC;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wDAAwD,iBAAiB,WAAW,KAAK;AACzF;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACO;AACP;AACA,8CAA8C,6BAA6B,WAAW,qBAAqB;AAC3G;AACA;AACA;;;;;;;;;;;;;;;;;;ACtD2E;AACnC;AACxC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,kCAAkC,qDAAc;AAChD;AACA;AACA;AACA,sCAAsC,iEAAU;AAChD,uBAAuB;AACvB,SAAS;AACT,qBAAqB,2EAAoB;AACzC,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BqD;AACR;AACU;AACI;AACL;AACkC;AACsC;AACjE;AACtD;AACP;AACA;AACA;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,kBAAkB,sEAAc;AAChC;AACA;AACA;AACA;AACA,QAAQ,oEAA0B;AAClC,QAAQ,wDAAiB;AACzB;AACA,kBAAkB,iEAAU;AAC5B;AACA;AACA;AACA;AACA,QAAQ,kDAAQ;AAChB;AACA;AACA;AACA;AACA;AACO;AACP,IAAI,uFAA0B;AAC9B,IAAI,oEAA0B;AAC9B,IAAI,wDAAiB;AACrB,UAAU,iEAAU;AACpB,8BAA8B,qDAAc;AAC5C;AACA;AACA;AACA,gBAAgB,+DAAe;AAC/B;AACA,0BAA0B,iGAA8B;AACxD,kBAAkB,kDAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,UAAU,iFAAoB;AAC9B;AACA,IAAI,qFAAwB;AAC5B;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;ACzG8D;AACd;AACL;AAC8C;AACzF;AACA;AACA;AACA;AACA,yBAAyB,wDAAG,gCAAgC;AAC5D;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D,mCAAmC,6BAA6B;AAChE,SAAS;AACT,KAAK;AACL;AACA;AACA,yBAAyB,wDAAG,yBAAyB;AACrD;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA,+BAA+B,uDAAU;AACzC,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2BAA2B,QAAQ,8DAAO;AACtD;AACA;AACA,aAAa;AACb;AACA;AACO;AACP;AACA;AACA;AACA;AACA,+BAA+B,iEAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACO;AACP;AACA,QAAQ,4DAAU;AAClB;AACA;AACA;AACA,QAAQ,kEAAgB;AACxB;AACA;AACA;AACA,QAAQ,uEAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACO;AACA;AACP,eAAe,wBAAwB;AACvC;AACA,iBAAiB,KAAK,8BAA8B;AACpD,2BAA2B,QAAQ,EAAE,OAAO;AAC5C,wBAAwB;AACxB;AACO;AACP;AACA;AACA;AACA;AACA,mEAAmE,KAAK,MAAM,SAAS;AACvF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AAC+C;AACxC;AACP,WAAW,6DAAM;AACjB","sources":["webpack://@anaconda/assistant/../../lib/assistant-components/lib/AssistantComponentContext.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/BaseElement.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Button.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Div.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Style.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/baseElementUtils.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/contents/TermsAndConditions.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/contents/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/icons.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/SettingsPage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/TermsAndConditionsPage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/pageChildFixer.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/style/styleUtils.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/accessToken.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/assistant.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/environmentTypes.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/http.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/index.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/fetchAccess.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/fetchSuggestions.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/fetchTermsAndConditions.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/streamResponse.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/submitCodeExecutionResult.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/submitFeedback.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/publicTypes.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/responseTokens.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/transformations.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/validators.js","webpack://@anaconda/assistant/../../lib/assistant/lib/api/access.js","webpack://@anaconda/assistant/../../lib/assistant/lib/api/assistant-request-generator.js","webpack://@anaconda/assistant/../../lib/assistant/lib/api/feedback.js","webpack://@anaconda/assistant/../../lib/assistant/lib/api/terms-and-conditions-version.js","webpack://@anaconda/assistant/../../lib/assistant/lib/assistant-sdk.js","webpack://@anaconda/assistant/../../lib/assistant/lib/assistant_plugin.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/RemoveAfterHide.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/access-screen.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/add-context-popup.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-button.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-login.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-panel-container.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-panel-widget.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-panel.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/back-button.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/chat-header.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/chat-messages.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/chat-panel-footer.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/chat-panel.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/common.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/error-popup.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/error-screen.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/errorMessage.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/explain-popup.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/history-menu.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/home-screen/dataframe-options.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/home-screen/generate-code.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/home-screen/generate-suggestions.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/home-screen/home-screen.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/icon.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/messageButtons.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/notebook-error-helper.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/settings.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/sub-header.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/switch.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/use-should-animate-feedback.js","webpack://@anaconda/assistant/../../lib/assistant/lib/config.js","webpack://@anaconda/assistant/../../lib/assistant/lib/index.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/activateAssistantWithCodeSelection.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/assistantSidebarWidget.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/extension-load-utils.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/fetchDiskState.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/initializeAssistant.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/syncDiskState.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/syncStateDebounced.js","webpack://@anaconda/assistant/../../lib/assistant/lib/store/home-screen-state-fns.js","webpack://@anaconda/assistant/../../lib/assistant/lib/store/rehydration-utils.js","webpack://@anaconda/assistant/../../lib/assistant/lib/store/state-fns.js","webpack://@anaconda/assistant/../../lib/assistant/lib/store/store.js","webpack://@anaconda/assistant/../../lib/assistant/lib/store/suggestions-fns.js","webpack://@anaconda/assistant/../../lib/assistant/lib/store/test-storage.js","webpack://@anaconda/assistant/../../lib/assistant/lib/types.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/code-cleaner.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/contextMessage.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/dataframe-checker.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/environmentType.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/errors.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/getCookies.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/launchdarkly/constants.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/launchdarkly/handler.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/nucleus/account.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/nucleus/accountUtils.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/nucleus/auth.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/specialPrefixes.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/text-selection-utils.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/token-counter.js"],"sourcesContent":["import * as React from 'react';\n/**\n * Context for AssistantComponent\n * - Used to pass parentClassName to children\n * @alpha\n */\nexport const AssistantComponentContext = React.createContext({});\n","import * as React from 'react';\nimport { AssistantComponentContext } from '../AssistantComponentContext';\nimport { rootClassName } from '../style/styleUtils';\n/**\n * Assistant BaseElement component.\n * - Adds a class name to the div based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function BaseElement(props) {\n    const { parentClassName, replaceChildren } = React.useContext(AssistantComponentContext);\n    const Tag = props.as || 'div';\n    const parentPrefix = parentClassName ? `${parentClassName}-` : '';\n    const asChildName = props.asChildName || Tag;\n    const newParentClassName = `${parentPrefix}${asChildName}`;\n    const childClassName = `${rootClassName}-${newParentClassName}`;\n    const replacement = replaceChildren?.(childClassName);\n    if (replacement) {\n        return replacement;\n    }\n    // Remove asChildName and as from props\n    const { asChildName: _, as: __, ...cleanProps } = props;\n    return (React.createElement(AssistantComponentContext.Provider, { value: {\n            parentClassName: newParentClassName,\n            replaceChildren\n        } },\n        React.createElement(Tag, Object.assign({}, cleanProps, { className: childClassName }))));\n}\n","import * as React from 'react';\nimport { BaseElement } from './BaseElement';\n/**\n * Assistant Button component.\n * - Adds a class name to the div based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function Button(props) {\n    return React.createElement(BaseElement, Object.assign({}, props, { as: \"button\" }));\n}\n","import * as React from 'react';\nimport { BaseElement } from './BaseElement';\n/**\n * Assistant Div component.\n * - Adds a class name to the div based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function Div(props) {\n    return React.createElement(BaseElement, Object.assign({}, props, { as: \"div\" }));\n}\n","import * as React from 'react';\nimport { BaseElement } from './BaseElement';\n/**\n * Assistant Style component.\n * - Adds a class name to the div based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function Style(props) {\n    return React.createElement(BaseElement, Object.assign({}, props, { as: \"style\" }));\n}\n","/**\n * Utility function to match a child name with a callback\n * @alpha\n */\nexport function matchChildName(name, callback) {\n    return childClassName => {\n        if (childClassName === name ||\n            childClassName.lastIndexOf(`-${name}`) !== -1 ||\n            childClassName.match(name)) {\n            return callback(childClassName);\n        }\n        return null;\n    };\n}\n/**\n * Utility function to match multiple child names with callbacks\n * @alpha\n */\nexport function matchMultipleChildNames(...childNamePairs) {\n    return childClassName => {\n        for (const childNamePair of childNamePairs) {\n            const [name, callback] = childNamePair;\n            const match = matchChildName(name, callback)(childClassName);\n            if (match) {\n                return match;\n            }\n        }\n        return null;\n    };\n}\n","export * from './BaseElement';\nexport * from './Button';\nexport * from './Div';\nexport * from './baseElementUtils';\n","import React from 'react';\nimport { Div } from '../base-elements/Div';\nimport { Button } from '../base-elements/Button';\nimport { Style } from '../base-elements/Style';\n/**\n * Style for the TermsAndConditions component.\n * @alpha\n */\nexport const styleOfTermsAndConditions = `\n.anaconda-assistant-terms {\n  background: white;\n  border-radius: 4px;\n  color: #212121;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.anaconda-assistant-terms-data-collection,\n.anaconda-assistant-terms-accept-terms {\n  padding: 0px 20px 0px 20px;\n}\n\n.anaconda-assistant-terms-data-collection-header {\n  font-family: 'Inter', sans-serif;\n  font-size: 24px;\n  font-weight: lighter;\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n\n.anaconda-assistant-terms-data-collection-content {\n  font-size: 13px;\n  font-weight: normal;\n}\n\n.anaconda-assistant-terms-data-collection-content a {\n  color: #6c5af6;\n  text-decoration: underline;\n}\n\n.anaconda-assistant-terms-data-collection-content b {\n  color: #080;\n  font-family: 'Inter', sans-serif;\n}\n\n.anaconda-assistant-terms-data-collection-setting,\n.anaconda-assistant-terms-accept-terms-setting {\n  align-items: center;\n  display: flex;\n  font-size: 13px;\n  gap: 20px;\n  justify-content: end;\n  margin: 20px 0;\n}\n\n.anaconda-assistant-terms-data-collection-setting-description,\n.anaconda-assistant-terms-accept-terms-setting-description {\n  width: calc(100% - 40px);\n}\n\n.anaconda-assistant-terms-accept-terms-header {\n  font-family: 'Inter', sans-serif;\n  font-size: 24px;\n  font-weight: lighter;\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n\n.anaconda-assistant-terms-accept-terms-content {\n  font-size: 13px;\n  font-weight: normal;\n}\n\n.anaconda-assistant-terms-accept-terms-content a {\n  color: #6c5af6;\n  text-decoration: underline;\n}\n\n.anaconda-assistant-terms-accept-terms-content b {\n  color: #080;\n  font-family: 'Inter', sans-serif;\n}\n\n.anaconda-assistant-terms-accept-terms-button {\n  background: #4fab4f;\n  border-radius: 4px;\n  border: none;\n  color: white;\n  font-size: 16px;\n  margin-left: auto;\n  margin-top: 10px;\n  padding: 12px;\n}\n\n.anaconda-assistant-terms-accept-terms-button:disabled {\n  background: #bdbdbd;\n  color: #212121;\n  cursor: default;\n}\n\n.anaconda-assistant-terms-accept-terms-button:hover:enabled {\n  color: black;\n  cursor: pointer;\n  background: #0cca4a;\n}\n`;\n/**\n * Terms and Conditions component.\n * @alpha\n */\nexport function TermsAndConditions(props) {\n    const { accept, enableDataCollection, setEnableDataCollection, olderThan13, setOlderThan13 } = props;\n    return (React.createElement(Div, { asChildName: \"terms\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfTermsAndConditions),\n        React.createElement(Div, { asChildName: \"data-collection\" },\n            React.createElement(Div, { asChildName: \"header\" }, \"Data Collection\"),\n            React.createElement(Div, { asChildName: \"content\" }, \"Help us improve the Anaconda Assistant by allowing us to collect and use data from your chat messages. You can opt out of this at any time in the settings menu at the top-right of the Anaconda Assistant.\"),\n            React.createElement(Div, { asChildName: \"setting\" },\n                React.createElement(Div, { asChildName: \"switch\" },\n                    React.createElement(\"input\", { type: \"checkbox\", checked: enableDataCollection, onChange: event => setEnableDataCollection(event.target.checked) })),\n                React.createElement(Div, { asChildName: \"description\" }, \"By opting in, you acknowledge and agree that we collect your messages and additional metadata, as well as sensitive information you might share.\"))),\n        React.createElement(Div, { asChildName: \"accept-terms\" },\n            React.createElement(Div, { asChildName: \"header\" }, \"Terms and Conditions\"),\n            React.createElement(Div, { asChildName: \"content\" },\n                \"By continuing, you agree to our\",\n                ' ',\n                React.createElement(\"a\", { href: \"https://legal.anaconda.com/policies/en/?name=offering-specific-terms#anaconda-assistant-terms-and-conditions\", target: \"_blank\" }, \"Terms and Conditions\"),\n                ' ',\n                \"and\",\n                ' ',\n                React.createElement(\"a\", { href: \"https://www.anaconda.com/privacy-policy\", target: \"_blank\" }, \"Privacy Policy\"),\n                \".\"),\n            React.createElement(Div, { asChildName: \"setting\" },\n                React.createElement(Div, { asChildName: \"switch\" },\n                    React.createElement(\"input\", { \"data-testid\": \"older-than-13-checkbox\", type: \"checkbox\", checked: olderThan13, onChange: event => setOlderThan13(event.target.checked) })),\n                React.createElement(Div, { asChildName: \"description\" }, \"I hereby confirm that I am older than 13 years of age.\")),\n            React.createElement(Button, { asChildName: \"button\", disabled: !olderThan13, onClick: () => {\n                    if (!olderThan13) {\n                        return;\n                    }\n                    accept();\n                } }, \"Continue\"))));\n}\n","export * from './TermsAndConditions';\n","import React from 'react';\n/**\n * Icons used in Anaconda Assistant.\n * @alpha\n */\nexport var Icons;\n(function (Icons) {\n    /**\n     * Anaconda Assistant logo.\n     */\n    function ChatBot(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 640 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M160 0C124.7 0 96 28.7 96 64V176H59.7c-5.5-9.6-15.9-16-27.7-16c-17.7 0-32 14.3-32 32s14.3 32 32 32c11.8 0 22.2-6.4 27.7-16H96V352c0 35.3 28.7 64 64 64h64v80c0 6.1 3.4 11.6 8.8 14.3s11.9 2.1 16.8-1.5L373.3 416H480c35.3 0 64-28.7 64-64V208h36.3c5.5 9.6 15.9 16 27.7 16c17.7 0 32-14.3 32-32s-14.3-32-32-32c-11.8 0-22.2 6.4-27.7 16H544V64c0-35.3-28.7-64-64-64H160zm0 128c0-17.7 14.3-32 32-32H448c17.7 0 32 14.3 32 32V256c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V128zm64 96a32 32 0 1 0 0-64 32 32 0 1 0 0 64zm192 0a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\" })));\n    }\n    Icons.ChatBot = ChatBot;\n    /**\n     * Anaconda logo.\n     */\n    function AnacondaLogo(props) {\n        return (React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 20 20\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" }, props),\n            React.createElement(\"g\", null,\n                React.createElement(\"path\", { d: \"M3.69338 15.348V15.2893C3.69338 14.6966 3.75197 14.1333 3.84112 13.5713V13.5126L3.78253 13.4832C3.25018 13.2763 2.7484 12.9799 2.24662 12.713L2.18803 12.6836L2.15874 12.7423C1.83398 13.3938 1.56781 14.1052 1.33093 14.8167L1.30164 14.8754L1.36022 14.9048C2.09888 15.1117 2.83755 15.2599 3.60551 15.3199L3.69466 15.3493L3.69338 15.348Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M5.22926 5.18455C5.22926 5.16496 5.22926 5.16496 5.22926 5.18455C4.78606 5.18455 4.37215 5.21393 3.92896 5.24331C3.98754 5.68781 4.0474 6.10293 4.16584 6.54743C4.4613 6.04417 4.81535 5.5703 5.22926 5.18455Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M3.69337 15.8807V15.8219H3.63479C3.01456 15.7632 2.36505 15.6444 1.71426 15.4962L1.53723 15.4669L1.62638 15.615C2.18802 16.4746 2.89612 17.2449 3.72394 17.9257L3.84238 18.0445V17.8375C3.75323 17.1555 3.69464 16.4746 3.69464 15.882L3.69337 15.8807Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M6.79449 0.533936C6.02653 0.800892 5.28787 1.15598 4.60779 1.60048C5.10957 1.68989 5.61263 1.80741 6.11441 1.95557C6.32073 1.48169 6.52832 1.00781 6.79449 0.533936Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M10.0153 0C9.6307 0 9.24736 0.029378 8.89331 0.0587559C9.42566 0.413846 9.92744 0.828969 10.3999 1.27347L10.7845 1.62856L10.3999 2.01431C10.0752 2.31064 9.75042 2.66573 9.45495 3.0221V3.05148C9.45495 3.05148 9.39637 3.11023 9.30722 3.22902C9.5441 3.19964 9.77971 3.19964 10.0166 3.19964C13.7685 3.19964 16.811 6.25112 16.811 10.0141C16.811 13.777 13.7685 16.8285 10.0166 16.8285C8.71628 16.8285 7.50513 16.4734 6.471 15.8207C5.96921 15.8794 5.43686 15.9101 4.93508 15.9101C4.6982 15.9101 4.46259 15.9101 4.22571 15.8807C4.255 16.6509 4.31486 17.4505 4.43202 18.2808C6.0278 19.3767 7.94705 19.9987 10.0153 19.9987C15.54 19.9987 20 15.5243 20 9.98467C20 4.44501 15.5387 0 10.0153 0Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M8.68565 2.37066C8.89197 2.13308 9.09956 1.89678 9.30588 1.68858C8.83339 1.30283 8.3316 0.918363 7.82855 0.592651C7.50379 1.12656 7.23761 1.68858 7.00073 2.25187C7.44393 2.42941 7.88713 2.60696 8.33033 2.81516C8.50736 2.57758 8.65509 2.40003 8.68438 2.37066H8.68565Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M1.92056 8.08915L1.94985 8.1479L2.00843 8.11852C2.48093 7.79281 2.95342 7.4671 3.45647 7.20014L3.51506 7.17077V7.11201C3.36732 6.54872 3.24888 5.95605 3.1903 5.36338V5.30463H3.13171C2.39305 5.45279 1.65438 5.63034 0.975576 5.89729L0.916992 5.92667L0.946284 5.98543C1.1526 6.69689 1.50792 7.40707 1.92056 8.08915Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M1.80213 9.03692L1.74355 9.09568C1.2112 9.54018 0.70942 10.0141 0.236929 10.548L0.178345 10.6067L0.236929 10.6655C0.769277 11.11 1.30035 11.5251 1.89128 11.9096L1.94987 11.939L1.97916 11.8802C2.24533 11.4063 2.5408 10.9618 2.86556 10.5173L2.89485 10.4586L2.86556 10.4292C2.51151 10.0141 2.15619 9.59894 1.83143 9.12506L1.80213 9.03564V9.03692Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M5.73103 15.3774H5.90806L5.76032 15.2586C5.22797 14.8141 4.75548 14.3109 4.40143 13.7182V13.6888L4.28299 13.6301V13.7195C4.22441 14.2227 4.16455 14.7566 4.16455 15.2893V15.348H4.22313C4.46002 15.348 4.69563 15.3774 4.93251 15.3774H5.72976H5.73103Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M5.40623 4.29686C5.52467 3.7936 5.64311 3.31972 5.82014 2.84457C5.19991 2.66702 4.5504 2.51885 3.89961 2.42944C3.84102 3.11152 3.84102 3.73357 3.87031 4.38499C4.3721 4.32624 4.87515 4.29558 5.40623 4.29558V4.29686Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M6.3512 4.26617C6.7944 3.99921 7.26689 3.76291 7.73938 3.58409C7.38533 3.40654 7.03 3.25838 6.67595 3.13959C6.55751 3.49468 6.43907 3.88042 6.3512 4.26489V4.26617Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M1.71294 12.3847H1.65436C1.15258 12.059 0.649521 11.7027 0.17703 11.3182L0.0292969 11.1994L0.0585888 11.3769C0.17703 12.3247 0.443204 13.2737 0.855838 14.1615L0.914422 14.3096L0.973006 14.1615C1.17932 13.5982 1.4162 13.0362 1.68238 12.5023L1.71167 12.3835L1.71294 12.3847Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M2.98391 2.90332C2.39298 3.49598 1.86191 4.17679 1.448 4.88824C1.94978 4.74008 2.48213 4.62129 3.0132 4.5025C2.98391 3.96859 2.98391 3.43595 2.98391 2.90204V2.90332Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M3.27938 9.92594V9.7484C3.30867 9.12635 3.39782 8.53368 3.57484 7.97039L3.63343 7.79285L3.48569 7.88226C3.10108 8.11984 2.71774 8.35614 2.33312 8.62309L2.27454 8.65247L2.36369 8.71123C2.62986 9.06632 2.89603 9.45206 3.1915 9.77778L3.28065 9.92594H3.27938Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M3.36735 10.9631L3.33806 10.7855L3.24891 10.9337C2.98274 11.3194 2.71656 11.7333 2.48095 12.1484L2.45166 12.2072L2.51024 12.2365C2.92415 12.4741 3.36735 12.681 3.81055 12.888L3.95828 12.9467L3.8997 12.7986C3.63353 12.2353 3.4565 11.5838 3.36735 10.9618V10.9631Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M1.41747 8.56306L1.47606 8.53369L1.44677 8.47493C1.12201 7.97167 0.855833 7.43776 0.589659 6.90513L0.531075 6.75696L0.472491 6.9345C0.177025 7.85288 0.0292919 8.77126 0 9.74968V9.92722L0.118441 9.80843C0.503057 9.33455 0.946256 8.91943 1.41875 8.56434L1.41747 8.56306Z\", fill: \"#3DAE2B\" }))));\n    }\n    Icons.AnacondaLogo = AnacondaLogo;\n    /**\n     * Sparkle icon.\n     */\n    function Sparkle(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 16 16\", fill: \"none\" }, props),\n            React.createElement(\"path\", { d: \"M10.125 3.25C10.0312 3.1875 10 3.09375 10 3C10 2.90625 10.0312 2.84375 10.125 2.78125L12 2L12.75 0.15625C12.8125 0.0625 12.9062 0 13 0C13.0938 0 13.1562 0.0625 13.2188 0.15625L14 2L15.8438 2.78125C15.9375 2.84375 16 2.90625 16 3C16 3.09375 15.9375 3.1875 15.8438 3.25L14 4L13.2188 5.875C13.1562 5.96875 13.0938 6 13 6C12.9062 6 12.8125 5.96875 12.75 5.875L12 4L10.125 3.25ZM15.8438 12.7812C15.9375 12.8438 16 12.9062 16 13C16 13.0938 15.9375 13.1875 15.8438 13.25L14 14L13.2188 15.875C13.1562 15.9688 13.0938 16 13 16C12.9062 16 12.8125 15.9688 12.75 15.875L12 14L10.125 13.25C10.0312 13.1875 10 13.0938 10 13C10 12.9062 10.0312 12.8438 10.125 12.7812L12 12L12.75 10.1562C12.8125 10.0625 12.9062 10 13 10C13.0938 10 13.1562 10.0625 13.2188 10.1562L14 12L15.8438 12.7812ZM12 8C12 8.1875 11.875 8.375 11.7188 8.4375L8.1875 10.2188L6.4375 13.75C6.34375 13.9062 6.15625 14 6 14C5.78125 14 5.625 13.9062 5.53125 13.75L3.78125 10.2188L0.25 8.4375C0.09375 8.375 0 8.1875 0 8C0 7.8125 0.09375 7.625 0.25 7.5625L3.78125 5.78125L5.53125 2.28125C5.71875 1.9375 6.25 1.9375 6.4375 2.28125L8.1875 5.78125L11.7188 7.5625C11.875 7.625 12 7.8125 12 8Z\", fill: \"currentColor\" })));\n    }\n    Icons.Sparkle = Sparkle;\n    /**\n     * Settings icon.\n     */\n    function Settings(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M481.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-30.9 28.1c-7.7 7.1-11.4 17.5-10.9 27.9c.1 2.9 .2 5.8 .2 8.8s-.1 5.9-.2 8.8c-.5 10.5 3.1 20.9 10.9 27.9l30.9 28.1c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-39.7-12.6c-10-3.2-20.8-1.1-29.7 4.6c-4.9 3.1-9.9 6.1-15.1 8.7c-9.3 4.8-16.5 13.2-18.8 23.4l-8.9 40.7c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-8.9-40.7c-2.2-10.2-9.5-18.6-18.8-23.4c-5.2-2.7-10.2-5.6-15.1-8.7c-8.8-5.7-19.7-7.8-29.7-4.6L69.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l30.9-28.1c7.7-7.1 11.4-17.5 10.9-27.9c-.1-2.9-.2-5.8-.2-8.8s.1-5.9 .2-8.8c.5-10.5-3.1-20.9-10.9-27.9L8.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l39.7 12.6c10 3.2 20.8 1.1 29.7-4.6c4.9-3.1 9.9-6.1 15.1-8.7c9.3-4.8 16.5-13.2 18.8-23.4l8.9-40.7c2-9.1 9-16.3 18.2-17.8C213.3 1.2 227.5 0 242 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l8.9 40.7c2.2 10.2 9.4 18.6 18.8 23.4c5.2 2.7 10.2 5.6 15.1 8.7c8.8 5.7 19.7 7.7 29.7 4.6l39.7-12.6c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM242 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z\" })));\n    }\n    Icons.Settings = Settings;\n    /**\n     * Magic wand icon.\n     */\n    function MagicWand(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 576 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M234.7 42.7L192 64l42.7 21.3L256 128l21.3-42.7L320 64 277.3 42.7 256 0 234.7 42.7zM384.4 192.4l-32.8-32.8L432 79.2 464.8 112l-80.4 80.4zM96 32L64 96 0 128l64 32 32 64 32-64 64-32L128 96 96 32zM416 352l-64 32 64 32 32 64 32-64 64-32-64-32-32-64-32 64zM144 512l39.6-39.6L504.4 151.6 544 112 504.4 72.4 471.6 39.6 432 0 392.4 39.6 71.6 360.4 32 400l39.6 39.6 32.8 32.8L144 512z\" })));\n    }\n    Icons.MagicWand = MagicWand;\n    /**\n     * Copy icon\n     */\n    function Copy(props) {\n        // Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools\n        return (React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" }, props),\n            React.createElement(\"path\", { d: \"M6 11C6 8.17157 6 6.75736 6.87868 5.87868C7.75736 5 9.17157 5 12 5H15C17.8284 5 19.2426 5 20.1213 5.87868C21 6.75736 21 8.17157 21 11V16C21 18.8284 21 20.2426 20.1213 21.1213C19.2426 22 17.8284 22 15 22H12C9.17157 22 7.75736 22 6.87868 21.1213C6 20.2426 6 18.8284 6 16V11Z\", stroke: \"currentColor\", strokeWidth: \"2\" }),\n            React.createElement(\"path\", { opacity: \"0.5\", d: \"M6 19C4.34315 19 3 17.6569 3 16V10C3 6.22876 3 4.34315 4.17157 3.17157C5.34315 2 7.22876 2 11 2H15C16.6569 2 18 3.34315 18 5\", stroke: \"currentColor\", strokeWidth: \"2\", strokeDasharray: \"2\" })));\n    }\n    Icons.Copy = Copy;\n    /**\n     * User icon.\n     */\n    function User(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512H418.3c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304H178.3z\" })));\n    }\n    Icons.User = User;\n    /**\n     * Send icon.\n     */\n    function Send(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M498.1 5.6c10.1 7 15.4 19.1 13.5 31.2l-64 416c-1.5 9.7-7.4 18.2-16 23s-18.9 5.4-28 1.6L284 427.7l-68.5 74.1c-8.9 9.7-22.9 12.9-35.2 8.1S160 493.2 160 480V396.4c0-4 1.5-7.8 4.2-10.7L331.8 202.8c5.8-6.3 5.6-16-.4-22s-15.7-6.4-22-.7L106 360.8 17.7 316.6C7.1 311.3 .3 300.7 0 288.9s5.9-22.8 16.1-28.7l448-256c10.7-6.1 23.9-5.5 34 1.4z\" })));\n    }\n    Icons.Send = Send;\n    /**\n     * Rotate left icon.\n     */\n    function RotateLeft(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M126.9 142.9L184 200l-24 24H0V64L24 40 81.6 97.6l0 0c87.5-87.5 229.3-87.5 316.8 0s87.5 229.3 0 316.8s-229.3 87.5-316.8 0l45.3-45.3c62.5 62.5 163.8 62.5 226.3 0s62.5-163.8 0-226.3s-163.8-62.5-226.3 0l0 0z\" })));\n    }\n    Icons.RotateLeft = RotateLeft;\n    /**\n     * Rotate right icon.\n     */\n    function RotateRight(props) {\n        // <!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M386.3 160H336c-17.7 0-32 14.3-32 32s14.3 32 32 32H464c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32s-32 14.3-32 32v51.2L414.4 97.6c-87.5-87.5-229.3-87.5-316.8 0s-87.5 229.3 0 316.8s229.3 87.5 316.8 0c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0c-62.5 62.5-163.8 62.5-226.3 0s-62.5-163.8 0-226.3s163.8-62.5 226.3 0L386.3 160z\" })));\n    }\n    Icons.RotateRight = RotateRight;\n    /**\n     * Play icon.\n     */\n    function Play(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c-7.6 4.2-12.3 12.3-12.3 20.9V344c0 8.7 4.7 16.7 12.3 20.9s16.8 4.1 24.3-.5l144-88c7.1-4.4 11.5-12.1 11.5-20.5s-4.4-16.1-11.5-20.5l-144-88c-7.4-4.5-16.7-4.7-24.3-.5z\" })));\n    }\n    Icons.Play = Play;\n    /**\n     * Error icon.\n     */\n    function Error(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm24-384v24V264v24H232V264 152 128h48zM232 368V320h48v48H232z\" })));\n    }\n    Icons.Error = Error;\n    /**\n     * Thumbs up icon.\n     */\n    function ThumbsUp(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2H464c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48H294.5c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3V320 272 247.1c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192H96c17.7 0 32 14.3 32 32V448c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32V224c0-17.7 14.3-32 32-32z\" })));\n    }\n    Icons.ThumbsUp = ThumbsUp;\n    /**\n     * Thumbs down icon.\n     */\n    function ThumbsDown(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2H464c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48H294.5c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3V320 272 247.1c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192H96c17.7 0 32 14.3 32 32V448c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32V224c0-17.7 14.3-32 32-32z\", transform: \"rotate(180, 256, 256)\" })));\n    }\n    Icons.ThumbsDown = ThumbsDown;\n    /**\n     * Change icon.\n     */\n    function Change(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 640 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M150.6 73.4c-12.5-12.5-32.8-12.5-45.3 0l-96 96c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L96 173.3V320c0 53 43 96 96 96H304c17.7 0 32-14.3 32-32s-14.3-32-32-32H192c-17.7 0-32-14.3-32-32V173.3l41.4 41.4c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-96-96zM336 96c-17.7 0-32 14.3-32 32s14.3 32 32 32H448c17.7 0 32 14.3 32 32V338.7l-41.4-41.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l96 96c12.5 12.5 32.8 12.5 45.3 0l96-96c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L544 338.7V192c0-53-43-96-96-96H336z\" })));\n    }\n    Icons.Change = Change;\n    /**\n     * Arrow right icon.\n     */\n    function ArrowRight(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\" })));\n    }\n    Icons.ArrowRight = ArrowRight;\n    /**\n     * Bars icon.\n     */\n    function Bars(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z\" })));\n    }\n    Icons.Bars = Bars;\n    /**\n     * Plus icon.\n     */\n    function Plus(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M256 80V48H192V80 224H48 16v64H48 192V432v32h64V432 288H400h32V224H400 256V80z\" })));\n    }\n    Icons.Plus = Plus;\n    /**\n     * Frame icon.\n     */\n    function Frame(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M448 128c0-17.7-14.3-32-32-32l-32 0 0-32c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 32L128 96l0-32c0-17.7-14.3-32-32-32S64 46.3 64 64l0 32L32 96C14.3 96 0 110.3 0 128s14.3 32 32 32l32 0 0 192-32 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l32 0 0 32c0 17.7 14.3 32 32 32s32-14.3 32-32l0-32 192 0 0 32c0 17.7 14.3 32 32 32s32-14.3 32-32l0-32 32 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-32 0 0-192 32 0c17.7 0 32-14.3 32-32zM128 352l0-192 192 0 0 192-192 0z\" })));\n    }\n    Icons.Frame = Frame;\n    /**\n     * Code icon.\n     */\n    function Code(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 640 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M392.8 1.2c-17-4.9-34.7 5-39.6 22l-128 448c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l128-448c4.9-17-5-34.7-22-39.6zm80.6 120.1c-12.5 12.5-12.5 32.8 0 45.3L562.7 256l-89.4 89.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l112-112c12.5-12.5 12.5-32.8 0-45.3l-112-112c-12.5-12.5-32.8-12.5-45.3 0zm-306.7 0c-12.5-12.5-32.8-12.5-45.3 0l-112 112c-12.5 12.5-12.5 32.8 0 45.3l112 112c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256l89.4-89.4c12.5-12.5 12.5-32.8 0-45.3z\" })));\n    }\n    Icons.Code = Code;\n    /**\n     * Chevron right icon.\n     */\n    function ChevronRight(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 320 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z\" })));\n    }\n    Icons.ChevronRight = ChevronRight;\n    /**\n     * Chevron left icon.\n     */\n    function ChevronLeft(props) {\n        return (React.createElement(\"svg\", Object.assign({ width: \"8\", height: \"14\", viewBox: \"0 0 8 14\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" }, props),\n            React.createElement(\"path\", { d: \"M7.82582 11.9242L2.9016 6.99996L7.82582 2.0757L6.5 0.75L0.25 6.99996L6.5 13.25L7.82582 11.9242Z\", fill: \"currentColor\" })));\n    }\n    Icons.ChevronLeft = ChevronLeft;\n    /**\n     * Message icon.\n     */\n    function Message(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M160 368c26.5 0 48 21.5 48 48v16l72.5-54.4c8.3-6.2 18.4-9.6 28.8-9.6H448c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H64c-8.8 0-16 7.2-16 16V352c0 8.8 7.2 16 16 16h96zm48 124l-.2 .2-5.1 3.8-17.1 12.8c-4.8 3.6-11.3 4.2-16.8 1.5s-8.8-8.2-8.8-14.3V474.7v-6.4V468v-4V416H112 64c-35.3 0-64-28.7-64-64V64C0 28.7 28.7 0 64 0H448c35.3 0 64 28.7 64 64V352c0 35.3-28.7 64-64 64H309.3L208 492z\" })));\n    }\n    Icons.Message = Message;\n    /**\n     * Solid message icon.\n     */\n    function SolidMessage(props) {\n        return (\n        // Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc.\n        React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M64 0C28.7 0 0 28.7 0 64V352c0 35.3 28.7 64 64 64h96v80c0 6.1 3.4 11.6 8.8 14.3s11.9 2.1 16.8-1.5L309.3 416H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H64z\" })));\n    }\n    Icons.SolidMessage = SolidMessage;\n    /**\n     * Close icon.\n     */\n    function Close(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 384 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" })));\n    }\n    Icons.Close = Close;\n    /**\n     * Clip icon.\n     */\n    function Clip(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", height: \"1em\", viewBox: \"0 0 448 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M364.2 83.8c-24.4-24.4-64-24.4-88.4 0l-184 184c-42.1 42.1-42.1 110.3 0 152.4s110.3 42.1 152.4 0l152-152c10.9-10.9 28.7-10.9 39.6 0s10.9 28.7 0 39.6l-152 152c-64 64-167.6 64-231.6 0s-64-167.6 0-231.6l184-184c46.3-46.3 121.3-46.3 167.6 0s46.3 121.3 0 167.6l-176 176c-28.6 28.6-75 28.6-103.6 0s-28.6-75 0-103.6l144-144c10.9-10.9 28.7-10.9 39.6 0s10.9 28.7 0 39.6l-144 144c-6.7 6.7-6.7 17.7 0 24.4s17.7 6.7 24.4 0l176-176c24.4-24.4 24.4-64 0-88.4z\" })));\n    }\n    Icons.Clip = Clip;\n    /**\n     * Warning icon.\n     */\n    function Warning(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480H40c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24V296c0 13.3 10.7 24 24 24s24-10.7 24-24V184c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\" })));\n    }\n    Icons.Warning = Warning;\n    /**\n     * Trash icon.\n     */\n    function Trash(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", height: \"1em\", viewBox: \"0 0 448 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\" })));\n    }\n    Icons.Trash = Trash;\n    /**\n     * Book icon.\n     */\n    function Book(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", height: \"1em\", viewBox: \"0 0 448 512\" }, props),\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z\" })));\n    }\n    Icons.Book = Book;\n    function DataCatalog(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: \"30\", height: \"31\", viewBox: \"0 0 30 31\" }, props),\n            React.createElement(\"path\", { d: \"M30 4.8125C30 4.82031 30 4.82812 30 4.83594C29.9609 7.48438 23.2578 9.625 15 9.625C6.74219 9.625 0.0390625 7.48438 0 4.83594C0 4.82812 0 4.82031 0 4.8125C0 2.15625 6.71875 0 15 0C23.2812 0 30 2.15625 30 4.8125ZM30 8.4375C30 8.4375 30 8.45312 30 8.46094C29.9609 11.1094 23.2578 13.25 15 13.25C6.74219 13.25 0.0390625 11.1094 0 8.46094V8.4375L0.078125 15.2187C0.078125 15.2187 0.078125 15.25 0.078125 15.2578C0.117188 17.8906 6.78125 20.0234 15 20.0234C23.2188 20.0234 29.8828 17.8906 29.9219 15.2578C29.9219 15.25 29.9219 15.2187 29.9219 15.2187L30 8.4375ZM30 18.4375C30 18.4375 30 18.4531 30 18.4609C29.9609 21.1094 23.2578 23.25 15 23.25C6.74219 23.25 0.0390625 21.1094 0 18.4609V18.4375L0.078125 25.2188C0.078125 25.2188 0.078125 25.25 0.078125 25.2578C0.117188 27.8906 6.78125 30.0234 15 30.0234C23.2188 30.0234 29.8828 27.8906 29.9219 25.2578C29.9219 25.25 29.9219 25.2188 29.9219 25.2188L30 18.4375Z\", fill: \"currentColor\" })));\n    }\n    Icons.DataCatalog = DataCatalog;\n    function Share(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }, props),\n            React.createElement(\"g\", { clipPath: \"url(#clip0_289_5006)\" },\n                React.createElement(\"path\", { d: \"M18 16.08C17.24 16.08 16.56 16.38 16.04 16.85L8.91 12.7C8.96 12.47 9 12.24 9 12C9 11.76 8.96 11.53 8.91 11.3L15.96 7.19C16.5 7.69 17.21 8 18 8C19.66 8 21 6.66 21 5C21 3.34 19.66 2 18 2C16.34 2 15 3.34 15 5C15 5.24 15.04 5.47 15.09 5.7L8.04 9.81C7.5 9.31 6.79 9 6 9C4.34 9 3 10.34 3 12C3 13.66 4.34 15 6 15C6.79 15 7.5 14.69 8.04 14.19L15.16 18.35C15.11 18.56 15.08 18.78 15.08 19C15.08 20.61 16.39 21.92 18 21.92C19.61 21.92 20.92 20.61 20.92 19C20.92 17.39 19.61 16.08 18 16.08Z\", fill: \"currentColor\" })),\n            React.createElement(\"defs\", null,\n                React.createElement(\"clipPath\", { id: \"clip0_289_5006\" },\n                    React.createElement(\"rect\", { width: \"24\", height: \"24\", fill: \"white\" })))));\n    }\n    Icons.Share = Share;\n    function Panel(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }, props),\n            React.createElement(\"g\", { clipPath: \"url(#clip0_345_19040)\" },\n                React.createElement(\"path\", { d: \"M17.9113 0.428824C17.8716 0.1857 17.6841 0.0656821 17.3871 0.0427376C16.5951 -0.018595 15.8057 -0.0247723 15.0168 0.0970103C14.1202 0.23556 13.2544 0.476919 12.4179 0.823735C11.2931 1.28969 10.265 1.91801 9.31549 2.67783C9.26077 2.72151 9.17297 2.76034 9.10899 2.75019C8.68937 2.68313 8.27328 2.5962 7.8541 2.52648C6.92352 2.37161 6.0481 2.53134 5.27328 3.07362C4.92955 3.3141 4.6348 3.62826 4.33211 3.92345C3.58288 4.65415 2.22253 6.00435 2.09678 6.1279L1.17723 7.17364C1.00603 7.37573 1.10266 7.66651 1.40756 7.72078L2.94661 7.89507C3.66363 7.96125 4.38109 8.02215 5.09855 8.08745C5.14576 8.09186 5.19165 8.11348 5.24062 8.12804C5.09281 8.51987 4.95205 8.89183 4.81218 9.26468C4.73187 9.47868 4.7857 9.65783 4.9472 9.81667C5.25033 10.1145 5.54817 10.4172 5.8491 10.7172C6.6398 11.5071 7.43006 12.2969 8.22253 13.0849C8.3527 13.2147 8.51155 13.2584 8.69025 13.197C8.79526 13.1613 8.89984 13.1229 9.00397 13.0836C9.29475 12.9733 9.58509 12.8621 9.89043 12.7456C9.90057 12.8184 9.90984 12.8687 9.91469 12.9195C10.025 14.0861 10.1353 15.2532 10.2447 16.4199C10.2633 16.6166 10.3401 16.7724 10.5333 16.8492C10.7345 16.929 10.9084 16.8726 11.0544 16.727L14.8628 12.8502C14.9647 12.683 15.0741 12.5308 15.1558 12.3648C15.4695 11.7272 15.6041 11.0526 15.5048 10.3453C15.4386 9.87271 15.338 9.40544 15.2656 8.93375C15.2528 8.84991 15.2806 8.74049 15.3292 8.67033C15.6045 8.27277 15.909 7.89507 16.1715 7.49001C16.8409 6.45795 17.3421 5.34558 17.658 4.15599C17.8667 3.37014 17.9974 2.56929 17.9965 1.75211L18.0004 1.34925C17.9726 1.04215 17.9612 0.731957 17.9118 0.428383L17.9113 0.428824ZM16.2567 5.3769C15.5326 7.04171 14.4617 8.44883 13.1 9.64327C12.484 10.1833 11.82 10.6542 11.1197 11.076C11.0527 11.1161 10.9834 11.1523 10.8669 11.2167C10.5761 10.9114 10.2853 10.595 9.98265 10.2901C8.97044 9.27174 7.95646 8.25512 6.93631 7.24468C6.82159 7.13084 6.81056 7.05097 6.89087 6.91595C7.77511 5.43382 8.88484 4.15378 10.2655 3.11201C11.0632 2.5106 11.9268 2.02876 12.8445 1.63783C13.0329 1.55752 13.1499 1.57385 13.3003 1.72696C14.2199 2.66283 15.1496 3.58855 16.0819 4.51163C16.4649 4.8911 16.4707 4.8836 16.2562 5.37646L16.2567 5.3769Z\", fill: \"currentColor\" }),\n                React.createElement(\"path\", { d: \"M11.9237 4.4438C11.016 4.44159 10.2959 5.16214 10.2959 6.07286C10.2959 6.99594 10.9962 7.70104 11.9135 7.70193C12.8269 7.70325 13.5452 6.99329 13.5523 6.08213C13.5589 5.18773 12.822 4.44601 11.9237 4.44336V4.4438Z\", fill: \"currentColor\" }),\n                React.createElement(\"path\", { d: \"M0.733782 17.2304C0.573611 17.2304 0.413882 17.1655 0.297394 17.038C0.0776562 16.7971 0.0944234 16.4234 0.335782 16.2036L4.91013 12.0299C5.15105 11.8102 5.52478 11.8274 5.74452 12.0683C5.96426 12.3092 5.94749 12.683 5.70613 12.9027L1.13178 17.0759C1.01838 17.1792 0.875862 17.2304 0.733782 17.2304Z\", fill: \"currentColor\" }),\n                React.createElement(\"path\", { d: \"M4.13178 17.3977C3.97161 17.3977 3.81188 17.3328 3.6954 17.2053C3.47566 16.9644 3.49243 16.5906 3.73379 16.3709L5.55699 14.7074C5.79791 14.4877 6.17164 14.5049 6.39138 14.7458C6.61112 14.9867 6.59435 15.3604 6.35299 15.5802L4.52978 17.2437C4.41639 17.3469 4.27386 17.3981 4.13178 17.3981V17.3977Z\", fill: \"currentColor\" }),\n                React.createElement(\"path\", { d: \"M0.590823 14.3828C0.430652 14.3828 0.270923 14.3179 0.154435 14.1904C-0.0653034 13.9495 -0.0485362 13.5757 0.192823 13.356L2.01603 11.6925C2.25695 11.4728 2.63024 11.49 2.85042 11.7309C3.07016 11.9718 3.05339 12.3455 2.81203 12.5653L0.988822 14.2288C0.875423 14.332 0.732902 14.3832 0.590823 14.3832V14.3828Z\", fill: \"currentColor\" })),\n            React.createElement(\"defs\", null,\n                React.createElement(\"clipPath\", { id: \"clip0_345_19040\" },\n                    React.createElement(\"rect\", { width: \"18\", height: \"17.3977\", fill: \"white\" })))));\n    }\n    Icons.Panel = Panel;\n    function Question(props) {\n        return (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: \"20\", height: \"20\", viewBox: \"0 0 20 20\" }, props),\n            React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M18.75 10C18.75 14.832 14.832 18.75 10 18.75C5.16797 18.75 1.25 14.832 1.25 10C1.25 5.16797 5.16797 1.25 10 1.25C14.832 1.25 18.75 5.16797 18.75 10ZM17.5 10C17.5 5.85938 14.1406 2.5 10 2.5C5.85938 2.5 2.5 5.85938 2.5 10C2.5 14.1406 5.85938 17.5 10 17.5C14.1406 17.5 17.5 14.1406 17.5 10ZM13.75 7.5C13.75 9.26562 12.8359 10.0742 12.1641 10.6641C11.5742 11.1836 11.25 11.4727 11.25 12.5H8.75C8.75 10.3438 9.80859 9.40625 10.5117 8.78906C11.0508 8.31641 11.25 8.13672 11.25 7.5C11.25 6.8125 10.6875 6.25 10 6.25C9.3125 6.25 8.75 6.8125 8.75 7.5H6.25C6.25 5.42969 7.92969 3.75 10 3.75C12.0703 3.75 13.75 5.42969 13.75 7.5ZM11.25 16.25V13.75H8.75V16.25H11.25Z\", fill: \"currentColor\" })));\n    }\n    Icons.Question = Question;\n})(Icons || (Icons = {}));\n","export * from './icons';\nexport * from './base-elements';\nexport * from './AssistantComponentContext';\nexport * from './contents';\nexport * from './pages';\n","import React from 'react';\nimport { Button, Div } from '../base-elements';\nimport { Style } from '../base-elements/Style';\nimport { Icons } from '../icons';\n/**\n * Style for the settings page.\n * (hierarchy of children styles is fixed automatically)\n * @alpha\n */\nexport const styleOfSettingsPage = `\n.anaconda-assistant-settings-page {\n  border-bottom: 1px solid rgba(85, 85, 85, 0.05);\n  padding: 20px;\n  height: -webkit-fill-available;\n  overflow-y: scroll;\n}\n\n.anaconda-assistant-settings-page-logout-control-title,\n.anaconda-assistant-settings-page-data-collection-control-title,\n.anaconda-assistant-settings-page-run-code-control-title,\n.anaconda-assistant-settings-page-upgrade-control-title {\n  font-size: 14px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.anaconda-assistant-settings-page-logout-control-container,\n.anaconda-assistant-settings-page-data-collection-control-container,\n.anaconda-assistant-settings-page-run-code-control-container,\n.anaconda-assistant-settings-page-upgrade-control-container {\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  gap: 20px;\n  font-size: 13px;\n  margin: 20px 0;\n}\n\n.anaconda-assistant-settings-page-logout-control-container-description,\n.anaconda-assistant-settings-page-upgrade-control-container-description {\n    max-width: 100%;\n}\n\n.anaconda-assistant-settings-page-logout-control-container-action-logout-button {\n  color: #444;\n  align-items: center;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  font-size: 16px;\n  font-style: normal;\n  justify-content: center;\n  padding: 8px;\n}\n\n.anaconda-assistant-settings-page-data-collection-control-container-description,\n.anaconda-assistant-settings-page-run-code-control-container-description {\n  max-width: 77%;\n}\n\n.anaconda-assistant-settings-page-run-code-control-container-description a {\n  color: #6c5af6;\n  text-decoration: underline;\n}\n\n.anaconda-assistant-settings-page-logout-control-container,\n.anaconda-assistant-settings-page-data-collection-control-container,\n.anaconda-assistant-settings-page-run-code-control-container {\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  gap: 20px;\n  font-size: 13px;\n  margin: 20px 0;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description {\n  flex-grow: 1;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description svg {\n  width: 12px;\n  margin-right: 4px;\n  display: inline-block;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description-upgrade-button {\n  align-items: center;\n  background: #4fab4f;\n  border-radius: 4px;\n  border: none;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  font-size: 16px;\n  font-style: normal;\n  justify-content: center;\n  margin-bottom: 5px;\n  margin-top: 15px;\n  margin-left: auto;\n  margin-right: 20px;\n  padding: 8px;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description-upgrade-button:hover {\n  background: #0cca4a;\n  color: #06262d;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description a {\n  color: #6c5af6;\n  text-decoration: underline;\n}\n`;\n/**\n * Titles of where to add code to the notebook.\n * @alpha\n */\nexport const settingAddCodeToNotebookTitles = {\n    'below-active-cell': 'Below active cell',\n    'at-end-of-notebook': 'At end of the notebook',\n    'in-place': 'In the active cell'\n};\n/**\n * Settings page\n * @alpha\n */\nexport function SettingsPage(props) {\n    const { showLogout, enableDataCollection, setEnableDataCollection, addCodeToNotebook, setAddCodeToNotebook, isProTier, isStarterTier, isCloudNotebooks } = props;\n    const logoutProps = showLogout ? showLogout() : null;\n    const upgradeURL = 'https://anaconda.cloud/pricing';\n    let accountTierTitle = 'Free';\n    let clientVersionTypeWording = 'In the local version';\n    let messagesAllowedWording = (React.createElement(React.Fragment, null,\n        \"30 responses for free, and will need to\",\n        ' ',\n        React.createElement(\"a\", { \"data-testid\": \"upgrade-link\", href: \"https://anaconda.cloud/pricing\", target: \"_blank\" }, \"upgrade\"),\n        ' ',\n        \"to continue using the Assistant\"));\n    if (isCloudNotebooks) {\n        clientVersionTypeWording = 'In the cloud version';\n        messagesAllowedWording =\n            '60 responses per day the first week, then 30 responses per day afterwards';\n    }\n    let maxTokens = 4096;\n    if (isProTier) {\n        accountTierTitle = 'Pro';\n        messagesAllowedWording = '120 responses per day';\n        maxTokens = 16384;\n    }\n    else if (isStarterTier) {\n        accountTierTitle = 'Starter';\n        messagesAllowedWording = '60 responses per day';\n    }\n    return (React.createElement(Div, { asChildName: \"settings-page\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfSettingsPage),\n        showLogout && logoutProps ? (React.createElement(Div, { asChildName: \"logout-control\" },\n            React.createElement(Div, { asChildName: \"title\" }, \"Logout\"),\n            React.createElement(Div, { asChildName: \"container\" },\n                React.createElement(Div, { asChildName: \"description\" },\n                    \"You're currently logged in as: \",\n                    React.createElement(\"b\", null, logoutProps.accountUserEmail),\n                    \".\"),\n                React.createElement(Div, { asChildName: \"action\" },\n                    React.createElement(Button, { asChildName: \"logout-button\", onClick: () => logoutProps.logout() }, \"Logout\"))))) : null,\n        React.createElement(Div, { asChildName: \"data-collection-control\" },\n            React.createElement(Div, { asChildName: \"title\" }, \"Data collection and usage\"),\n            React.createElement(Div, { asChildName: \"container\" },\n                React.createElement(Div, { asChildName: \"action\" },\n                    React.createElement(\"input\", { type: \"checkbox\", checked: enableDataCollection, onChange: event => setEnableDataCollection(event.target.checked) })),\n                React.createElement(Div, { asChildName: \"description\" }, \"Enable data and usage collection by Anaconda, including chat messages. This setting only affects the data Anaconda stores. It does not affect the data that is sent to OpenAI.\"))),\n        React.createElement(Div, { asChildName: \"run-code-control\" },\n            React.createElement(Div, { asChildName: \"title\" }, \"Run code in Notebook\"),\n            React.createElement(Div, { asChildName: \"container\" },\n                React.createElement(Div, { asChildName: \"action\" },\n                    React.createElement(\"select\", { \"data-testid\": \"select\", value: addCodeToNotebook, onChange: event => {\n                            setAddCodeToNotebook(event.target.value);\n                        } }, Object.entries(settingAddCodeToNotebookTitles).map(([key, value]) => (React.createElement(\"option\", { \"data-testid\": \"select-option\", key: key, value: key }, value))))),\n                React.createElement(Div, { asChildName: \"description\" }, \"When you run code in the Assistant, the code first gets added to your notebook before it is executed. You can choose where the code gets added here.\"))),\n        React.createElement(Div, { asChildName: \"upgrade-control\" },\n            React.createElement(Div, { asChildName: \"title\" }, \"Account tier limits\"),\n            React.createElement(Div, { asChildName: \"container\" },\n                React.createElement(Div, { asChildName: \"description\" },\n                    \"Your account tier is \",\n                    React.createElement(\"b\", null, accountTierTitle),\n                    \".\",\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"span\", { \"data-testid\": \"client-version-type\" }, clientVersionTypeWording),\n                    \" of the Anaconda Assistant, you can receive\",\n                    ' ',\n                    React.createElement(\"span\", { \"data-testid\": \"messages-allowed\" }, messagesAllowedWording),\n                    \".\",\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"span\", { \"data-testid\": \"context-limit\" },\n                        \"Your current context limit is \",\n                        maxTokens || 4096,\n                        \" tokens.\"),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    \"If you reach this limit during one of your chats, press the \\\"\",\n                    React.createElement(Icons.RotateRight, null),\n                    ' ',\n                    \"Restart\\\" button at the bottom to restart the conversation and reset the context length.\",\n                    isProTier ? null : (React.createElement(React.Fragment, null,\n                        React.createElement(\"br\", null),\n                        React.createElement(\"br\", null),\n                        \"Visit our\",\n                        ' ',\n                        React.createElement(\"a\", { \"data-testid\": \"pricing-link\", href: \"https://anaconda.cloud/pricing\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"pricing page\"),\n                        ' ',\n                        \"to upgrade to a higher tier to increase the number of daily responses allowed or to use a model with a larger context-window.\",\n                        React.createElement(Button, { \"data-testid\": \"upgrade-button\", asChildName: \"upgrade-button\", onClick: () => {\n                                window.open(upgradeURL);\n                            } },\n                            React.createElement(Div, { asChildName: \"upgrade-icon\" },\n                                React.createElement(Icons.Sparkle, null)),\n                            React.createElement(Div, { asChildName: \"text\" }, \"Upgrade\")))))))));\n}\n","import React from 'react';\nimport { Div } from '../base-elements';\nimport { Icons } from '../icons';\nimport { TermsAndConditions, styleOfTermsAndConditions } from '../contents';\nimport { AssistantComponentContext } from '../AssistantComponentContext';\nimport { Style } from '../base-elements/Style';\nimport { pageChildFixer } from './pageChildFixer';\n/**\n * Style for the page for the terms and conditions.\n * (hierarchy of children styles is fixed automatically)\n * @alpha\n */\nexport const styleOfTermsAndConditionsPage = `\n.anaconda-assistant-terms-page {\n  background: white;\n  border-radius: 4px;\n  color: #212121;\n  display: flex;\n  flex-direction: column;\n  font-family: SF Pro, Tahoma, sans-serif;\n  height: 100%;\n  overflow: auto;\n  width: 100%;\n}\n\n.anaconda-assistant-terms-page-branding {\n  background: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 70px;\n  padding-left: 20px;\n  padding-right: 20px;\n}\n\n.anaconda-assistant-terms-page-branding-content {\n  font-family: 'Inter', sans-serif;\n  margin-bottom: 24px;\n}\n\n.anaconda-assistant-terms-page-branding-content h1 {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 0;\n}\n\n.anaconda-assistant-terms-page-branding-icon {\n  color: #31a824;\n  width: 80px;\n}\n\n.anaconda-assistant-terms-page-branding-content-version {\n  color: #bdbdbd;\n  font-size: 11px;\n  margin-bottom: 10px;\n}\n`;\n/**\n * Page for the terms and conditions.\n * @alpha\n */\nexport function TermsAndConditionsPage(props) {\n    const { clientVersion, accept, enableDataCollection, setEnableDataCollection, olderThan13, setOlderThan13 } = props;\n    const { replaceChildren } = React.useContext(AssistantComponentContext);\n    return (React.createElement(Div, { asChildName: \"terms-page\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfTermsAndConditionsPage),\n        React.createElement(Div, { asChildName: \"branding\" },\n            React.createElement(Div, { asChildName: \"icon\" },\n                React.createElement(Icons.ChatBot, null)),\n            React.createElement(Div, { asChildName: \"content\" },\n                React.createElement(\"h1\", null, \"Anaconda Assistant\"),\n                React.createElement(Div, { asChildName: \"version\" }, clientVersion),\n                \"The Anaconda Assistant is an AI-powered chat application designed to enhance the productivity of data scientists, developers, and researchers.\")),\n        React.createElement(AssistantComponentContext.Provider, { value: pageChildFixer({\n                parentName: 'terms-page',\n                childName: 'terms',\n                childrenStyle: styleOfTermsAndConditions,\n                replaceChildren\n            }) },\n            React.createElement(TermsAndConditions, { accept: accept, enableDataCollection: enableDataCollection, setEnableDataCollection: setEnableDataCollection, olderThan13: olderThan13, setOlderThan13: setOlderThan13 }))));\n}\n","export * from './TermsAndConditionsPage';\nexport * from './SettingsPage';\n","import { fixStyleHierarchy } from '../style/styleUtils';\n/**\n * Creates the properties for AssistantComponentContext\n * in a way that fixes the hierarchy of the children and the styles.\n * @alpha\n */\nexport function pageChildFixer(params) {\n    const { parentName, childName, childrenStyle, replaceChildren } = params;\n    return {\n        parentClassName: parentName,\n        replaceChildren: (childClassName) => {\n            let styleFixer = () => null;\n            if (childrenStyle) {\n                styleFixer = fixStyleHierarchy(parentName, childName, childrenStyle);\n            }\n            return replaceChildren?.(childClassName) || styleFixer(childClassName) || null;\n        }\n    };\n}\n","import React from 'react';\nexport const rootClassName = 'anaconda-assistant';\n/**\n * Fix the style hierarchy for a child component.\n * @internal\n */\nexport function fixStyleHierarchy(parentName, childName, childStyle) {\n    const expectedChildName = `${rootClassName}-${parentName}-${childName}-style`.replace('style-style', 'style');\n    return function innerFixStyleHierarchy(asChildName) {\n        // If ends in `-style`, replace style to match parent's hierarchy\n        if (asChildName === expectedChildName) {\n            return (React.createElement(\"style\", { className: asChildName }, childStyle.replaceAll(`${rootClassName}-${childName}`, `${rootClassName}-${parentName}-${childName}`)));\n        }\n        return null;\n    };\n}\n","/**\n * Access token management\n * @alpha\n */\nexport class AnacondaAssistantAccessTokenManager {\n    constructor(opts) {\n        this._accessToken = null;\n        this._accessTokenExpiresAt = null;\n        this._accessToken = opts.accessToken || null;\n        this._accessTokenExpiresAt = opts.expiresAt || null;\n    }\n    setAccessToken(accessToken) {\n        this._accessToken = accessToken.accessToken;\n        this._accessTokenExpiresAt = accessToken.expiresAt || null;\n    }\n    ensureValidAccessToken() {\n        if (this._accessToken === null) {\n            throw new Error('No access token set');\n        }\n        if (this._accessTokenExpiresAt === null) {\n            throw new Error('No access token expiration set');\n        }\n        if (this._accessTokenExpiresAt < Date.now()) {\n            throw new Error('Access token expired');\n        }\n    }\n    getAccessToken() {\n        this.ensureValidAccessToken();\n        return {\n            accessToken: this._accessToken,\n            expiresAt: this._accessTokenExpiresAt\n        };\n    }\n}\n","import { AnacondaAssistantAccessTokenManager } from './accessToken';\nimport { AssistantEnvironmentTypes } from './environmentTypes';\nimport { AnacondaAssistantHTTPClient } from './http';\nimport { fetchAccess } from './methods/fetchAccess';\nimport { fetchSuggestions } from './methods/fetchSuggestions';\nimport { fetchTermsAndConditionsVersion } from './methods/fetchTermsAndConditions';\nimport { streamResponse } from './methods/streamResponse';\nimport { submitCodeExecutionResult } from './methods/submitCodeExecutionResult';\nimport { submitFeedback } from './methods/submitFeedback';\nimport { ANACONDA_ASSISTANT_PRODUCTION_API_URL } from './publicTypes';\nimport { transformSubmitCodeExecutionRequest, transformCompletionRequest, transformFetchSuggestionsRequest, transformSubmitFeedbackRequest } from './transformations';\nimport { validateAPIUrl } from './validators';\nexport const SDK_VERSION = '0.0.1';\n/**\n * Anaconda Assistant SDK\n * @alpha\n */\nexport class AnacondaAssistant {\n    constructor(opts) {\n        this.sdkVersion = SDK_VERSION;\n        this._transformHeaders = headers => headers;\n        const apiUrl = opts.apiUrl || ANACONDA_ASSISTANT_PRODUCTION_API_URL;\n        validateAPIUrl(apiUrl);\n        this.apiUrl = apiUrl;\n        this.clientVersion = opts.clientVersion;\n        this._enableDataCollection = opts.enableDataCollection || false;\n        this.accessToken = new AnacondaAssistantAccessTokenManager({\n            accessToken: opts.authorization?.accessToken || '',\n            expiresAt: opts.authorization?.expiresAt || 0\n        });\n        this.environmentTypes = new AssistantEnvironmentTypes(opts.environmentType);\n        this._http = new AnacondaAssistantHTTPClient({\n            apiUrl: this.apiUrl,\n            getHeaders: this.makeHeaders.bind(this)\n        });\n    }\n    enableDataCollection() {\n        this._enableDataCollection = true;\n    }\n    disableDataCollection() {\n        this._enableDataCollection = false;\n    }\n    setTransformHeaders(transformHeaders) {\n        this._transformHeaders = transformHeaders;\n    }\n    makeHeaders() {\n        return this._transformHeaders({\n            'X-Client-Version': this.clientVersion,\n            'X-SDK-Version': SDK_VERSION,\n            'Content-Type': 'application/json',\n            'X-Client-Source': this.environmentTypes.getClientSource(),\n            Authorization: `Bearer ${this.accessToken.getAccessToken()?.accessToken}`\n        });\n    }\n    async fetchAccess() {\n        return fetchAccess({\n            http: this._http\n        });\n    }\n    async fetchTermsAndConditionsVersion() {\n        return fetchTermsAndConditionsVersion({\n            http: this._http\n        });\n    }\n    async submitFeedback(request, options) {\n        return submitFeedback({\n            version: options?.version || 'v2',\n            http: this._http,\n            request: transformSubmitFeedbackRequest(request, this._enableDataCollection)\n        });\n    }\n    async *streamResponse(request, options) {\n        const stream = streamResponse({\n            version: options?.version || 'v3',\n            http: this._http,\n            request: transformCompletionRequest(request, this._enableDataCollection),\n            abortController: options?.abortController\n        });\n        for await (const response of stream) {\n            yield response;\n        }\n    }\n    async fetchSuggestions(request, options) {\n        const suggestions = await fetchSuggestions({\n            version: options?.version || 'v2',\n            http: this._http,\n            request: transformFetchSuggestionsRequest(request, this._enableDataCollection),\n            abortController: options?.abortController\n        });\n        return suggestions.map(suggestion => suggestion.text);\n    }\n    async submitCodeExecutionResult(request, options) {\n        return submitCodeExecutionResult({\n            version: options?.version || 'v2',\n            http: this._http,\n            request: transformSubmitCodeExecutionRequest(request, this._enableDataCollection),\n            abortController: options?.abortController\n        });\n    }\n}\n","/**\n * Anaconda Assistant Environment Types\n * @alpha\n */\nexport class AssistantEnvironmentTypes {\n    constructor(_environmentType) {\n        this._environmentType = _environmentType;\n    }\n    isLocalDev() {\n        return this._environmentType === 'local-dev';\n    }\n    isLocalNotebooks() {\n        return this._environmentType === 'local-notebooks-prod' || this.isLocalNotebooksDev();\n    }\n    isLocalNotebooksDev() {\n        return this._environmentType === 'local-notebooks-dev';\n    }\n    isCloudNotebooks() {\n        return this._environmentType === 'cloud-notebooks-prod';\n    }\n    isEnterpriseNotebooksDev() {\n        return this._environmentType === 'enterprise-notebooks-dev';\n    }\n    isEnterpriseNotebooks() {\n        return this._environmentType === 'enterprise-notebooks-prod' || this.isEnterpriseNotebooksDev();\n    }\n    getClientSource() {\n        if (this.isLocalDev())\n            return 'anaconda-local-dev';\n        if (this.isCloudNotebooks())\n            return 'anaconda-cloud-notebooks-prod';\n        if (this.isLocalNotebooksDev())\n            return 'anaconda-local-notebooks-dev';\n        if (this.isLocalNotebooks())\n            return 'anaconda-local-notebooks-prod';\n        if (this.isEnterpriseNotebooksDev())\n            return 'anaconda-enterprise-notebooks-dev';\n        if (this.isEnterpriseNotebooks())\n            return 'anaconda-enterprise-notebooks-prod';\n        throw new Error('Unknown environment type');\n    }\n}\n","import { ASSISTANT_API_SERVER_ERROR_NAME, AssistantAPINetworkError, AssistantAPIServerError } from './publicTypes';\n/**\n * Anaconda Assistant HTTP Client\n * @alpha\n */\nexport class AnacondaAssistantHTTPClient {\n    constructor(opts) {\n        this._apiUrl = opts.apiUrl;\n        this._getHeaders = opts.getHeaders;\n    }\n    async fetchSafely(options) {\n        const { path, body, method, abortController } = options;\n        const headers = this._getHeaders();\n        const request = new Request(`${this._apiUrl}${path}`, {\n            method,\n            headers,\n            body,\n            signal: abortController?.signal\n        });\n        try {\n            const response = await fetch(request);\n            if (response.status > 299) {\n                const text = await response.text();\n                if (matchesKnownError(text)) {\n                    throw new AssistantAPIServerError(text, { request, response });\n                }\n                throw new AssistantAPIServerError('There was an issue connecting to the Assistant server. Please try again.', { request, response });\n            }\n            return { request, response };\n        }\n        catch (e) {\n            if (e.name === ASSISTANT_API_SERVER_ERROR_NAME) {\n                throw e;\n            }\n            throw new AssistantAPINetworkError('There was an issue connecting to the Assistant server. Please try again.', { request });\n        }\n    }\n}\nexport function matchesKnownError(text) {\n    if (text.includes('Too many requests') || text.includes('maximum context length')) {\n        return true;\n    }\n    return false;\n}\n","export { AnacondaAssistantAccessTokenManager as AnacondaAssistantAccessToken } from './accessToken';\nexport { AssistantEnvironmentTypes } from './environmentTypes';\nexport { AnacondaAssistantHTTPClient } from './http';\nexport { AnacondaAssistant } from './assistant';\nexport * from './publicTypes';\n","import { AssistantAPIServerError } from '../publicTypes';\n/**\n * Helps determine whether user has access to Assistant\n * @internal\n */\nexport async function fetchAccess(opts) {\n    const { http } = opts;\n    const { request, response } = await http.fetchSafely({\n        method: 'POST',\n        path: '/access'\n    });\n    // Return false only if access denied due to org being blacklisted\n    if (response.status === 403) {\n        const data = await response.json();\n        const errorCode = data.error.code;\n        if (errorCode === 'org_blacklisted')\n            return false;\n    }\n    // Handle other errors. User should not be allowed, if we can't determine\n    // if they have access due to their org being blacklisted.\n    if (response.status !== 200) {\n        throw new AssistantAPIServerError('Unable to determine if user has access.', {\n            request,\n            response\n        });\n    }\n    return true;\n}\n","import { AssistantSupportedEndpointVersions, AssistantAPIServerError, AssistantAPIInvalidResponseError, validateVersion } from '../publicTypes';\n/**\n * Fetch suggestions\n * @internal\n */\nexport async function fetchSuggestions(opts) {\n    const { version, http, request, abortController } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.FETCH_SUGGESTIONS_SUPPORTED_VERSIONS);\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/${version}/suggestions`,\n        body: JSON.stringify(request),\n        abortController\n    });\n    if (response.status !== 200) {\n        throw new AssistantAPIServerError('Unable to fetch suggestions.', {\n            request: fetchRequest,\n            response\n        });\n    }\n    let suggestions;\n    try {\n        suggestions = (await response.json()).suggestions;\n    }\n    catch (e) {\n        throw new AssistantAPIInvalidResponseError('Unable to parse suggestions response.', {\n            request: fetchRequest,\n            response\n        });\n    }\n    if (!Array.isArray(suggestions)) {\n        throw new AssistantAPIInvalidResponseError('Received suggestions is not an array.', {\n            request: fetchRequest,\n            response\n        });\n    }\n    return suggestions;\n}\n","import { AssistantAPIInvalidResponseError, AssistantAPIServerError } from '../publicTypes';\n/**\n * Reads the last available version of the terms and conditions,\n * which should be used to force the user to accept the new ones if they have changed.\n * @internal\n */\nexport async function fetchTermsAndConditionsVersion(opts) {\n    const { http } = opts;\n    const { request, response } = await http.fetchSafely({\n        path: '/terms-and-conditions-version',\n        method: 'GET'\n    });\n    if (response.status !== 200) {\n        throw new AssistantAPIServerError('Unable to fetch terms and conditions version.', {\n            request,\n            response\n        });\n    }\n    try {\n        const data = await response.json();\n        return data.version;\n    }\n    catch (e) {\n        throw new AssistantAPIInvalidResponseError('Unable to parse terms and conditions version.', {\n            request,\n            response\n        });\n    }\n}\n","import { AssistantAPIInvalidResponseError, AssistantSupportedEndpointVersions, validateVersion } from '../publicTypes';\nimport { containsTokenCount, parseMaxTokenCount, parseTokenCount, removeTokenCount } from '../responseTokens';\n/**\n * Stream response\n * @internal\n */\nexport async function* streamResponse(opts) {\n    const { version, http, request, abortController } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.STREAM_RESPONSE_SUPPORTED_VERSIONS);\n    // Similar streamed call as to OpenAI but to https://assistant.anaconda.cloud/v2/completions\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/${version}/completions`,\n        body: JSON.stringify(request),\n        abortController\n    });\n    if (!response.body) {\n        throw new AssistantAPIInvalidResponseError('Empty stream when parsing response', {\n            request: fetchRequest,\n            response\n        });\n    }\n    const reader = response.body.getReader();\n    const decoder = new TextDecoder();\n    let done = false;\n    let chunk = '';\n    while (!done) {\n        const { value, done: doneReading } = await reader.read();\n        done = doneReading;\n        const chunkValue = decoder.decode(value);\n        chunk = chunk + chunkValue;\n        if (!containsTokenCount(chunk)) {\n            yield {\n                content: chunk\n            };\n        }\n        else {\n            const tokens = parseTokenCount(chunk);\n            const maxTokens = parseMaxTokenCount(chunk);\n            yield {\n                content: removeTokenCount(chunk),\n                tokens,\n                maxTokens\n            };\n        }\n    }\n}\n","import { AssistantAPIServerError, AssistantSupportedEndpointVersions, validateVersion } from '../publicTypes';\n/**\n * Submit code executed, used to study effectiveness of generated code\n * @internal\n */\nexport async function submitCodeExecutionResult(opts) {\n    const { version, http, request, abortController } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.SUBMIT_CODE_EXECUTION_SUPPORTED_VERSIONS);\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/v2/execution_result`,\n        body: JSON.stringify(request),\n        abortController\n    });\n    if (response.status !== 201) {\n        throw new AssistantAPIServerError('Unable to fetch suggestions.', {\n            request: fetchRequest,\n            response\n        });\n    }\n    return true;\n}\n","import { AssistantAPIServerError, AssistantSupportedEndpointVersions, validateVersion } from '../publicTypes';\n/**\n * Post feedback\n * @internal\n */\nexport async function submitFeedback(opts) {\n    const { version, http, request } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.SUBMIT_FEEDBACK_SUPPORTED_VERSIONS);\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/${version}/feedback`,\n        body: JSON.stringify(request)\n    });\n    if (response.status !== 201) {\n        throw new AssistantAPIServerError('Unable to post feedback', {\n            request: fetchRequest,\n            response\n        });\n    }\n    return true;\n}\n","/**\n * Anaconda Assistant SDK supported API URLs\n * @alpha\n */\nexport const ANACONDA_ASSISTANT_SUPPORTED_API_URLS = [\n    'https://jupyterassistant.anacondaconnect.com',\n    'https://assistant.anaconda.cloud',\n    'http://localhost:8000'\n];\n/**\n * Anaconda Assistant SDK production API URL\n * @alpha\n */\nexport const ANACONDA_ASSISTANT_PRODUCTION_API_URL = 'https://assistant.anaconda.cloud';\n/**\n * Anaconda Assistant SDK supported API endpoint versions\n * @alpha\n */\nexport var AssistantSupportedEndpointVersions;\n(function (AssistantSupportedEndpointVersions) {\n    AssistantSupportedEndpointVersions.STREAM_RESPONSE_SUPPORTED_VERSIONS = ['v3'];\n    AssistantSupportedEndpointVersions.FETCH_SUGGESTIONS_SUPPORTED_VERSIONS = ['v2'];\n    AssistantSupportedEndpointVersions.SUBMIT_FEEDBACK_SUPPORTED_VERSIONS = ['v2'];\n    AssistantSupportedEndpointVersions.SUBMIT_CODE_EXECUTION_SUPPORTED_VERSIONS = ['v2'];\n})(AssistantSupportedEndpointVersions || (AssistantSupportedEndpointVersions = {}));\n/**\n * Environment types for the Assistant SDK\n * @alpha\n */\nexport const ASSISTANT_ENVIRONMENT_TYPES = [\n    'local-notebooks-dev',\n    'local-notebooks-prod',\n    'local-dev',\n    'cloud-notebooks-prod',\n    'enterprise-notebooks-dev',\n    'enterprise-notebooks-prod'\n];\n/**\n * Assistant contexts\n * @alpha\n */\nexport var AssistantContexts;\n(function (AssistantContexts) {\n    /**\n     * Chat context types\n     * @alpha\n     */\n    AssistantContexts.CHAT_CONTEXT_TYPES = [\n        'graph-dataframe',\n        'describe-dataframe',\n        'explain-code',\n        'comment-code',\n        'improve-code',\n        'debug-error',\n        'default-python',\n        'suggestions-chat'\n    ];\n})(AssistantContexts || (AssistantContexts = {}));\n/**\n * Assistant suggestions can be of any of these types\n * @alpha\n */\nexport const ASSISTANT_SUGGESTION_TYPES = [\n    'dataframe-suggestions',\n    'data-cleaning-suggestions'\n];\n/**\n * Assistant API base error name\n * @alpha\n */\nexport const ASSISTANT_API_ERROR_NAME = 'ASSISTANT_API_ERROR';\n/**\n * Assistant API error\n * @alpha\n */\nexport class AssistantAPIErrorBase extends Error {\n    constructor(message, options) {\n        super(message);\n        this.name = ASSISTANT_API_ERROR_NAME;\n        this.request = options.request;\n        this.response = options.response;\n    }\n    toString() {\n        let statusText = `failed to fetch ${this.request.url}`;\n        if (this.response) {\n            statusText = `(status: ${this.response.status})`;\n        }\n        return `[${this.name}] ${this.message} ${statusText}`;\n    }\n}\n/**\n * AssistantAPINetworkError name\n * @alpha\n */\nexport const ASSISTANT_API_NETWORK_ERROR_NAME = 'ASSISTANT_API_NETWORK_ERROR';\n/**\n * Assistant API network error\n * @alpha\n */\nexport class AssistantAPINetworkError extends AssistantAPIErrorBase {\n    constructor() {\n        super(...arguments);\n        this.name = ASSISTANT_API_NETWORK_ERROR_NAME;\n    }\n}\n/**\n * AssistantAPIServerError name\n * @alpha\n */\nexport const ASSISTANT_API_SERVER_ERROR_NAME = 'ASSISTANT_API_SERVER_ERROR';\n/**\n * Assistant API server error\n * @alpha\n */\nexport class AssistantAPIServerError extends AssistantAPIErrorBase {\n    constructor() {\n        super(...arguments);\n        this.name = ASSISTANT_API_SERVER_ERROR_NAME;\n    }\n}\n/**\n * Assistant API invalid response error name\n * @alpha\n */\nexport const ASSISTANT_API_INVALID_RESPONSE_ERROR_NAME = 'ASSISTANT_API_INVALID_RESPONSE_ERROR';\n/**\n * Assistant API invalid response error\n * @alpha\n */\nexport class AssistantAPIInvalidResponseError extends AssistantAPIErrorBase {\n    constructor() {\n        super(...arguments);\n        this.name = ASSISTANT_API_INVALID_RESPONSE_ERROR_NAME;\n    }\n}\n/**\n * Assistant API unknown error name\n * @alpha\n */\nexport const ASSISTANT_API_UNKNOWN_ERROR_NAME = 'ASSISTANT_API_UNKNOWN_ERROR';\n/**\n * Assistant API unknown error\n * @alpha\n */\nexport class AssistantAPIUnknownError extends AssistantAPIErrorBase {\n    constructor() {\n        super(...arguments);\n        this.name = ASSISTANT_API_UNKNOWN_ERROR_NAME;\n    }\n}\n/**\n * Assistant SDK error name\n * @alpha\n */\nexport const ASSISTANT_SDK_ERROR_NAME = 'ASSISTANT_SDK_ERROR';\n/**\n * Assistant SDK error\n * @alpha\n */\nexport class AssistantSDKErrorBase extends Error {\n    constructor(message) {\n        super(message);\n        this.name = ASSISTANT_SDK_ERROR_NAME;\n    }\n    toString() {\n        return `[${this.name}] ${this.message}`;\n    }\n}\n/**\n * Assistant SDK error for invalid version name\n * @alpha\n */\nexport const ASSISTANT_SDK_INVALID_VERSION_ERROR_NAME = 'ASSISTANT_SDK_INVALID_VERSION_ERROR';\n/**\n * Assistant SDK error for invalid version\n * @alpha\n */\nexport class AssistantSDKInvalidVersionError extends AssistantSDKErrorBase {\n    constructor() {\n        super(...arguments);\n        this.name = ASSISTANT_SDK_INVALID_VERSION_ERROR_NAME;\n    }\n}\n/**\n * Validate version\n * @alpha\n */\nexport function validateVersion(version, supportedVersions) {\n    if (!supportedVersions.includes(version)) {\n        throw new AssistantSDKInvalidVersionError(`Invalid version: ${version}. Supported versions: ${supportedVersions.join(', ')}`);\n    }\n}\n/**\n * Assistant SDK error for invalid API URL name\n * @alpha\n */\nexport const ASSISTANT_SDK_INVALID_API_URL_ERROR_NAME = 'ASSISTANT_SDK_INVALID_API_URL_ERROR';\n/**\n * Assistant SDK error for invalid API URL\n * @alpha\n */\nexport class AssistantSDKInvalidAPIURLError extends AssistantSDKErrorBase {\n    constructor() {\n        super(...arguments);\n        this.name = ASSISTANT_SDK_INVALID_API_URL_ERROR_NAME;\n    }\n}\n/**\n * Assistant SDK error for unknown error name\n * @alpha\n */\nexport const ASSISTANT_SDK_UNKNOWN_ERROR_NAME = 'ASSISTANT_SDK_UNKNOWN_ERROR';\n/**\n * Assistant SDK error for unknown error\n * @alpha\n */\nexport class AssistantSDKUnknownError extends AssistantSDKErrorBase {\n    constructor() {\n        super(...arguments);\n        this.name = ASSISTANT_SDK_UNKNOWN_ERROR_NAME;\n    }\n}\n","const tokenCountIndicator = '__TOKENS_';\n// Token count is added by the assistant server at the end of its response\nconst tokenCountRegex = /__TOKENS_([0-9]+)\\/([0-9]+)__/ms;\nexport function containsTokenCount(message) {\n    return message.includes(tokenCountIndicator);\n}\nexport function parseTokenCount(message) {\n    const matches = message.match(tokenCountRegex);\n    return matches && matches[1] && !isNaN(+matches[1]) ? parseInt(matches[1]) : 0;\n}\nexport function parseMaxTokenCount(message) {\n    const matches = message.match(tokenCountRegex);\n    return matches && matches[2] && !isNaN(+matches[2]) ? parseInt(matches[2]) : 0;\n}\nexport function removeTokenCount(message) {\n    const index = message.indexOf(tokenCountIndicator);\n    return message.slice(0, index === -1 ? message.length : index);\n}\n","/**\n * IMPORTANT: DO NOT ADD SPREAD OPERATORS IN ANY OF THE TRANSFORMERS\n * Spread operators hide properties that are not explicitly defined in the types.\n */\nexport function transformSession(session) {\n    return {\n        user_id: session.userId,\n        session_id: session.sessionId,\n        iteration_id: 0\n    };\n}\n/**\n * Extracts the last 2000 characters of each variable value.\n */\nexport function transformContext(context) {\n    return {\n        type: context.type,\n        variables: transformVariables(context.variables)\n    };\n}\n/**\n * Extracts the last 2000 characters of each variable value.\n */\nexport function transformVariables(variables) {\n    const transformedVariables = {};\n    for (const key in variables) {\n        if (variables.hasOwnProperty(key)) {\n            const value = variables[key];\n            transformedVariables[key] = value.slice(-2000);\n        }\n    }\n    return transformedVariables;\n}\nexport function transformSubmitFeedbackRequest(publicRequest, enableDataCollection) {\n    return {\n        feedback: {\n            text: publicRequest.feedback.text,\n            sentiment: publicRequest.feedback.sentiment,\n            message_id: publicRequest.feedback.messageId\n        },\n        skip_logging: !enableDataCollection,\n        session: transformSession(publicRequest.session)\n    };\n}\nexport function transformCompletionRequest(publicRequest, enableDataCollection) {\n    return {\n        skip_logging: !enableDataCollection,\n        session: transformSession(publicRequest.session),\n        chat_context: transformContext(publicRequest.chatContext),\n        response_message_id: publicRequest.responseMessageId,\n        messages: publicRequest.messages.map(message => ({\n            role: message.role,\n            content: message.content,\n            message_id: message.messageId\n        }))\n    };\n}\nexport function transformFetchSuggestionsRequest(publicRequest, enableDataCollection) {\n    return {\n        skip_logging: !enableDataCollection,\n        session: transformSession(publicRequest.session),\n        type: publicRequest.type,\n        variables: transformVariables(publicRequest.variables)\n    };\n}\nexport function transformSubmitCodeExecutionRequest(publicRequest, enableDataCollection) {\n    return {\n        skip_logging: !enableDataCollection,\n        session: transformSession(publicRequest.session),\n        execution_result: {\n            code: publicRequest.executionResult.code,\n            error: publicRequest.executionResult.error,\n            success: publicRequest.executionResult.success,\n            message_id: publicRequest.executionResult.messageId\n        }\n    };\n}\n","import { ANACONDA_ASSISTANT_SUPPORTED_API_URLS, AssistantSDKInvalidAPIURLError } from './publicTypes';\nexport function validateAPIUrl(url) {\n    const _url = url;\n    if (!_url || ANACONDA_ASSISTANT_SUPPORTED_API_URLS.indexOf(_url) === -1) {\n        throw new AssistantSDKInvalidAPIURLError(`Invalid API URL: ${url}`);\n    }\n}\n","import { getAccessToken } from '../utils/nucleus/auth';\nimport { getAssistantSdk } from '../assistant-sdk';\nexport async function hasAccess() {\n    try {\n        const accessToken = await getAccessToken();\n        if (!accessToken) {\n            throw new Error('No access token');\n        }\n        const sdk = getAssistantSdk();\n        sdk.accessToken.setAccessToken(accessToken);\n        await sdk.fetchAccess();\n        return true;\n    }\n    catch (e) {\n        console.log('Error fetching access: ', e);\n    }\n    return false;\n}\n","import { getActiveChat, getActiveNotebook } from '../store/state-fns';\nimport { attachmentMessagePrefix } from '../utils/specialPrefixes';\nexport function generateRequest(state) {\n    const activeChat = getActiveChat(state);\n    const activeNotebook = getActiveNotebook(state);\n    if (!activeNotebook?.activeChatKey ||\n        !activeChat ||\n        !hasActiveCodeResponse(activeChat.inProgress)) {\n        throw new Error('No active request');\n    }\n    return {\n        session: activeChat.session,\n        messages: cleanSpecialPrefixes(activeChat.messages),\n        chatContext: convertToSDKContext(activeChat.context),\n        responseMessageId: activeChat.inProgress.message_id\n    };\n}\nexport function cleanSpecialPrefixes(messages) {\n    const prefixes = [attachmentMessagePrefix];\n    return messages.map(message => {\n        const content = prefixes.reduce((acc, prefix) => acc.replace(prefix, ''), message.content);\n        return { ...message, content };\n    });\n}\nexport function hasActiveCodeResponse(active) {\n    return active?.type === 'active';\n}\nfunction convertToSDKContext(context) {\n    const variables = convertVariables(context);\n    return { type: context.type, variables };\n}\nfunction convertVariables(context) {\n    switch (context.type) {\n        case 'graph-dataframe':\n            return {\n                name: context.variables.dataframe.name,\n                dtypes_str: context.variables.dataframe.dtypesStr\n            };\n        case 'describe-dataframe':\n            return {\n                name: context.variables.dataframe.name,\n                dtypes_str: context.variables.dataframe.dtypesStr\n            };\n        case 'explain-code':\n            return {\n                active_code_cell: context.variables.active_cell_code,\n                selected_code: context.variables.selected_code\n            };\n        case 'comment-code':\n            return {\n                active_code_cell: context.variables.active_cell_code,\n                selected_code: context.variables.selected_code\n            };\n        case 'improve-code':\n            return {\n                active_code_cell: context.variables.active_cell_code,\n                selected_code: context.variables.selected_code\n            };\n        case 'debug-error':\n            return context.variables;\n        case 'suggestions-chat':\n            return context.variables;\n        case 'default-python':\n            return {};\n    }\n}\n","import { getAssistantSdk } from '../assistant-sdk';\nexport async function postFeedback(request) {\n    try {\n        return await getAssistantSdk().submitFeedback(request);\n    }\n    catch (e) {\n        console.error('Error posting feedback: ', e);\n    }\n}\nexport async function postExecutionResult(executingCode, success, error) {\n    try {\n        return await getAssistantSdk().submitCodeExecutionResult(createExecutionResult(executingCode, success, error));\n    }\n    catch (e) {\n        console.error('Error posting feedback: ', e);\n    }\n}\nfunction createExecutionResult(executingCode, success, error) {\n    return {\n        session: executingCode.session,\n        executionResult: {\n            code: executingCode.code,\n            success,\n            messageId: executingCode.activeMessageId,\n            error: error ? { message: error.message, stack: error.stack, name: error.name } : null\n        }\n    };\n}\n","import { AssistantError } from '../utils/errors';\nimport { getAssistantSdk } from '../assistant-sdk';\nexport async function fetchTermsAndConditionsVersion() {\n    try {\n        return await getAssistantSdk().fetchTermsAndConditionsVersion();\n    }\n    catch (e) {\n        throw new AssistantError('network_error', 'There was an issue connecting to the Assistant server. Please try again.', 0);\n    }\n}\n","import { AnacondaAssistant } from '@anaconda/assistant-sdk';\nimport { getAccessToken } from './utils/nucleus/auth';\nlet assistantSdk;\nexport function getAssistantSdk() {\n    if (!assistantSdk) {\n        throw new Error('Assistant not initialized');\n    }\n    return assistantSdk;\n}\nexport async function initAssistantSdk(options) {\n    assistantSdk = new AnacondaAssistant(options);\n    try {\n        const accessToken = await getAccessToken();\n        if (!accessToken) {\n            throw new Error('No access token');\n        }\n        assistantSdk.accessToken.setAccessToken(accessToken);\n    }\n    catch (e) {\n        console.log('Error fetching access: ', e);\n    }\n    return assistantSdk;\n}\n","import { AssistantIcon } from './components/icon';\nimport { AssistantButton } from './components/assistant-button';\nimport { AssistantSidebarWidget } from './jupyter/assistantSidebarWidget';\nimport { getActivateAssistantWithCodeSelection } from './jupyter/activateAssistantWithCodeSelection';\nimport { initializeAssistant } from './jupyter/initializeAssistant';\nimport { useStore } from './store/store';\nimport { sharedCore } from './jupyter/extension-load-utils';\nimport { initAssistantSdk } from './assistant-sdk';\nimport { CLIENT_VERSION } from './config';\nimport { bindSyncDiskStateChained, syncDiskStateChained } from './jupyter/syncStateDebounced';\nimport { logout, shareJupyterFrontEndWithLogin } from './utils/nucleus/accountUtils';\nexport const assistantToggleCommand = 'assistant:toggle';\nexport const assistantCellCommand = 'assistant:cell';\nexport default class AssistantPlugin {\n    async activate(app, opts) {\n        const { corePlugin, notebookTracker, palette } = opts;\n        await sharedCore.setCore(corePlugin);\n        if (!sharedCore.getFeatureFlagBool('monorepo-assistant')) {\n            return;\n        }\n        // Allowing login to create new notebooks\n        shareJupyterFrontEndWithLogin(app);\n        const config = sharedCore.getCoreReady().config;\n        await initAssistantSdk({\n            clientVersion: CLIENT_VERSION,\n            // The API URL might come as null from the shared core\n            apiUrl: config.assistant.apiUrl || undefined,\n            environmentType: config.assistant.environmentType,\n            enableDataCollection: useStore.getState().settings.enableDataCollection\n        });\n        console.log('Assistant extension activated!');\n        // Sync state across different ports / windows\n        await syncDiskStateChained();\n        bindSyncDiskStateChained();\n        const assistantSidebarWidget = new AssistantSidebarWidget({\n            notebookTracker,\n            jupyterFrontEnd: app\n        });\n        const assistantButton = new AssistantButton(app.commands);\n        initializeAssistant({ assistant: assistantSidebarWidget, jupyterFrontEnd: app });\n        app.commands.addCommand(assistantToggleCommand, {\n            label: 'Open Anaconda Assistant',\n            execute: () => assistantSidebarWidget.toggleWidget()\n        });\n        app.contextMenu.addItem({\n            command: assistantToggleCommand,\n            selector: '.jp-Notebook'\n        });\n        palette.addItem({ command: assistantToggleCommand, category: 'Assistant' });\n        app.docRegistry.addWidgetExtension('Notebook', assistantButton);\n        app.commands.addCommand(assistantCellCommand, {\n            icon: AssistantIcon,\n            execute: getActivateAssistantWithCodeSelection({\n                assistant: assistantSidebarWidget,\n                notebookTracker\n            })\n        });\n        const accountInterval = setInterval(async () => {\n            const state = useStore.getState();\n            if (state.account) {\n                clearInterval(accountInterval);\n                const context = app.shell.currentWidget?.context;\n                const factoryName = context?.factoryName;\n                const isNotebook = factoryName && factoryName.toLowerCase() === 'notebook';\n                if (!isNotebook &&\n                    !Boolean(window.localStorage.getItem('anaconda-assistant-opened-once'))) {\n                    await app.commands.execute('notebook:create-new');\n                    window.localStorage.setItem('anaconda-assistant-opened-once', 'true');\n                }\n                await state.updateAccount();\n            }\n        }, 100);\n        // Detecting logouts from other tabs\n        window.addEventListener('storage', async (e) => {\n            try {\n                if (e.key === 'anaconda-assistant' && e.oldValue && e.newValue) {\n                    const previousStorage = JSON.parse(e.oldValue);\n                    const newStorage = JSON.parse(e.newValue);\n                    const previousStorageState = previousStorage.state;\n                    const newStorageState = newStorage.state;\n                    const previousTermsVersion = previousStorage.terms.version;\n                    const newTermsVersion = newStorage.terms.version;\n                    if (!previousStorageState || !newStorageState) {\n                        return;\n                    }\n                    if (previousTermsVersion !== null && newTermsVersion === null) {\n                        await logout([\n                            'An Assistant in another browser tab logged out.',\n                            'You will need to log in again to use the Assistant.'\n                        ].join(' '));\n                    }\n                }\n            }\n            catch (e) {\n                console.error('Error detecting logouts from other tabs', e);\n            }\n        });\n    }\n}\n","import React, { useEffect } from 'react';\nfunction doClearTimeout(timeout) {\n    if (timeout) {\n        clearTimeout(timeout);\n    }\n}\nexport function RemoveAfter(params) {\n    const { delay, show, children } = params;\n    // Used to remove elements from the DOM after an animation is done,\n    // otherwise they might be visible in certain screens or after resizing the window.\n    const [remove, setRemove] = React.useState(true);\n    // Debounce the removal of the popup, to allow the animation to finish\n    const timeoutRef = React.useRef(null);\n    useEffect(() => {\n        doClearTimeout(timeoutRef.current);\n        if (show) {\n            setRemove(false);\n        }\n        else {\n            timeoutRef.current = setTimeout(() => {\n                setRemove(true);\n            }, delay);\n        }\n        return () => {\n            doClearTimeout(timeoutRef.current);\n        };\n    }, [show, delay]);\n    return React.createElement(React.Fragment, null, remove ? null : children);\n}\n","import React from 'react';\nimport { Icons } from '@anaconda/assistant-components';\nimport { CLIENT_VERSION } from '../config';\nimport { logout } from '../utils/nucleus/accountUtils';\nexport function AccessScreen() {\n    const contact_url = 'https://www.anaconda.com/contact';\n    const learn_url = 'https://www.anaconda.com/blog/anaconda-assistant-launches-to-bring-instant-data-analysis-code-generation-and-insights-to-users';\n    function redirectToPage(url) {\n        window.location.href = url;\n    }\n    return (React.createElement(\"div\", { className: \"as-container\" },\n        React.createElement(\"div\", { style: { marginTop: 70 } }),\n        React.createElement(\"div\", { className: \"as-home-screen-container\" },\n            React.createElement(\"div\", { className: \"as-home-screen-icon\" },\n                React.createElement(Icons.ChatBot, null)),\n            React.createElement(\"div\", { className: \"as-title-text\" },\n                \"Anaconda Assistant\",\n                React.createElement(\"div\", { className: \"as-version-text\" }, CLIENT_VERSION)),\n            React.createElement(\"div\", { className: \"as-access-body-container\" },\n                React.createElement(\"div\", { className: \"as-access-inner-container\" },\n                    React.createElement(\"div\", { className: \"as-access-header\" }, \"Welcome!\"),\n                    React.createElement(\"div\", { className: \"as-access-text\" },\n                        \"Unfortunately, you do not seem to have access to the Anaconda Assistant. This could either occur for an issue with your credentials, or because your organization has not requested for access to the Anaconda Assistant for their users. To gain access, please reach out to your organization administrator or our support team. In the meantime, enjoy exploring the many other features and tools available to you. Thank you for being part of the Anaconda community!\",\n                        ' ',\n                        React.createElement(\"a\", { href: learn_url, target: \"_blank\" }, 'Learn About Anaconda Assistant'),\n                        '.')),\n                React.createElement(\"div\", { className: \"as-access-inner-container-buttons\" },\n                    React.createElement(\"button\", { className: \"as-access-button\", onClick: () => redirectToPage(contact_url) }, \"Contact Us\"),\n                    React.createElement(\"button\", { className: \"as-logout-button\", onClick: () => logout() }, \"Logout\"))))));\n}\n","import React, { useEffect } from 'react';\nimport { animated, useSpring } from '@react-spring/web';\nimport { SelectDataFrame } from './home-screen/dataframe-options';\nimport { attachmentMessageInstruction } from '../utils/specialPrefixes';\nimport { useStore } from '../store/store';\nimport { getActiveChat, getActiveNotebook } from '../store/state-fns';\nimport { RemoveAfter } from './RemoveAfterHide';\nimport { Icons } from '@anaconda/assistant-components';\nexport function AddContextPopup({ onAddContext }) {\n    const [activeNotebook, activeChat, attachContextOpen, setAttachContextOpen] = useStore(state => [\n        getActiveNotebook(state),\n        getActiveChat(state),\n        state.attachContextOpen,\n        state.setAttachContextOpen\n    ]);\n    const dataFrames = activeNotebook?.notebookState.dataframes;\n    useEffect(() => {\n        if (!dataFrames?.length) {\n            setAttachContextOpen(false);\n        }\n    }, [dataFrames, setAttachContextOpen]);\n    const props = useSpring({\n        right: 10,\n        bottom: attachContextOpen ? 70 : -150,\n        width: 422\n    });\n    return (React.createElement(RemoveAfter, { delay: 500, show: attachContextOpen },\n        React.createElement(\"div\", { className: \"as-popup-outer-container\", style: { zIndex: 2 } },\n            React.createElement(animated.div, { className: \"as-explain-popup\", style: props },\n                React.createElement(\"div\", { className: \"as-popup-container\" },\n                    React.createElement(SelectDataFrame, { buttonLabel: activeChat ? 'Attach dataframe to current chat' : 'Attach dataframe to new chat', onSubmit: dataframe => {\n                            setAttachContextOpen(false);\n                            const instruction = attachmentMessageInstruction(dataframe.name, dataframe.cols);\n                            onAddContext(instruction);\n                        }, closeElement: React.createElement(\"div\", { className: \"as-popup-close-icon\", style: {\n                                marginLeft: 'auto'\n                            }, onClick: () => {\n                                setAttachContextOpen(false);\n                            } },\n                            React.createElement(Icons.Close, null)) }))))));\n}\n","import { ToolbarButton } from '@jupyterlab/apputils';\nimport { AssistantIcon } from './icon';\nimport { assistantToggleCommand } from '../assistant_plugin';\nexport class AssistantButton {\n    /**\n     * Instantiate a new Jupyter Assistant.\n     * @param commands The command registry.\n     */\n    constructor(commands) {\n        this._commands = commands;\n    }\n    /**\n     * Create a new extension object.\n     */\n    createNew(panel) {\n        const button = new ToolbarButton({\n            tooltip: 'Anaconda Assistant',\n            icon: AssistantIcon,\n            onClick: () => {\n                this._commands.execute(assistantToggleCommand);\n            }\n        });\n        // TODO:\n        // This seems to be needed for v4.\n        // On window reload, some extensions might not have loaded, therefore the Assistant can't be placed where it goes on Cloud Notebooks\n        panel.toolbar.insertAfter('cellType', 'assistant', button);\n        // Putting the assistant button before the spacer also means putting it after the Panel menu buttons\n        panel.toolbar.insertBefore('spacer', 'assistant', button);\n        return button;\n    }\n}\n","import React from 'react';\nimport { login } from '../utils/nucleus/accountUtils';\nimport { Icons } from '@anaconda/assistant-components';\nimport { CLIENT_VERSION } from '../config';\nexport function AssistantLogin() {\n    return (React.createElement(\"div\", { className: \"as-container\" },\n        React.createElement(\"div\", { className: \"as-login-container\" },\n            React.createElement(\"div\", { className: \"as-login-header\" },\n                React.createElement(\"div\", { className: \"as-login-icon\" },\n                    React.createElement(Icons.AnacondaLogo, null)),\n                React.createElement(\"div\", { className: \"as-title-text\" },\n                    \"Anaconda Assistant\",\n                    React.createElement(\"div\", { className: \"as-subtitle-text\" }, \"AI-powered coding, insights and debugging in your notebooks.\"))),\n            React.createElement(\"div\", { className: \"as-login-body\" },\n                \"To enable the following extensions, create an account or sign in.\",\n                React.createElement(\"ul\", null,\n                    React.createElement(\"li\", null,\n                        React.createElement(Icons.Sparkle, null),\n                        \" Anaconda Assistant\",\n                        React.createElement(\"div\", { className: \"as-version-text\" }, CLIENT_VERSION)),\n                    React.createElement(\"li\", { className: \"coming-soon\" }, \"Coming soon!\"),\n                    React.createElement(\"li\", { className: \"disabled\" },\n                        React.createElement(Icons.DataCatalog, null),\n                        \" Data Catalogs\"),\n                    React.createElement(\"li\", { className: \"disabled\" },\n                        React.createElement(Icons.Panel, null),\n                        \" Panel Deployments\"),\n                    React.createElement(\"li\", { className: \"disabled\" },\n                        React.createElement(Icons.Share, null),\n                        \" Sharing\")),\n                React.createElement(\"button\", { className: \"as-create-account-button\", onClick: login }, \"Create Account\"),\n                React.createElement(\"div\", { className: \"as-login-sign-in-text\" },\n                    \"Already have an account? \",\n                    React.createElement(\"a\", { onClick: login }, \"Sign In\"))),\n            React.createElement(\"div\", { className: \"as-login-footer\" },\n                React.createElement(\"div\", { className: \"as-login-help\" },\n                    React.createElement(Icons.Question, null)),\n                React.createElement(\"div\", { className: \"as-login-footer-text\" },\n                    \"For more information, read our \",\n                    React.createElement(\"a\", { href: \"https://docs.anaconda.com/free/anaconda-notebooks/anaconda-assistant/\", target: \"_blank\" }, \"Anaconda Assistant documentation\"),\n                    \".\")))));\n}\n","import * as React from 'react';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { dataFrameCheckerPython, parsePythonResult } from '../utils/dataframe-checker';\nimport { NotebookActions } from '@jupyterlab/notebook';\nimport { postExecutionResult } from '../api/feedback';\nimport { KernelMessage } from '@jupyterlab/services';\nimport { useStore } from '../store/store';\nimport { AssistantPanel } from './assistant-panel';\nimport { extractErrorContext } from './notebook-error-helper';\nimport { useInterval } from 'usehooks-ts';\nimport { convertSelection, getSelectionFromEditor, isSelectionEqual } from '../utils/text-selection-utils';\nimport { shallow } from 'zustand/shallow';\nimport { AssistantLogin } from './assistant-login';\nimport { isLocalNotebooks } from '../utils/environmentType';\nimport { syncDiskStateChained } from '../jupyter/syncStateDebounced';\nexport function AssistantPanelContainer({ tracker }) {\n    const [account, path, setPath, setCellError] = useStore(state => [state.account, state.path, state.setPath, state.setCellError], shallow);\n    const restarted = useRef(false);\n    const executingCode = useRef(null);\n    const jupyterSelection = useRef(null);\n    useInterval(() => {\n        // Every 800ms we check the current text selection\n        checkTextSelection(tracker);\n    }, 800);\n    const checkNotebookVariables = useCallback(() => {\n        const requestExecute = getKernel(tracker)?.requestExecute({ code: dataFrameCheckerPython }, false);\n        if (requestExecute) {\n            requestExecute.onIOPub = (msg) => {\n                if (KernelMessage.isExecuteResultMsg(msg)) {\n                    if (msg.content.data && msg.content.data['text/plain']) {\n                        const nbState = parsePythonResult(msg.content.data['text/plain']);\n                        if (nbState) {\n                            const path = tracker.currentWidget?.context.path || '';\n                            setPath(path, nbState);\n                        }\n                    }\n                }\n            };\n        }\n    }, [setPath, tracker]);\n    const cellExecuted = useCallback((_, context) => {\n        const { cell, notebook, success, error } = context;\n        checkNotebookVariables();\n        if (!success && error) {\n            setCellError(extractErrorContext(cell, notebook, error.message));\n        }\n        if (executingCode.current?.cellId && executingCode.current?.cellId === cell.model.id) {\n            postExecutionResult({ ...executingCode.current }, success, error);\n            executingCode.current = null;\n        }\n    }, [checkNotebookVariables, setCellError]);\n    useEffect(() => {\n        function notebookChanged(_, context) {\n            // We want to set the path to the new notebook as soon as we switch, even if we don't\n            // have the notebook state yet.\n            setPath(context?.sessionContext.path || '', { user: '', dataframes: [] });\n            // When the notebook changes, we sync the disk state to the store\n            syncDiskStateChained();\n            if (!context?.sessionContext.session) {\n                // When opening a new notebook, the session may not be available yet, so we need to\n                // wait a bit before checking the notebook variables.\n                setTimeout(checkNotebookVariables, 1000);\n            }\n            else {\n                checkNotebookVariables();\n            }\n        }\n        function kernelStatusChanged(_, status) {\n            if (status === 'restarting' || status === 'autorestarting') {\n                restarted.current = true;\n            }\n            else if (status === 'idle' && restarted.current) {\n                restarted.current = false;\n                checkNotebookVariables();\n            }\n        }\n        checkNotebookVariables();\n        NotebookActions.executed.connect(cellExecuted);\n        tracker.currentChanged.connect(notebookChanged);\n        getKernel(tracker)?.statusChanged.connect(kernelStatusChanged);\n        return () => {\n            NotebookActions.executed.disconnect(cellExecuted);\n            tracker.currentChanged.disconnect(notebookChanged);\n            getKernel(tracker)?.statusChanged.disconnect(kernelStatusChanged);\n        };\n    }, [checkNotebookVariables, cellExecuted, setPath, tracker]);\n    function checkTextSelection(tracker) {\n        const editor = tracker.currentWidget?.content?.activeCell?.editor;\n        const isMarkdown = editor?.model.mimeType === 'text/x-ipythongfm';\n        if (editor && !isMarkdown) {\n            const selection = editor.getSelection();\n            // We use the jupyterSelection ref as a first check to see if any selection has\n            // changed. If it has, we update the selected text on the global store\n            const selectionEqual = isSelectionEqual(jupyterSelection.current, selection);\n            if (!selectionEqual) {\n                const selectedText = getSelectionFromEditor(editor, selection);\n                useStore.getState().setTextSelection(selectedText);\n                jupyterSelection.current = convertSelection(selection);\n            }\n        }\n    }\n    async function addCodeToNotebook(code, activeMessageId, session, inPlace = false) {\n        const notebook = tracker.currentWidget;\n        const _addCodeToNotebook = useStore.getState().settings.addCodeToNotebook || 'below-active-cell';\n        if (notebook) {\n            if (!inPlace) {\n                switch (_addCodeToNotebook) {\n                    case 'below-active-cell':\n                        NotebookActions.insertBelow(notebook.content);\n                        break;\n                    case 'at-end-of-notebook':\n                        notebook.content.activeCellIndex = notebook.content.widgets.length - 1;\n                        NotebookActions.insertBelow(notebook.content);\n                        break;\n                    case 'in-place':\n                        break;\n                }\n            }\n            await notebook.content?.activeCell?.ready;\n            NotebookActions.replaceSelection(notebook.content, code);\n            const cellId = notebook.content.activeCell?.model.id;\n            executingCode.current = { code, cellId, activeMessageId, session };\n            await NotebookActions.run(notebook.content, notebook.sessionContext);\n        }\n    }\n    function getActiveCodeCell() {\n        // TODO: This seems only needed in v3 in the monorepo, not in the jupyterassistant repo\n        return tracker.currentWidget?.content.activeCell?.model.sharedModel.source || '';\n    }\n    if (!account && isLocalNotebooks()) {\n        return React.createElement(AssistantLogin, null);\n    }\n    return path ? (React.createElement(AssistantPanel, { tracker: tracker, addCodeToNotebook: addCodeToNotebook, getActiveCodeCell: getActiveCodeCell })) : null;\n}\nfunction getKernel(tracker) {\n    return tracker.currentWidget?.sessionContext.session?.kernel;\n}\n","import * as React from 'react';\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport { AssistantPanelContainer } from './assistant-panel-container';\nimport { ThemeProvider, createTheme } from '@mui/material';\nexport class AssistantPanelWidget extends ReactWidget {\n    constructor(notebookTracker) {\n        super();\n        this._notebookTracker = notebookTracker;\n    }\n    render() {\n        const theme = createTheme({\n            palette: {\n                primary: {\n                    main: '#43B049'\n                }\n            }\n        });\n        return (React.createElement(ThemeProvider, { theme: theme },\n            React.createElement(AssistantPanelContainer, { tracker: this._notebookTracker })));\n    }\n}\n","import * as React from 'react';\nimport { Switch } from '@mui/material';\nimport { AssistantComponentContext, TermsAndConditionsPage, matchMultipleChildNames } from '@anaconda/assistant-components';\nimport { shallow } from 'zustand/shallow';\nimport { ChatPanel } from './chat-panel';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { ErrorScreen } from './error-screen';\nimport { useStore } from '../store/store';\nimport { SettingsWrapper } from './settings';\nimport { ChatHeader } from './chat-header';\nimport { AccessScreen } from './access-screen';\nimport { CLIENT_VERSION } from '../config';\nimport { fetchTermsAndConditionsVersion } from '../api/terms-and-conditions-version';\nexport function AssistantPanel(props) {\n    return (React.createElement(ErrorBoundary, { FallbackComponent: ErrorScreen },\n        React.createElement(InnerPanel, Object.assign({}, props))));\n}\nfunction InnerPanel(props) {\n    const [olderThan13, setOlderThan13] = React.useState(false);\n    const [access, accepted, acceptTerms, settingsOpen, enableDataCollection, setEnableDataCollection] = useStore(state => [\n        state.access,\n        state.terms.accepted,\n        state.acceptTerms,\n        state.settings.open,\n        state.settings.enableDataCollection,\n        state.setEnableDataCollection\n    ], shallow);\n    if (!access) {\n        return React.createElement(AccessScreen, null);\n    }\n    if (!accepted) {\n        return (React.createElement(AssistantComponentContext.Provider, { value: {\n                replaceChildren: matchMultipleChildNames([\n                    'data-collection-setting-switch',\n                    (childClassName) => (React.createElement(\"div\", { className: childClassName },\n                        React.createElement(Switch, { checked: enableDataCollection, onChange: (_, checked) => setEnableDataCollection(checked) })))\n                ], [\n                    'accept-terms-setting-switch',\n                    (childClassName) => (React.createElement(\"div\", { className: childClassName },\n                        React.createElement(Switch, { checked: olderThan13, onChange: (_, checked) => setOlderThan13(checked) })))\n                ])\n            } },\n            React.createElement(TermsAndConditionsPage, { clientVersion: CLIENT_VERSION, accept: async () => {\n                    let version = useStore.getState().terms.version;\n                    if (!version) {\n                        try {\n                            version = await fetchTermsAndConditionsVersion();\n                        }\n                        catch (e) {\n                            console.error('Failed to fetch terms version');\n                            useStore.getState().logout();\n                            return;\n                        }\n                    }\n                    acceptTerms(version, true);\n                }, enableDataCollection: enableDataCollection, setEnableDataCollection: setEnableDataCollection, olderThan13: olderThan13, setOlderThan13: setOlderThan13 })));\n    }\n    if (settingsOpen)\n        return (React.createElement(React.Fragment, null,\n            React.createElement(ChatHeader, null),\n            React.createElement(SettingsWrapper, null)));\n    return (React.createElement(\"div\", { className: \"as-container\" },\n        React.createElement(ChatPanel, Object.assign({}, props))));\n}\n","import React from 'react';\nimport { useStore } from '../store/store';\nimport { getPreviousChatName, showBackButton } from '../store/state-fns';\nimport { shallow } from 'zustand/shallow';\nimport { Tooltip } from '@mui/material';\nimport { Icons } from '@anaconda/assistant-components';\nexport function BackButton() {\n    const [shouldShowBackButton, previousChatName, gotoPreviousChat] = useStore(state => [showBackButton(state), getPreviousChatName(state), state.gotoPreviousChat], shallow);\n    // Don't show the back button unless necessary (see showBackButton in state-fns.ts)\n    if (!shouldShowBackButton) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"as-back-button-container\" },\n            React.createElement(Tooltip, { title: \"Resume previous chat\" },\n                React.createElement(\"div\", { className: \"as-back-button-icon\", onClick: gotoPreviousChat },\n                    React.createElement(Icons.ChevronLeft, null))),\n            React.createElement(\"div\", { className: \"as-back-button-title-container\" },\n                React.createElement(\"div\", { className: \"as-back-button-title\" },\n                    \"Resume previous chat: \",\n                    previousChatName)))));\n}\n","import { CLIENT_VERSION, SHOW_SETTINGS } from '../config';\nimport React from 'react';\nimport { useStore } from '../store/store';\nimport { shallow } from 'zustand/shallow';\nimport { Icons } from '@anaconda/assistant-components';\nexport function ChatHeader() {\n    const [settingsOpen, toggleSettings] = useStore(state => [state.settings.open, state.toggleSettings], shallow);\n    return (React.createElement(\"div\", { className: \"as-chat-header-container\" },\n        React.createElement(\"div\", { className: \"as-chat-header-title-container\" },\n            React.createElement(\"div\", { className: \"as-chat-header-text-icon\" },\n                React.createElement(\"div\", { className: \"as-chat-header-main-icon\" },\n                    React.createElement(Icons.AnacondaLogo, null)),\n                React.createElement(\"div\", { className: \"as-chat-header-main-text\" }, \"Anaconda Assistant\")),\n            React.createElement(\"div\", { className: \"as-chat-header-version-text\" }, CLIENT_VERSION)),\n        React.createElement(\"div\", { className: \"as-chat-header-settings-container\", style: settingsOpen\n                ? { borderLeft: '1px solid rgba(85,85,85, 0.075)' }\n                : { borderBottom: '1px solid rgba(85,85,85, 0.075)' } }, SHOW_SETTINGS && (React.createElement(\"div\", { className: \"as-header-settings-icon\", onClick: toggleSettings },\n            React.createElement(Icons.Settings, null))))));\n}\n","import React, { useEffect, useState } from 'react';\nimport { NotebookActions } from '@jupyterlab/notebook';\nimport { Icons } from '@anaconda/assistant-components';\nimport { useStore } from '../store/store';\nimport useResizeObserver from 'use-resize-observer';\nimport { MessageButtons } from './messageButtons';\nimport { extractMessageBlocks } from '../utils/code-cleaner';\nimport { getActiveChat, getActiveNotebook, getInProgressResponse } from '../store/state-fns';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport { shallow } from 'zustand/shallow';\nimport { formatContextVariables } from '../utils/contextMessage';\nimport { BackButton } from './back-button';\nimport { ErrorMessage } from './errorMessage';\nimport { attachmentMessagePrefix, cleanMessageWithAttachmentPrefix } from '../utils/specialPrefixes';\nexport function ChatMessages({ tracker, addCodeToNotebook, scrollFn }) {\n    const [messages, chatContext, inProgressType] = useStore(state => {\n        const activeChat = getActiveChat(state);\n        return [activeChat?.messages, activeChat?.context, activeChat?.inProgress?.type];\n    }, shallow);\n    if (!messages || !chatContext)\n        return null;\n    async function exportChatToNotebook() {\n        const notebook = tracker.currentWidget;\n        if (!(notebook && messages))\n            return;\n        for (const message of messages) {\n            const messageBlocks = extractMessageBlocks(message.content);\n            let hasPrintedRole = false;\n            for (const block of messageBlocks) {\n                NotebookActions.insertBelow(notebook.content);\n                if (block.type === 'python') {\n                    NotebookActions.changeCellType(notebook.content, 'code');\n                }\n                else {\n                    NotebookActions.changeCellType(notebook.content, 'markdown');\n                }\n                const role = message.role === 'user' ? 'User' : 'Assistant';\n                const parts = [`# ${role}`, block.content];\n                if (hasPrintedRole) {\n                    parts.shift();\n                }\n                else {\n                    hasPrintedRole = true;\n                }\n                const content = parts.join('\\n');\n                await notebook.content?.activeCell?.ready;\n                NotebookActions.replaceSelection(notebook.content, content);\n                await NotebookActions.run(notebook.content, notebook.sessionContext);\n            }\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(BackButton, null),\n        React.createElement(InitialMessage, { tracker: tracker, initialMessage: messages[0], chatContext: chatContext }),\n        messages.slice(1).map((message, idx) => {\n            switch (message.role) {\n                case 'user':\n                    return (React.createElement(UserMessageComponent, { key: idx, tracker: tracker, message: {\n                            ...message,\n                            content: cleanMessageWithAttachmentPrefix(message.content)\n                        } }));\n                case 'assistant':\n                    return (React.createElement(CompletedAssistantMessage, { key: idx, tracker: tracker, runCode: addCodeToNotebook, message: message }));\n            }\n        }),\n        inProgressType === 'active' && React.createElement(ActiveCodeMessage, { scrollFn: scrollFn }),\n        inProgressType === 'error' && React.createElement(ErrorCodeMessage, null),\n        inProgressType ? null : (React.createElement(\"div\", { className: \"as-export-chat-container\", onClick: exportChatToNotebook },\n            React.createElement(Icons.ChevronLeft, null),\n            React.createElement(\"div\", null, \"Export and run this chat in your Notebook\")))));\n}\nfunction InitialMessage({ tracker, initialMessage, chatContext }) {\n    if (initialMessage?.role !== 'user')\n        return null;\n    return (React.createElement(UserMessageComponent, { isInitialMessage: true, tracker: tracker, message: {\n            ...initialMessage,\n            content: determineFirstMessageText(chatContext, initialMessage.content)\n        } }));\n}\nfunction UserMessageComponent({ isInitialMessage, tracker, message }) {\n    return (React.createElement(\"div\", { className: \"as-user-chat-message-buttons-container\" },\n        React.createElement(\"div\", { className: \"as-user-chat-message-container\" },\n            React.createElement(\"div\", { className: \"as-user-chat-message-icon-container\" },\n                React.createElement(\"div\", { className: \"as-user-chat-message-icon\" },\n                    React.createElement(Icons.User, null))),\n            React.createElement(\"div\", { className: \"as-user-chat-message-text\" }, message.content)),\n        !isInitialMessage && (React.createElement(MessageButtons, { canDelete: true, canExport: true, tracker: tracker, message: message }))));\n}\nfunction ActiveCodeMessage({ scrollFn }) {\n    const response = useStore(state => getInProgressResponse(state));\n    // If the code response is changing (streaming back from the server), scroll to the bottom\n    useEffect(() => {\n        scrollFn();\n    }, [response, scrollFn]);\n    if (!response)\n        return null;\n    return (React.createElement(\"div\", { className: \"as-code-container\" },\n        React.createElement(\"div\", { className: \"as-code-message-container\" },\n            React.createElement(\"div\", { className: \"as-code-message-icon-container\" },\n                React.createElement(\"div\", { className: \"as-code-message-icon\" },\n                    React.createElement(Icons.ChatBot, null))),\n            React.createElement(\"div\", { className: \"as-code-message-text as-code-loading\" })),\n        response.content !== '' && React.createElement(ResponseBlocks, { message: response })));\n}\nfunction CompletedAssistantMessage({ tracker, message, runCode }) {\n    const submitFeedback = useStore(state => state.submitFeedback);\n    const { ref, width = 1 } = useResizeObserver();\n    function handleFeedback(sentiment, text) {\n        submitFeedback({ messageId: message.messageId, sentiment, text });\n    }\n    return (React.createElement(\"div\", { className: \"as-code-container\", ref: ref },\n        React.createElement(\"div\", { className: \"as-code-message-container\" },\n            React.createElement(\"div\", { className: \"as-code-message-icon-container\" },\n                React.createElement(\"div\", { className: \"as-code-message-icon\" },\n                    React.createElement(Icons.ChatBot, null))),\n            React.createElement(\"div\", { className: \"as-code-message-text\" })),\n        message.content !== '' && React.createElement(ResponseBlocks, { message: message, runCode: runCode }),\n        React.createElement(MessageButtons, { canSubmitFeedback: true, canExport: true, tracker: tracker, message: message, handleFeedback: handleFeedback, width: width })));\n}\nfunction ResponseBlocks({ message, runCode }) {\n    const messageBlocks = extractMessageBlocks(message.content);\n    const messageId = message.messageId || message.message_id;\n    return (React.createElement(\"div\", null, messageBlocks.map((block, idx) => block.type === 'text' ? (React.createElement(TextBlock, { key: idx, content: block.content })) : (React.createElement(CodeBlock, { key: idx, block: block, runCode: runCode, responseContainsPythonBlocks: messageBlocks.some(block => block.type === 'python'), messageId: messageId })))));\n}\nfunction TextBlock({ content }) {\n    return React.createElement(\"div\", { className: \"as-text-block\" }, content);\n}\nfunction CodeBlock({ block, messageId, runCode, responseContainsPythonBlocks }) {\n    const [runCodeClicked, setRunCodeClicked] = useState(false);\n    const [replaceClicked, setReplaceClicked] = useState(false);\n    const [copyClicked, setCopyClicked] = useState(false);\n    const activeNotebook = useStore(state => getActiveNotebook(state));\n    function handleOnRun(code) {\n        setRunCodeClicked(true);\n        setTimeout(() => setRunCodeClicked(false), 750);\n        const session = getActiveChat(useStore.getState())?.session;\n        if (session && runCode) {\n            runCode(code, messageId, session);\n        }\n    }\n    function handleOnReplace(code) {\n        setReplaceClicked(true);\n        setTimeout(() => setReplaceClicked(false), 750);\n        const session = getActiveChat(useStore.getState())?.session;\n        if (session && runCode) {\n            runCode(code, messageId, session, true);\n        }\n    }\n    function handleOnCopy(code) {\n        setCopyClicked(true);\n        setTimeout(() => setCopyClicked(false), 750);\n        navigator.clipboard.writeText(code);\n    }\n    // If response did not mark any blocks in the response as python, we assume all code blocks are\n    // python and show the run code button\n    const showRunCodeButton = runCode && (!responseContainsPythonBlocks || block.type === 'python');\n    // If a code block is selected in the notebook, we want to allow replacing the selection\n    const selectedText = activeNotebook?.notebookState.selectedText?.text;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"as-code-block\" },\n            React.createElement(Highlight, Object.assign({}, defaultProps, { code: block.content, language: \"python\" }), ({ className, style, tokens, getLineProps, getTokenProps }) => (React.createElement(\"pre\", { className: className, style: {\n                    ...style,\n                    padding: '12px 10px 12px',\n                    marginBottom: 8,\n                    overflowX: 'scroll',\n                    borderRadius: 4\n                } }, tokens.map((line, i) => (React.createElement(\"div\", Object.assign({}, getLineProps({ line, key: i })), line.map((token, key) => (React.createElement(\"span\", Object.assign({}, getTokenProps({ token, key })))))))))))),\n        showRunCodeButton && (React.createElement(\"div\", { className: \"as-run-code-container\" },\n            React.createElement(\"button\", { className: `as-code-run-button ${runCodeClicked ? 'clicked' : ''}`, onClick: () => handleOnRun(block.content) },\n                React.createElement(\"div\", { className: \"as-code-retry-icon\" },\n                    React.createElement(Icons.Play, null)),\n                React.createElement(\"div\", { className: \"as-code-retry-text\" }, \"Run code in Notebook\")),\n            React.createElement(\"button\", { disabled: !selectedText, className: `as-code-replace-button ${replaceClicked ? 'clicked' : ''} ${selectedText ? '' : 'disabled'}`, onClick: () => handleOnReplace(block.content) },\n                React.createElement(\"div\", { className: \"as-code-retry-icon\" },\n                    React.createElement(Icons.MagicWand, null)),\n                React.createElement(\"div\", { className: \"as-code-retry-text\" }, \"Replace selection\")),\n            React.createElement(\"button\", { className: `as-code-copy-button ${copyClicked ? 'clicked' : ''}`, onClick: () => handleOnCopy(block.content) },\n                React.createElement(\"div\", { className: \"as-code-copy-icon\" },\n                    React.createElement(Icons.Copy, null)),\n                React.createElement(\"div\", { className: \"as-code-retry-text\" }, copyClicked ? 'Copied!' : 'Copy'))))));\n}\nfunction ErrorCodeMessage() {\n    const [activeChat, retryError] = useStore(state => [getActiveChat(state)?.inProgress, state.retryError], shallow);\n    if (!activeChat || activeChat.type !== 'error') {\n        return null;\n    }\n    return React.createElement(ErrorMessage, { message: activeChat.message, retryError: retryError });\n}\nfunction determineFirstMessageText(context, content) {\n    const suffix = formatContextVariables(context, content);\n    switch (context.type) {\n        case 'graph-dataframe':\n            return `Generate graph for ${suffix}`;\n        case 'describe-dataframe':\n            return `Explain data in ${suffix}`;\n        case 'explain-code':\n            return `Explain ${suffix}`;\n        case 'comment-code':\n            return `Comment ${suffix}`;\n        case 'improve-code':\n            return `Refactor ${suffix}`;\n        case 'debug-error':\n            return `Debug error using ${suffix}`;\n        case 'suggestions-chat':\n        case 'default-python':\n            if (content.startsWith(attachmentMessagePrefix)) {\n                return cleanMessageWithAttachmentPrefix(content);\n            }\n            else {\n                return `${content} (using ${suffix})`;\n            }\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { shallow } from 'zustand/shallow';\nimport { Tooltip } from '@mui/material';\nimport { Icons } from '@anaconda/assistant-components';\nimport { TOKEN_LIMIT } from '../config';\nimport { countTokens } from '../utils/token-counter';\nimport { useStore } from '../store/store';\nimport { getActiveChat, getActiveNotebook } from '../store/state-fns';\nimport { Spacer } from './common';\nimport { ErrorPopup } from './error-popup';\nimport useResizeObserver from 'use-resize-observer';\nimport { ExplainPopup } from './explain-popup';\nimport { AddContextPopup } from './add-context-popup';\nimport { subscribe } from '@github/paste-markdown';\nimport { useEffectOnce } from 'usehooks-ts';\nexport function ChatPanelFooter({ scrollFn }) {\n    const [activeChatKey, messagesLength, inProgressMessage, activeChatTokens, activeChatMaxTokens, activeChatType, addInstruction] = useStore(state => [\n        getActiveChat(state)?.key,\n        getActiveChat(state)?.messages.length,\n        getActiveChat(state)?.inProgress,\n        getActiveChat(state)?.tokens,\n        getActiveChat(state)?.maxTokens,\n        getActiveChat(state)?.inProgress?.type,\n        state.addInstruction\n    ], shallow);\n    const [instructionTokens, setInstructionTokens] = useState(0);\n    const { ref, width } = useResizeObserver();\n    function addNewInstruction(instruction) {\n        addInstruction({ instruction });\n        setTimeout(scrollFn, 100);\n    }\n    const maxTokens = activeChatMaxTokens != null ? activeChatMaxTokens : TOKEN_LIMIT;\n    const [totalTokens, setTotalTokens] = useState(activeChatTokens != null ? activeChatTokens + instructionTokens : 0);\n    const [msg, setMsg] = useState('');\n    const timeoutRef = React.useRef(undefined);\n    useEffect(() => {\n        if (timeoutRef.current)\n            clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(() => {\n            clearTimeout(timeoutRef.current);\n            let _instructionTokens = instructionTokens;\n            if (!msg && inProgressMessage == null) {\n                _instructionTokens = 0;\n                setInstructionTokens(0);\n            }\n            setTotalTokens(activeChatTokens != null ? activeChatTokens + _instructionTokens : 0);\n        }, 250);\n        return () => clearTimeout(timeoutRef.current);\n    }, [messagesLength, activeChatTokens, instructionTokens, inProgressMessage, msg]);\n    function updateTokenCount(instruction) {\n        setInstructionTokens(countTokens(instruction));\n    }\n    function sendMessage(instruction) {\n        addNewInstruction(instruction);\n        setMsg('');\n    }\n    const placeholder = activeChatKey != null\n        ? 'Reply to this chat...'\n        : 'Or start a new chat without notebook context here...';\n    const is_active = activeChatType === 'active';\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ErrorPopup, { width: width }),\n        React.createElement(ExplainPopup, { width: width }),\n        React.createElement(AddContextPopup, { onAddContext: sendMessage }),\n        React.createElement(\"div\", { className: \"as-chat-footer-container\", ref: ref },\n            React.createElement(ChatInput, { msg: msg, setMsg: setMsg, sendMessage: sendMessage, loading: is_active, onInstructionUpdate: updateTokenCount, placeholder: placeholder, maxTokens: maxTokens }),\n            React.createElement(Footer, { sendMessage: sendMessage, loading: activeChatType != null, activeChatKey: activeChatKey, activeChatType: activeChatType, tokens: totalTokens, maxTokens: maxTokens }))));\n}\nfunction ChatInput({ msg, setMsg, sendMessage, loading, onInstructionUpdate, placeholder, maxTokens }) {\n    const [setHidePopups] = useStore(state => [state.setHidePopups]);\n    function handleSubmit(e) {\n        if (msg.trim() !== '') {\n            sendMessage(msg.trim());\n        }\n        e.preventDefault();\n    }\n    function handleKeyDown(e) {\n        if (e.key === 'Enter' && !e.shiftKey)\n            handleSubmit(e);\n        setHidePopups(true);\n    }\n    // Tokens are generally 3 characters long, so we limit the input to 1/3 of the total limit\n    const maxTextareaInputLength = maxTokens;\n    function handleOnChange(e) {\n        const nextMsg = e.target.value.slice(0, maxTextareaInputLength + 1);\n        onInstructionUpdate(nextMsg);\n        setMsg(nextMsg);\n    }\n    const textAreaID = 'as-instruction-input-textarea';\n    useEffectOnce(() => {\n        const element = window.document.getElementById(textAreaID);\n        if (element) {\n            subscribe(element);\n        }\n    });\n    // The following lines make the textarea grow with the text\n    let textareaScrollHeight = 0;\n    let formHeight = 0;\n    let formMarginTop = 0;\n    let textareaHeight = 0;\n    if (!msg) {\n        textareaScrollHeight = 0;\n        formHeight = 35;\n        formMarginTop = 0;\n        textareaHeight = 16;\n    }\n    else {\n        textareaScrollHeight = window.document.getElementById(textAreaID)?.scrollHeight || 0;\n        formHeight = textareaScrollHeight + 6;\n        formMarginTop = formHeight >= 35 ? 36 - formHeight : 0;\n        if (formMarginTop < -178) {\n            formMarginTop = -178;\n        }\n        textareaHeight = textareaScrollHeight ? textareaScrollHeight - 4 : 16;\n    }\n    // Focus the textarea when the chat stops loading\n    useEffect(() => {\n        if (!loading) {\n            const element = window.document.getElementById(textAreaID);\n            if (element) {\n                element.focus();\n            }\n        }\n    }, [loading, textAreaID]);\n    return (React.createElement(\"div\", { className: \"as-instruction-container\" },\n        React.createElement(\"form\", { style: {\n                height: formHeight,\n                marginTop: formMarginTop\n            }, onSubmit: handleSubmit, className: \"as-instruction-input-form\" },\n            React.createElement(\"textarea\", { id: textAreaID, maxLength: maxTextareaInputLength, style: {\n                    height: textareaHeight\n                }, disabled: loading, value: msg, onKeyDown: handleKeyDown, onChange: handleOnChange, rows: 1, className: \"as-instruction-input-textarea\", placeholder: placeholder }),\n            React.createElement(\"button\", { type: \"submit\", disabled: loading, className: \"as-instruction-submit-button\" },\n                React.createElement(\"div\", { className: \"as-instruction-send-icon\" },\n                    React.createElement(Icons.Send, null))))));\n}\nfunction Footer({ loading, activeChatKey, activeChatType, tokens, maxTokens }) {\n    const [resetActiveChat, activeNotebook, setAttachContextOpen] = useStore(state => [\n        state.resetActiveChat,\n        getActiveNotebook(state),\n        state.setAttachContextOpen\n    ]);\n    const completePercent = Math.ceil((tokens / maxTokens) * 100);\n    const resetDisabled = !activeChatKey || activeChatType === 'active';\n    function handleReset() {\n        if (!resetDisabled)\n            resetActiveChat();\n    }\n    const rawPercentage = Math.round((tokens / maxTokens) * 100);\n    const percentage = rawPercentage > 100 ? 100 : rawPercentage;\n    const dataFrames = activeNotebook?.notebookState.dataframes;\n    return (React.createElement(\"div\", { className: \"as-chat-footer\" },\n        React.createElement(\"div\", { style: {\n                display: 'flex'\n            } },\n            React.createElement(\"div\", { className: \"as-chat-token-container\" },\n                React.createElement(\"div\", { className: \"as-chat-token-bar-container\" },\n                    React.createElement(\"div\", { className: \"as-chat-token-filled\", style: { width: `${percentage >= 100 ? 100 : completePercent}%` } })),\n                React.createElement(\"div\", { className: \"as-chat-token-text\", style: tokens >= maxTokens ? { color: 'red' } : {} },\n                    \"Chat \",\n                    React.createElement(\"div\", { className: \"as-chat-token-count\" },\n                        percentage,\n                        \"%\"),\n                    \"full\")),\n            React.createElement(\"div\", { className: `as-chat-reset-container ${resetDisabled ? 'as-chat-reset-container-disabled' : ''}`, onClick: handleReset },\n                React.createElement(\"div\", { className: \"as-chat-reset-icon\" },\n                    React.createElement(Icons.RotateRight, null)),\n                React.createElement(Tooltip, { title: \"Restart this conversation\" },\n                    React.createElement(\"div\", { className: \"as-chat-reset-text\" }, \"Restart\")))),\n        React.createElement(Spacer, { flex: 1 }),\n        React.createElement(\"button\", { disabled: loading || !dataFrames?.length, className: \"as-instruction-attach-context-button\", onClick: () => setAttachContextOpen(true) },\n            React.createElement(\"div\", { className: \"as-instruction-attach-context-icon\" },\n                React.createElement(Icons.Clip, null)),\n            \"Attach to chat\")));\n}\n","import React, { useCallback, useRef } from 'react';\nimport { useStore } from '../store/store';\nimport { getActiveNotebook } from '../store/state-fns';\nimport { throttle } from 'lodash';\nimport { Spacer } from './common';\nimport { ChatPanelFooter } from './chat-panel-footer';\nimport { HomeScreen } from './home-screen/home-screen';\nimport { SubHeader } from './sub-header';\nimport { ChatHeader } from './chat-header';\nimport { ChatMessages } from './chat-messages';\nexport function ChatPanel({ tracker, addCodeToNotebook, getActiveCodeCell }) {\n    const activeChatKey = useStore(state => getActiveNotebook(state)?.activeChatKey);\n    const messageEndRef = useRef(null);\n    function scrollToBottom() {\n        messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const throttledScroll = useCallback(throttle(scrollToBottom, 500), []);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ChatHeader, null),\n        React.createElement(SubHeader, null),\n        React.createElement(\"div\", { className: \"as-chat-main-section\" },\n            !activeChatKey ? (React.createElement(HomeScreen, { getActiveCodeCell: getActiveCodeCell })) : (React.createElement(ChatMessages, { tracker: tracker, addCodeToNotebook: addCodeToNotebook, scrollFn: throttledScroll })),\n            React.createElement(\"div\", { style: { float: 'left', clear: 'both' }, ref: messageEndRef })),\n        React.createElement(Spacer, { flex: 1 }),\n        React.createElement(ChatPanelFooter, { scrollFn: throttledScroll })));\n}\n","import React from 'react';\nexport function Spacer({ flex }) {\n    return React.createElement(\"div\", { style: { flex: flex } });\n}\n","import React, { useEffect } from 'react';\nimport { animated, useSpring } from '@react-spring/web';\nimport { useStore } from '../store/store';\nimport { getActiveNotebook } from '../store/state-fns';\nimport { shallow } from 'zustand/shallow';\nimport { RemoveAfter } from './RemoveAfterHide';\nimport { Icons } from '@anaconda/assistant-components';\nexport function ErrorPopup({ width }) {\n    const error = useStore(state => getActiveNotebook(state)?.notebookState.error);\n    return error ? React.createElement(InnerPopup, { width: width, error: error }) : null;\n}\nfunction InnerPopup({ width, error }) {\n    const [showError, setShowError] = React.useState(false);\n    const [makeChatRequest, resetToHomeScreen, setCellError, hidePopups] = useStore(state => [state.makeChatRequest, state.resetToHomeScreen, state.setCellError, state.hidePopups], shallow);\n    const enableDataCollection = useStore.getState().settings.enableDataCollection;\n    useEffect(() => {\n        // Hide the popup if there's a response in progress\n        if (hidePopups) {\n            setShowError(false);\n            return;\n        }\n        // Show the popup if there's an error\n        if (error) {\n            setShowError(true);\n        }\n        else {\n            setShowError(false);\n        }\n    }, [error, hidePopups]);\n    function closeErrorDialog() {\n        setCellError(null);\n    }\n    function handleDebugCode(error) {\n        if (error) {\n            resetToHomeScreen();\n            makeChatRequest({\n                context: {\n                    type: 'debug-error',\n                    variables: {\n                        error_cell_code: error.cell.source,\n                        error_output: error.errorText\n                    }\n                },\n                instruction: ''\n            });\n            setCellError(null);\n        }\n    }\n    const props = useSpring({\n        right: 10,\n        bottom: showError ? 70 : -180,\n        width: width ? width - 80 : 360\n    });\n    return (React.createElement(RemoveAfter, { delay: 500, show: showError },\n        React.createElement(\"div\", { className: \"as-popup-outer-container\", style: showError ? { zIndex: 2 } : {} },\n            React.createElement(animated.div, { className: \"as-error-popup\", style: props },\n                React.createElement(\"div\", { className: \"as-popup-container\" },\n                    React.createElement(\"div\", { className: \"as-popup-header\" },\n                        React.createElement(\"div\", { className: \"as-popup-logo\" },\n                            React.createElement(\"div\", { className: \"as-popup-icon-container\" },\n                                React.createElement(\"div\", { className: \"as-popup-icon\" },\n                                    React.createElement(Icons.ChatBot, null))),\n                            React.createElement(\"div\", null, \"Anaconda Assistant\")),\n                        React.createElement(\"div\", { className: \"as-popup-close-icon\", onClick: closeErrorDialog },\n                            React.createElement(Icons.Close, null))),\n                    React.createElement(\"div\", { className: \"as-code-share-warning-message\" },\n                        React.createElement(\"div\", { className: \"as-warning-icon-wrapper\" },\n                            React.createElement(\"div\", { className: \"as-warning-icon\" },\n                                React.createElement(Icons.Warning, null))),\n                        React.createElement(\"div\", null,\n                            \"By debugging the active code cell, the error tied to the active code cell, and the code of the active code cell will be sent to\",\n                            ' ',\n                            enableDataCollection ? 'the Anaconda Servers and to ' : '',\n                            \"OpenAI.\")),\n                    React.createElement(\"div\", { className: \"as-popup-buttons\" },\n                        React.createElement(\"div\", { className: \"as-popup-buttons-section\" },\n                            React.createElement(\"div\", { className: \"as-home-screen-code-icon-container\" },\n                                React.createElement(\"div\", { className: \"as-home-screen-code-icon\" },\n                                    React.createElement(Icons.Code, null))),\n                            React.createElement(\"div\", null, \"Start a new conversation\")),\n                        React.createElement(\"div\", { className: \"as-popup-button\", onClick: () => handleDebugCode(error) },\n                            React.createElement(\"div\", null, \"Debug the active code cell\"),\n                            React.createElement(\"div\", { className: \"as-home-screen-starter-icon\" },\n                                React.createElement(Icons.ChevronRight, null)))))))));\n}\n","import React from 'react';\nimport { Icons } from '@anaconda/assistant-components';\nimport { CLIENT_VERSION } from '../config';\nimport { isLocalNotebooks } from '../utils/environmentType';\nimport { logout } from '../utils/nucleus/accountUtils';\nexport function ErrorScreen({ error, resetErrorBoundary }) {\n    return (React.createElement(\"div\", { className: \"as-container\" },\n        React.createElement(\"div\", { style: { marginTop: 70 } }),\n        React.createElement(\"div\", { className: \"as-home-screen-container\" },\n            React.createElement(\"div\", { className: \"as-home-screen-icon\" },\n                React.createElement(Icons.ChatBot, null)),\n            React.createElement(\"div\", { className: \"as-title-text\" },\n                \"Anaconda Assistant\",\n                React.createElement(\"div\", { className: \"as-version-text\" }, CLIENT_VERSION))),\n        React.createElement(\"div\", { className: \"as-code-error-panel\" },\n            React.createElement(\"div\", { className: \"as-code-error-icon\" },\n                React.createElement(Icons.Error, null)),\n            React.createElement(\"div\", { className: \"as-code-error-panel-text\" }, error.message)),\n        React.createElement(\"div\", { className: \"as-code-error-footer\" },\n            React.createElement(\"button\", { className: \"as-code-retry-button\", onClick: resetErrorBoundary },\n                React.createElement(\"div\", { className: \"as-code-retry-icon\" },\n                    React.createElement(Icons.RotateLeft, null)),\n                React.createElement(\"div\", { className: \"as-code-retry-text\" }, \"Retry\")),\n            isLocalNotebooks() ? (React.createElement(\"button\", { className: \"as-code-retry-button\", onClick: () => logout() },\n                React.createElement(\"div\", { className: \"as-code-retry-text\" },\n                    React.createElement(\"span\", null, \"Logout\")))) : null)));\n}\n","import React from 'react';\nimport { Icons } from '@anaconda/assistant-components';\nimport { useStore } from '../store/store';\nimport { getActiveChat } from '../store/state-fns';\nimport { getIsProTier, logout } from '../utils/nucleus/accountUtils';\nimport { isLocalNotebooks } from '../utils/environmentType';\nexport function ErrorMessage({ message, retryError }) {\n    const [account, activeChat, resetActiveChat] = useStore(state => [\n        state.account,\n        getActiveChat(state),\n        state.resetActiveChat\n    ]);\n    let maxTokens = activeChat?.maxTokens;\n    // Check if the message contains the maxTokens by matching \"maximum context length is 16385 tokens\"\n    const detectedMaxTokens = parseInt(message.match(/maximum context length is (\\d+) tokens/)?.[1] || '');\n    if (detectedMaxTokens && detectedMaxTokens !== maxTokens) {\n        maxTokens = detectedMaxTokens;\n    }\n    const isProTier = getIsProTier(account);\n    const errors = [\n        {\n            match: /Too many requests/,\n            className: 'as-code-error-upgrade',\n            hideChatTitle: true,\n            message: isProTier\n                ? 'You have reached the maximum number of requests for today.'\n                : 'You have reached the maximum number of requests for today. Upgrade to increase the number of daily requests.',\n            messageIcon: React.createElement(Icons.ChatBot, null),\n            buttonIcon: isProTier ? null : React.createElement(Icons.Sparkle, null),\n            buttonText: 'Upgrade',\n            onClick: () => {\n                window.open('https://anaconda.cloud/pricing');\n            }\n        },\n        {\n            match: /maximum context length/,\n            className: 'as-code-error-token-limit',\n            hideChatTitle: true,\n            message: (React.createElement(\"p\", null,\n                \"You\\u2019ve exceeded the maximum context length. You can always press the \\\"\",\n                React.createElement(\"a\", { className: \"as-code-error-token-limit-restart-button\", onClick: e => {\n                        e.preventDefault();\n                        resetActiveChat();\n                    } },\n                    React.createElement(Icons.RotateRight, null),\n                    \"Restart\"),\n                \"\\\" button at the bottom to restart the conversation and reset the context-length.\",\n                isProTier ? null : (React.createElement(React.Fragment, null,\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    \"Visit our\",\n                    ' ',\n                    React.createElement(\"a\", { href: \"https://anaconda.cloud/pricing\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"pricing page\"),\n                    ' ',\n                    \"to upgrade to either Starter or Pro, to use a model with a larger context-window.\")))),\n            messageIcon: React.createElement(Icons.ChatBot, null),\n            buttonIcon: isProTier ? null : React.createElement(Icons.Sparkle, null),\n            buttonText: 'Upgrade',\n            onClick: () => {\n                window.open('https://anaconda.cloud/pricing');\n            }\n        }\n    ];\n    const defaultError = {\n        className: '',\n        chatTitle: 'Something went wrong...',\n        message: message,\n        messageIcon: React.createElement(Icons.Error, null),\n        buttonIcon: React.createElement(Icons.RotateLeft, null),\n        buttonText: 'Retry Request',\n        onClick: retryError\n    };\n    const error = errors.find(e => e.match && message.match(e.match)) || defaultError;\n    return (React.createElement(\"div\", { className: `as-code-container ${error.className}` },\n        error.hideChatTitle ? null : (React.createElement(\"div\", { className: \"as-code-message-container\" },\n            React.createElement(\"div\", { className: \"as-code-message-icon-container\" },\n                React.createElement(\"div\", { className: \"as-code-message-icon\" },\n                    React.createElement(Icons.ChatBot, null))),\n            React.createElement(\"div\", { className: \"as-code-error-text\" }, error.chatTitle))),\n        React.createElement(\"div\", { className: \"as-code-error-panel\" },\n            React.createElement(\"div\", { className: \"as-code-error-icon\" }, error.messageIcon),\n            React.createElement(\"div\", { className: \"as-code-error-panel-text\" }, error.message)),\n        React.createElement(\"div\", { className: \"as-code-error-footer\" },\n            error.buttonIcon ? (React.createElement(\"button\", { className: \"as-code-retry-button\", onClick: () => error.onClick() },\n                React.createElement(\"div\", { className: \"as-code-retry-icon\" }, error.buttonIcon),\n                React.createElement(\"div\", { className: \"as-code-retry-text\" }, error.buttonText))) : null,\n            isLocalNotebooks() ? (React.createElement(\"button\", { className: \"as-code-retry-button\", onClick: () => logout() },\n                React.createElement(\"div\", { className: \"as-code-retry-text\" },\n                    React.createElement(\"span\", null, \"Logout\")))) : null)));\n}\n","import React, { useEffect } from 'react';\nimport { animated, useSpring } from '@react-spring/web';\nimport { Icons } from '@anaconda/assistant-components';\nimport { useStore } from '../store/store';\nimport { getActiveNotebook } from '../store/state-fns';\nimport { shallow } from 'zustand/shallow';\nimport { RemoveAfter } from './RemoveAfterHide';\nexport function ExplainPopup({ width }) {\n    const [selectedText, error] = useStore(state => [\n        getActiveNotebook(state)?.notebookState.selectedText,\n        getActiveNotebook(state)?.notebookState.error\n    ], shallow);\n    return selectedText ? (React.createElement(InnerPopup, { width: width, selectedText: selectedText, error: error })) : null;\n}\nfunction InnerPopup({ width, selectedText, error }) {\n    const [makeChatRequest, resetToHomeScreen, hidePopups] = useStore(state => [state.makeChatRequest, state.resetToHomeScreen, state.hidePopups], shallow);\n    // We want to read this property without subscribing to it\n    const enableDataCollection = useStore.getState().settings.enableDataCollection;\n    // Used to show/hide the popup, which is animated\n    const [showPopup, setShowPopup] = React.useState(false);\n    // Show the popup if the user has selected text and is not hovering the assistant panel (under the popup).\n    // We also hide the popup if the state says so.\n    useEffect(() => {\n        const doShowPopup = Boolean(selectedText?.text && error === null);\n        setShowPopup(!hidePopups && doShowPopup);\n    }, [selectedText, error, hidePopups]);\n    function closeErrorDialog() {\n        setShowPopup(false);\n    }\n    function handleSelection(selectedText, type) {\n        if (selectedText) {\n            resetToHomeScreen();\n            makeChatRequest({\n                context: {\n                    type,\n                    variables: {\n                        active_cell_code: selectedText.cell.source,\n                        selected_code: selectedText.text\n                    }\n                },\n                instruction: ''\n            });\n            setShowPopup(false);\n        }\n    }\n    const props = useSpring({\n        right: 10,\n        bottom: showPopup ? 70 : -270,\n        width: width ? width - 60 : 360\n    });\n    return (React.createElement(RemoveAfter, { delay: 500, show: showPopup },\n        React.createElement(\"div\", { className: \"as-popup-outer-container\", style: showPopup ? { zIndex: 2 } : {} },\n            React.createElement(animated.div, { className: \"as-explain-popup\", style: props },\n                React.createElement(\"div\", { className: \"as-popup-container\" },\n                    React.createElement(\"div\", { className: \"as-popup-header\" },\n                        React.createElement(\"div\", { className: \"as-popup-logo\" },\n                            React.createElement(\"div\", { className: \"as-popup-icon-container\" },\n                                React.createElement(\"div\", { className: \"as-popup-icon\" },\n                                    React.createElement(Icons.ChatBot, null))),\n                            React.createElement(\"div\", null, \"Anaconda Assistant\")),\n                        React.createElement(\"div\", { className: \"as-popup-close-icon\", onClick: closeErrorDialog },\n                            React.createElement(Icons.Close, null))),\n                    React.createElement(\"div\", { className: \"as-code-share-warning-message\" },\n                        React.createElement(\"div\", { className: \"as-warning-icon-wrapper\" },\n                            React.createElement(\"div\", { className: \"as-warning-icon\" },\n                                React.createElement(Icons.Warning, null))),\n                        React.createElement(\"div\", null,\n                            \"By adding code to a conversation, the selected code cell will be sent to\",\n                            ' ',\n                            enableDataCollection ? 'the Anaconda Servers and to ' : '',\n                            \"OpenAI.\")),\n                    React.createElement(\"div\", { className: \"as-popup-buttons\" },\n                        React.createElement(\"div\", { className: \"as-popup-buttons-section\" },\n                            React.createElement(\"div\", { className: \"as-home-screen-code-icon-container\" },\n                                React.createElement(\"div\", { className: \"as-home-screen-code-icon\" },\n                                    React.createElement(Icons.Code, null))),\n                            React.createElement(\"div\", null, \"Start a new conversation\")),\n                        React.createElement(\"div\", { className: \"as-popup-button\", onClick: () => handleSelection(selectedText, 'explain-code') },\n                            React.createElement(\"div\", null, \"Explain the selected code\"),\n                            React.createElement(\"div\", { className: \"as-home-screen-starter-icon\" },\n                                React.createElement(Icons.ChevronRight, null))),\n                        React.createElement(\"div\", { className: \"as-popup-button\", onClick: () => handleSelection(selectedText, 'comment-code') },\n                            React.createElement(\"div\", null, \"Add comments to the selected code\"),\n                            React.createElement(\"div\", { className: \"as-home-screen-starter-icon\" },\n                                React.createElement(Icons.ChevronRight, null))),\n                        React.createElement(\"div\", { className: \"as-popup-button\", onClick: () => handleSelection(selectedText, 'improve-code') },\n                            React.createElement(\"div\", null, \"Refactor the selected code\"),\n                            React.createElement(\"div\", { className: \"as-home-screen-starter-icon\" },\n                                React.createElement(Icons.ChevronRight, null)))))))));\n}\n","import { animated, useSpring } from '@react-spring/web';\nimport { Icons } from '@anaconda/assistant-components';\nimport React, { useEffect } from 'react';\nimport { useStore } from '../store/store';\nimport { getActiveChat, getActiveNotebook } from '../store/state-fns';\nimport { orderBy, values } from 'lodash';\nimport { shallow } from 'zustand/shallow';\nimport { Tooltip } from '@mui/material';\nexport function HistoryMenu({ open, width, setClosed }) {\n    const [opacity, setOpacity] = React.useState(0);\n    const [unmounted, unmount] = React.useState(false);\n    const [activeChatKey, chats, activeChat, setActiveChat] = useStore(state => [\n        getActiveNotebook(state)?.activeChatKey,\n        getActiveNotebookChats(state),\n        getActiveChat(state),\n        state.setActiveChat\n    ], shallow);\n    useEffect(() => {\n        if (open) {\n            unmount(false);\n            setTimeout(() => setOpacity(0.9), 100);\n        }\n        else {\n            // This makes sure the component is completely removed from the window if the panel is closed, after the animation runs.\n            setOpacity(0);\n            setTimeout(() => unmount(true), 500);\n        }\n    }, [open]);\n    const props = useSpring({\n        left: open ? 0 : -351,\n        top: 90,\n        backgroundColor: 'white',\n        width: 350\n    });\n    if (!width)\n        return null;\n    if (unmounted)\n        return null;\n    function selectChat(chatKey) {\n        // If the chat is already active, just close the menu\n        if (!activeChat || activeChat.key !== chatKey) {\n            const chat = chats.find(c => c.key === chatKey);\n            // If a chat of the same name is already active, moving back and forward\n            // might feel as if there was no change at all, so let's clear the active chat\n            // while we come up with a better solution.\n            if (activeChat?.name === chat?.name) {\n                setActiveChat(null);\n            }\n            setActiveChat(chatKey);\n        }\n        setClosed();\n    }\n    return (React.createElement(\"div\", { className: \"as-menu-drawer-container\" },\n        React.createElement(\"div\", { className: \"as-menu-background\", style: { opacity, width }, onClick: setClosed }),\n        React.createElement(animated.div, { className: `as-menu-drawer ${open ? 'open' : ''}`, style: props },\n            React.createElement(\"div\", { className: \"as-history-menu\" },\n                React.createElement(\"div\", { className: \"as-history-menu-header\" }, \"Recent Chats\"),\n                chats.length === 0 && React.createElement(NoChatsMessage, null),\n                React.createElement(\"div\", { className: \"as-history-menu-container\" }, chats.map(chat => (React.createElement(ChatThread, { key: chat.key, chat: chat, isActive: chat.key === activeChatKey, selectChat: selectChat }))))))));\n}\nfunction NoChatsMessage() {\n    return (React.createElement(\"div\", { className: \"as-history-no-chats\" },\n        React.createElement(\"div\", null, \"No Previous Chats\")));\n}\nfunction ChatThread({ chat, isActive, selectChat }) {\n    const _deleteChat = useStore(state => state.deleteChat);\n    return (React.createElement(\"div\", { key: chat.key, className: `as-history-menu-item ${isActive ? 'as-history-menu-item-active' : ''}`, title: chat.name, onClick: () => selectChat(chat.key) },\n        React.createElement(\"div\", { className: \"as-history-menu-item-icon\" },\n            React.createElement(Icons.SolidMessage, null)),\n        React.createElement(\"div\", { className: \"as-history-menu-item-text\" }, chat.name),\n        isActive ? null : (React.createElement(Tooltip, { title: \"Delete chat\" },\n            React.createElement(\"div\", { className: \"as-history-menu-item-close-icon\", onClick: e => {\n                    e.stopPropagation();\n                    _deleteChat(chat.key);\n                } },\n                React.createElement(Icons.Close, null))))));\n}\nfunction getActiveNotebookChats(state) {\n    const activeNotebook = getActiveNotebook(state);\n    return activeNotebook\n        ? orderBy(values(activeNotebook.chats).map(chat => ({\n            name: chat.name,\n            key: chat.key,\n            lastUpdated: chat.lastUpdated\n        })), [chat => chat.lastUpdated.getTime()], ['desc'])\n        : [];\n}\n","import React, { useState } from 'react';\nimport { shallow } from 'zustand/shallow';\nimport { Icons } from '@anaconda/assistant-components';\nimport { useStore } from '../../store/store';\nimport { getActiveNotebook } from '../../store/state-fns';\nexport function GraphDataframe() {\n    return React.createElement(SelectDataFrame, { contextType: \"graph-dataframe\", buttonLabel: \"Get Code\" });\n}\nexport function DescribeDataframe() {\n    return React.createElement(SelectDataFrame, { contextType: \"describe-dataframe\", buttonLabel: \"Describe Dataframe\" });\n}\nexport function SelectDataFrame({ buttonLabel, contextType, onSubmit, closeElement }) {\n    const [makeChatRequest, activeNotebook] = useStore(state => [state.makeChatRequest, getActiveNotebook(state)], shallow);\n    if (contextType === 'assistant-suggestions' && !onSubmit) {\n        throw new Error('onSubmit is required for assistant-suggestions');\n    }\n    let submit = () => void 0;\n    if (contextType && contextType !== 'assistant-suggestions') {\n        submit = (dataframe) => {\n            makeChatRequest({\n                context: { type: contextType, variables: { dataframe } },\n                instruction: ''\n            });\n        };\n    }\n    const dataFrames = activeNotebook?.notebookState.dataframes;\n    if (!dataFrames)\n        return null;\n    return (React.createElement(DataframeSelector, { dataframes: dataFrames, submit: onSubmit || submit, buttonLabel: buttonLabel, closeElement: closeElement }));\n}\nfunction DataframeSelector({ dataframes, submit, buttonLabel, closeElement }) {\n    const [selectedDf, setSelectedDataframe] = useState(null);\n    function onChange(value) {\n        const dataframe = dataframes.find(v => v.name === value);\n        if (dataframe)\n            setSelectedDataframe(dataframe);\n    }\n    const enableDataCollection = useStore(state => state.settings.enableDataCollection);\n    function handleClick() {\n        if (selectedDf)\n            submit(selectedDf);\n    }\n    return (React.createElement(\"div\", { className: \"as-graph-selector-container\" },\n        React.createElement(\"div\", { className: \"as-graph-selector-message-container\" },\n            React.createElement(\"div\", { className: \"as-code-message-icon-container\" },\n                React.createElement(\"div\", { className: \"as-code-message-icon\" },\n                    React.createElement(Icons.ChatBot, null))),\n            React.createElement(\"div\", { className: \"as-code-message-text\" }, \"Select Dataframe\"),\n            closeElement),\n        React.createElement(\"div\", { className: \"as-dataframe-select-warning-message\" },\n            React.createElement(\"div\", { className: \"as-warning-icon-wrapper\" },\n                React.createElement(\"div\", { className: \"as-warning-icon\" },\n                    React.createElement(Icons.Warning, null))),\n            React.createElement(\"div\", null,\n                \"By attaching a dataframe to the conversation, the dataframe column names and types will be sent to \",\n                enableDataCollection ? 'the Anaconda Servers and to' : '',\n                \"OpenAI.\")),\n        React.createElement(\"select\", { required: true, className: \"as-dataframe-select\", value: selectedDf?.name || '', onChange: e => onChange(e.target.value) },\n            React.createElement(\"option\", { value: \"\", disabled: true, selected: true, hidden: true }, \"Select\"),\n            dataframes.map(df => (React.createElement(\"option\", { key: df.hash, value: df.name }, df.name)))),\n        selectedDf && (React.createElement(\"button\", { className: \"as-get-code-button\", onClick: handleClick },\n            React.createElement(\"div\", { className: \"as-get-code-button-icon\" },\n                React.createElement(Icons.MagicWand, null)),\n            buttonLabel))));\n}\n","import React from 'react';\nimport { Icons } from '@anaconda/assistant-components';\nimport { useStore } from '../../store/store';\nconst loadDataFrameOptions = [\n    {\n        label: 'Generate a DataFrame with random data',\n        instruction: 'Generate code that creates a DataFrame with random data'\n    },\n    {\n        label: 'Load 2023 NCAA Basketball Results',\n        instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/KenPomGamesCleaned.csv' and show the first 10 rows\"\n    },\n    {\n        label: 'Load 2023 NCAA Basketball Team Ratings',\n        instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/TeamRatings.csv' and show the first 10 rows\"\n    },\n    {\n        label: '(FiveThirtyEight) Which US state has the worst drivers?',\n        instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/bad-drivers/bad-drivers.csv' and show the first 10 rows.\"\n    },\n    {\n        label: '(FiveThirtyEight) Where do people go to check the weather?',\n        instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/weather-check/weather-check.csv' and show the first 10 rows.\"\n    },\n    {\n        label: '(FiveThirtyEight) District Urbanization Index 2022',\n        instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/district-urbanization-index-2022/urbanization-index-2022.csv' and show the first 10 rows.\"\n    },\n    {\n        label: 'Load the Palmer penguins dataset',\n        instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/holoviz-topics/examples/main/penguin_crossfilter/penguins.csv' and show the first 10 rows.\"\n    },\n    {\n        label: 'Load the US Wind Turbine Database from usgs.gov',\n        instruction: \"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/5078f1cb198694274cb708253b0dc210/raw/f90167d071abe328f7f437f3d68dbd5deb6012c8/uswtdb_v5_3_20230113.csv\"\n    },\n    {\n        label: 'Load volcano data from the Smithsonian Institute',\n        instruction: \"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' and show the first 10 rows.\"\n    },\n    {\n        label: 'Load US population estimates (2010-2019) from census.gov',\n        instruction: \"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/e3dbe9bde709604252f291e1df92ffa7b3bd098f/nst-est2020.csv' and show the first 10 rows.\"\n    },\n    {\n        label: 'Load US population estimates (2020-2022) from census.gov',\n        instruction: \"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/f4602d2b9a17eb0d17355897264f4bad80c5528f/NST-EST2022-POPCHG2020_2022.csv' and show the first 10 rows.\"\n    },\n    {\n        label: 'Load Pittsburgh bike-share rides data',\n        instruction: \"Generate a DataFrame from this url - 'https://gist.github.com/mattkram/16ff06942c100c00466ea5022567bdaa/raw/386da24f5ede4e70496cde1dc9e98c9d02bb177e/bikeshare.csv' and show the first 10 rows.\"\n    }\n];\nexport function LoadADataframe() {\n    return React.createElement(CodeOptions, { options: loadDataFrameOptions });\n}\nfunction CodeOptions({ options }) {\n    const makeChatRequest = useStore(state => state.makeChatRequest);\n    function submit(instruction) {\n        makeChatRequest({ context: { type: 'default-python', variables: {} }, instruction });\n    }\n    return (React.createElement(\"div\", { className: \"as-graph-selector-container\" },\n        React.createElement(\"div\", { className: \"as-graph-selector-message-container\" },\n            React.createElement(\"div\", { className: \"as-code-message-icon-container\" },\n                React.createElement(\"div\", { className: \"as-code-message-icon\" },\n                    React.createElement(Icons.ChatBot, null))),\n            React.createElement(\"div\", { className: \"as-code-message-text\" }, \"What would you like to do?\")),\n        options.map((option, idx) => (React.createElement(GenerateCodeOption, { key: idx, label: option.label, instruction: option.instruction, submit: submit })))));\n}\nfunction GenerateCodeOption({ label, instruction, submit }) {\n    return (React.createElement(\"div\", { className: \"as-generate-code-option-container\", onClick: () => submit(instruction) },\n        React.createElement(\"div\", null, label),\n        React.createElement(\"div\", { className: \"as-home-screen-starter-icon\" },\n            React.createElement(Icons.ChevronRight, null))));\n}\n","import React, { useEffect } from 'react';\nimport { Icons } from '@anaconda/assistant-components';\nimport { useStore } from '../../store/store';\nimport { getActiveNotebook } from '../../store/state-fns';\nimport { SelectDataFrame } from './dataframe-options';\nimport { shallow } from 'zustand/shallow';\nimport { ErrorMessage } from '../errorMessage';\nexport function GenerateSuggestions({ getActiveCodeCell, chatStarterName }) {\n    const activeNotebook = useStore(state => getActiveNotebook(state));\n    const suggestionDataFrame = activeNotebook?.suggestionState.dataframe;\n    const dataFrames = activeNotebook?.notebookState.dataframes;\n    const isCleaning = chatStarterName === 'data-cleaning-suggestions';\n    // If there is no DataFrame selected, and there are multiple dataframes, ask the user to select one\n    if (!suggestionDataFrame && dataFrames) {\n        return (React.createElement(SelectDataFrame, { contextType: \"assistant-suggestions\", buttonLabel: isCleaning ? 'Generate cleaning suggestions' : 'Generate suggestions', onSubmit: dataframe => {\n                useStore.getState().setSuggestionsDataframe(dataframe);\n            } }));\n    }\n    return activeNotebook ? (React.createElement(CodeOptions, { suggestionState: activeNotebook.suggestionState, defaultDataFrame: null, chatStarterName: chatStarterName, getActiveCodeCell: getActiveCodeCell })) : null;\n}\nfunction CodeOptions({ suggestionState, defaultDataFrame, chatStarterName, getActiveCodeCell }) {\n    const [makeChatRequest, updateSuggestions, setSuggestionsDataframe] = useStore(state => [state.makeChatRequest, state.updateSuggestions, state.setSuggestionsDataframe], shallow);\n    const { loading, suggestions, dataframe, error } = suggestionState;\n    useEffect(() => {\n        // If suggestions are null, kick off a request to get suggestions\n        if (suggestions === null && !loading && !error) {\n            updateSuggestions(getActiveCodeCell(), chatStarterName, dataframe || defaultDataFrame);\n        }\n    }, [\n        chatStarterName,\n        dataframe,\n        defaultDataFrame,\n        getActiveCodeCell,\n        loading,\n        error,\n        suggestions,\n        updateSuggestions\n    ]);\n    const activeDataFrame = defaultDataFrame || dataframe;\n    function submit(instruction) {\n        makeChatRequest({\n            context: {\n                type: 'suggestions-chat',\n                variables: {\n                    code_cell: getActiveCodeCell(),\n                    name: activeDataFrame?.name || '',\n                    dtypes_str: activeDataFrame?.dtypesStr || ''\n                }\n            },\n            instruction\n        });\n    }\n    function refreshSuggestions() {\n        if (!loading)\n            setSuggestionsDataframe(null);\n    }\n    const isCleaning = chatStarterName === 'data-cleaning-suggestions';\n    return error ? (React.createElement(ErrorMessage, { message: error, retryError: refreshSuggestions })) : (React.createElement(\"div\", { className: \"as-graph-selector-container\" },\n        React.createElement(\"div\", { className: \"as-graph-selector-message-container\" },\n            React.createElement(\"div\", { className: \"as-code-message-icon-container\" },\n                React.createElement(\"div\", { className: \"as-code-message-icon\" },\n                    React.createElement(Icons.ChatBot, null))),\n            React.createElement(\"div\", { className: \"as-code-generate-container\" },\n                loading ? (React.createElement(\"div\", { className: \"as-code-message-text as-code-loading\" },\n                    \"Fetching suggestions for \",\n                    isCleaning ? 'data cleaning' : 'this notebook')) : (React.createElement(\"div\", { className: \"as-code-message-text\" }, activeDataFrame\n                    ? `Some ideas to ${isCleaning ? 'clean' : 'make use of'} dataframe ${activeDataFrame.name}`\n                    : 'What would you like to do?')),\n                React.createElement(\"div\", { onClick: refreshSuggestions, className: `as-code-generate-refresh ${loading ? 'as-code-generate-refresh-disabled' : ''} ` }, \"Refresh Suggestions\"))),\n        !loading &&\n            suggestions &&\n            suggestions.map((suggestion, idx) => (React.createElement(GenerateCodeOption, { key: idx, label: suggestion, instruction: suggestion, submit: submit })))));\n}\nfunction GenerateCodeOption({ label, instruction, submit }) {\n    return (React.createElement(\"div\", { className: \"as-generate-code-option-container\", onClick: () => submit(instruction) },\n        React.createElement(\"div\", null, label),\n        React.createElement(\"div\", { className: \"as-home-screen-starter-icon\" },\n            React.createElement(Icons.ChevronRight, null))));\n}\n","import React from 'react';\nimport { Icons } from '@anaconda/assistant-components';\nimport { useStore } from '../../store/store';\nimport { getActiveNotebook } from '../../store/state-fns';\nimport { DescribeDataframe, GraphDataframe } from './dataframe-options';\nimport { LoadADataframe } from './generate-code';\nimport { GenerateSuggestions } from './generate-suggestions';\nimport { shallow } from 'zustand/shallow';\nexport function HomeScreen({ getActiveCodeCell }) {\n    const [activeNotebook, selectChatStarter, makeChatRequest] = useStore(state => [getActiveNotebook(state), state.selectChatStarter, state.makeChatRequest], shallow);\n    if (!activeNotebook)\n        return null;\n    const { homeScreen } = activeNotebook;\n    const { chatStarters, selectedChatStarter } = homeScreen;\n    function setSelectedChatStarter(chatStarter) {\n        if (shouldKickOffChatRequest(chatStarter)) {\n            kickOffRequest(chatStarter);\n        }\n        else {\n            selectChatStarter(chatStarter);\n        }\n    }\n    // There are a couple of cases where there is no secondary options screen\n    // e.g. when there is only one DataFrame in the notebook and a DataFrame option is selected\n    // In these cases we kick off the request immediately\n    function kickOffRequest(chatStarter) {\n        if (chatStarter.name === 'load-volcano-data') {\n            makeChatRequest({\n                context: { type: 'default-python', variables: {} },\n                // From https://anaconda.cloud/api/catalogs/examples\n                instruction: `Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' and show the first 10 rows`\n            });\n        }\n        else if (chatStarter.name === 'plot-fibonacci') {\n            makeChatRequest({\n                context: { type: 'default-python', variables: {} },\n                instruction: `Plot the first 100 fibonacci numbers`\n            });\n        }\n        else if (chatStarter.name === 'mask-emails') {\n            makeChatRequest({\n                context: { type: 'default-python', variables: {} },\n                instruction: `Create a function to mask email addresses, show examples`\n            });\n        }\n    }\n    if (selectedChatStarter === null) {\n        return (React.createElement(SelectChatStarter, { chatStarters: chatStarters, setChatStarter: setSelectedChatStarter }));\n    }\n    if (selectedChatStarter.name === 'load-a-dataframe') {\n        return React.createElement(LoadADataframe, null);\n    }\n    else if (selectedChatStarter.name === 'graph-dataframe') {\n        return React.createElement(GraphDataframe, null);\n    }\n    else if (selectedChatStarter.name === 'describe-dataframe') {\n        return React.createElement(DescribeDataframe, null);\n    }\n    else if (selectedChatStarter.name === 'dataframe-suggestions' ||\n        selectedChatStarter.name === 'data-cleaning-suggestions') {\n        return (React.createElement(GenerateSuggestions, { chatStarterName: selectedChatStarter.name, getActiveCodeCell: getActiveCodeCell }));\n    }\n    else {\n        return null;\n    }\n}\nfunction SelectChatStarter({ chatStarters, setChatStarter }) {\n    const tutorialStarters = chatStarters.filter(cs => cs.category === 'tutorial');\n    const dataframeStarters = chatStarters.filter(cs => cs.category === 'dataframes');\n    return (React.createElement(\"div\", { className: \"as-home-screen-container\" },\n        React.createElement(HomeScreenHeader, null),\n        React.createElement(\"div\", { className: \"as-home-screen-section\" },\n            React.createElement(\"div\", { className: \"as-home-screen-code-icon-container\" },\n                React.createElement(\"div\", { className: \"as-home-screen-code-icon\" },\n                    React.createElement(Icons.Code, null))),\n            React.createElement(\"div\", null, \"Get started\")),\n        tutorialStarters.map((chatStarter, idx) => (React.createElement(ChatStarterCmp, { key: idx, chatStarter: chatStarter, setChatStarter: () => setChatStarter(chatStarter) }))),\n        React.createElement(\"div\", { className: \"as-home-screen-body\" },\n            React.createElement(\"div\", { className: \"as-home-screen-section\" },\n                React.createElement(\"div\", { className: \"as-home-screen-df-icon-container\" },\n                    React.createElement(\"div\", { className: \"as-home-screen-df-icon\" },\n                        React.createElement(Icons.Frame, null))),\n                React.createElement(\"div\", null, \"Working with DataFrames\")),\n            dataframeStarters.map((chatStarter, idx) => (React.createElement(ChatStarterCmp, { key: idx, chatStarter: chatStarter, setChatStarter: () => setChatStarter(chatStarter) }))))));\n}\nfunction ChatStarterCmp({ chatStarter, setChatStarter }) {\n    return (React.createElement(\"div\", { className: \"as-home-screen-chat-starter\", onClick: () => setChatStarter() },\n        React.createElement(\"div\", null, chatStarter.label),\n        React.createElement(\"div\", { className: \"as-home-screen-starter-icon\" },\n            React.createElement(Icons.ChevronRight, null))));\n}\nfunction HomeScreenHeader() {\n    return (React.createElement(\"div\", { className: \"as-home-screen-header\" },\n        React.createElement(\"div\", { className: \"as-sub-title-container\" },\n            React.createElement(\"div\", { className: \"as-home-screen-icon\" },\n                React.createElement(Icons.ChatBot, null)),\n            React.createElement(\"div\", { className: \"as-sub-title-text\" }, \"Start with one of the following suggested tasks, or ask me anything using the text box below:\"))));\n}\nfunction shouldKickOffChatRequest(chatStarter) {\n    return (chatStarter.name === 'load-volcano-data' ||\n        chatStarter.name === 'plot-fibonacci' ||\n        chatStarter.name === 'mask-emails');\n}\n","import { LabIcon } from '@jupyterlab/ui-components';\nexport const AssistantIcon = new LabIcon({\n    name: 'assistant:wizard',\n    svgstr: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 16 16\" fill=\"none\">\n  <path\n    d=\"M10.125 3.25C10.0312 3.1875 10 3.09375 10 3C10 2.90625 10.0312 2.84375 10.125 2.78125L12 2L12.75 0.15625C12.8125 0.0625 12.9062 0 13 0C13.0938 0 13.1562 0.0625 13.2188 0.15625L14 2L15.8438 2.78125C15.9375 2.84375 16 2.90625 16 3C16 3.09375 15.9375 3.1875 15.8438 3.25L14 4L13.2188 5.875C13.1562 5.96875 13.0938 6 13 6C12.9062 6 12.8125 5.96875 12.75 5.875L12 4L10.125 3.25ZM15.8438 12.7812C15.9375 12.8438 16 12.9062 16 13C16 13.0938 15.9375 13.1875 15.8438 13.25L14 14L13.2188 15.875C13.1562 15.9688 13.0938 16 13 16C12.9062 16 12.8125 15.9688 12.75 15.875L12 14L10.125 13.25C10.0312 13.1875 10 13.0938 10 13C10 12.9062 10.0312 12.8438 10.125 12.7812L12 12L12.75 10.1562C12.8125 10.0625 12.9062 10 13 10C13.0938 10 13.1562 10.0625 13.2188 10.1562L14 12L15.8438 12.7812ZM12 8C12 8.1875 11.875 8.375 11.7188 8.4375L8.1875 10.2188L6.4375 13.75C6.34375 13.9062 6.15625 14 6 14C5.78125 14 5.625 13.9062 5.53125 13.75L3.78125 10.2188L0.25 8.4375C0.09375 8.375 0 8.1875 0 8C0 7.8125 0.09375 7.625 0.25 7.5625L3.78125 5.78125L5.53125 2.28125C5.71875 1.9375 6.25 1.9375 6.4375 2.28125L8.1875 5.78125L11.7188 7.5625C11.875 7.625 12 7.8125 12 8Z\"\n    fill=\"#31a824\"\n  />\n</svg>`\n});\n","import React, { useRef, useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport { NotebookActions } from '@jupyterlab/notebook';\nimport { Icons } from '@anaconda/assistant-components';\nimport { useOnClickOutside } from 'usehooks-ts';\nimport { useShouldAnimate } from './use-should-animate-feedback';\nimport { Tooltip } from '@mui/material';\nimport { extractMessageBlocks } from '../utils/code-cleaner';\nimport { useStore } from '../store/store';\nexport function MessageButtons({ canExport, canDelete, canSubmitFeedback, tracker, message, handleFeedback, width }) {\n    const assistantMessage = message;\n    if (canSubmitFeedback && !handleFeedback) {\n        throw new Error('handleFeedback must be provided if canSubmitFeedback is true');\n    }\n    async function exportMessageToNotebook() {\n        const notebook = tracker.currentWidget;\n        if (!notebook)\n            return;\n        const messageBlocks = extractMessageBlocks(message.content);\n        let hasPrintedRole = false;\n        for (const block of messageBlocks) {\n            NotebookActions.insertBelow(notebook.content);\n            if (block.type === 'python') {\n                NotebookActions.changeCellType(notebook.content, 'code');\n            }\n            else {\n                NotebookActions.changeCellType(notebook.content, 'markdown');\n            }\n            const role = message.role === 'user' ? 'User' : 'Assistant';\n            const parts = [`# ${role}`, block.content];\n            if (hasPrintedRole) {\n                parts.shift();\n            }\n            else {\n                hasPrintedRole = true;\n            }\n            const content = parts.join('\\n');\n            await notebook.content?.activeCell?.ready;\n            NotebookActions.replaceSelection(notebook.content, content);\n            await NotebookActions.run(notebook.content, notebook.sessionContext);\n        }\n    }\n    const deleteMessagesStartingWith = useStore(state => state.deleteMessagesStartingWith);\n    let feedbackComponents = null;\n    if (canSubmitFeedback && handleFeedback) {\n        if (assistantMessage.feedback) {\n            feedbackComponents = (React.createElement(\"div\", { className: \"as-code-feedback-thumbs-icons\" },\n                canSubmitFeedback && (React.createElement(Tooltip, { title: \"I liked this response\", placement: \"bottom\" },\n                    React.createElement(\"div\", null,\n                        React.createElement(CompletedThumbsUp, { selected: assistantMessage.feedback.sentiment === 'positive' })))),\n                canSubmitFeedback && (React.createElement(Tooltip, { title: \"I didn't like this response\", placement: \"bottom\" },\n                    React.createElement(\"div\", null,\n                        React.createElement(CompletedThumbsDown, { selected: assistantMessage.feedback.sentiment === 'negative' }))))));\n        }\n        else {\n            // Feedback buttons use css animation to beat, but if the sidebar menu is open, this will\n            // cause them to appear in front of the menu, so we hide them when the menu is open.\n            // See - https://stackoverflow.com/questions/61243945/checkboxes-behind-a-div-turned-visible-when-their-opacity-is-changed\n            feedbackComponents = (React.createElement(\"div\", { className: \"as-code-feedback-thumbs-icons\" },\n                canSubmitFeedback && (React.createElement(Tooltip, { title: \"I liked this response\", placement: \"bottom\" },\n                    React.createElement(\"div\", null,\n                        React.createElement(FeedbackButton, { icon: React.createElement(Icons.ThumbsUp, null), FeedbackElement: React.createElement(PositiveFeedback, { width: width || 200, onSubmitFeedback: handleFeedback }) })))),\n                canSubmitFeedback && (React.createElement(Tooltip, { title: \"I didn't like this response\", placement: \"bottom\" },\n                    React.createElement(\"div\", null,\n                        React.createElement(FeedbackButton, { icon: React.createElement(Icons.ThumbsDown, null), FeedbackElement: React.createElement(NegativeFeedback, { width: width || 200, onSubmitFeedback: handleFeedback }) }))))));\n        }\n    }\n    return (React.createElement(\"div\", { className: \"as-message-buttons-container\" },\n        canExport && (React.createElement(Tooltip, { title: \"Export and run this message in the Notebook\", placement: \"bottom\", className: \"as-message-export-icon-container\" },\n            React.createElement(\"div\", { onClick: exportMessageToNotebook },\n                React.createElement(Icons.Book, null)))),\n        canDelete && (React.createElement(Tooltip, { title: \"Delete this and all messages below\", placement: \"bottom\" },\n            React.createElement(\"div\", { onClick: () => deleteMessagesStartingWith(message.messageId), className: \"as-message-button-trash-icon-container\" },\n                React.createElement(Icons.Trash, null)))),\n        feedbackComponents));\n}\nfunction CompletedThumbsUp({ selected }) {\n    return (React.createElement(\"div\", { className: `as-code-feedback-thumbs-icon-completed ${selected ? 'as-code-feedback-thumbs-completed-beat as-code-feedback-thumbs-up' : ''}` },\n        React.createElement(Icons.ThumbsUp, null)));\n}\nfunction CompletedThumbsDown({ selected }) {\n    return (React.createElement(\"div\", { className: `as-code-feedback-thumbs-icon-completed ${selected ? 'as-code-feedback-thumbs-completed-beat as-code-feedback-thumbs-down' : ''}` },\n        React.createElement(Icons.ThumbsDown, null)));\n}\nfunction FeedbackButton({ icon, FeedbackElement }) {\n    const [referenceElement, setReferenceElement] = useState(null);\n    const [popperElement, setPopperElement] = useState(null);\n    const [arrowElement, setArrowElement] = useState(null);\n    const { styles, attributes } = usePopper(referenceElement, popperElement, {\n        placement: 'top',\n        modifiers: [{ name: 'arrow', options: { element: arrowElement } }]\n    });\n    const [open, setOpen] = useState(false);\n    const animate = useShouldAnimate();\n    function toggleOpen() {\n        setOpen(prevState => !prevState);\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: `as-code-feedback-thumbs-icon ${animate ? 'as-code-thumbs-initial-beat' : ''}`, ref: setReferenceElement, onClick: toggleOpen }, icon),\n        open && (React.createElement(\"div\", Object.assign({ ref: setPopperElement, style: {\n                ...styles.popper,\n                ...{ paddingLeft: 20, paddingRight: 20, marginBottom: 6 }\n            } }, attributes.popper),\n            FeedbackElement,\n            React.createElement(\"div\", { id: \"as-arrow\", ref: setArrowElement, style: styles.arrow })))));\n}\nfunction PositiveFeedback({ width, onSubmitFeedback }) {\n    const [text, setText] = useState('');\n    const ref = useRef(null);\n    useOnClickOutside(ref, () => handleSubmit());\n    function handleSubmit(e) {\n        onSubmitFeedback('positive', text);\n        e?.preventDefault();\n    }\n    function handleKeyDown(e) {\n        if (e.key === 'Enter' && !e.shiftKey)\n            handleSubmit(e);\n    }\n    return (React.createElement(\"div\", { className: \"as-code-feedback-modal\", ref: ref, style: { width: width - 40 } },\n        React.createElement(\"div\", { className: \"as-code-feedback-modal-header\" },\n            React.createElement(\"div\", { className: \"as-code-feedback-header-positive-icon\" },\n                React.createElement(Icons.ThumbsUp, null)),\n            React.createElement(\"div\", { className: \"as-code-feedback-modal-title\" }, \"Provide additional feedback\")),\n        React.createElement(\"form\", { onSubmit: handleSubmit, className: \"as-code-feedback-form\" },\n            React.createElement(\"div\", { className: \"as-code-feedback-text-area\" },\n                React.createElement(\"textarea\", { autoFocus: true, disabled: false, maxLength: 200, value: text, onKeyDown: handleKeyDown, onChange: e => setText(e.target.value), rows: 3, className: \"as-instruction-input-textarea\", placeholder: 'What did you like about the generated code?' })),\n            React.createElement(\"div\", { className: \"as-code-feedback-button-container\" },\n                React.createElement(\"button\", { type: \"submit\", className: \"as-code-feedback-submit-button\" }, \"Submit\")))));\n}\nfunction NegativeFeedback({ width, onSubmitFeedback }) {\n    const [text, setText] = useState('');\n    const ref = useRef(null);\n    useOnClickOutside(ref, () => handleSubmit());\n    function handleSubmit(e) {\n        onSubmitFeedback('negative', text);\n        e?.preventDefault();\n    }\n    function handleKeyDown(e) {\n        if (e.key === 'Enter' && !e.shiftKey)\n            handleSubmit(e);\n    }\n    return (React.createElement(\"div\", { className: \"as-code-feedback-modal\", ref: ref, style: { width: width - 40 } },\n        React.createElement(\"div\", { className: \"as-code-feedback-modal-header\" },\n            React.createElement(\"div\", { className: \"as-code-feedback-header-negative-icon\" },\n                React.createElement(Icons.ThumbsUp, null)),\n            React.createElement(\"div\", { className: \"as-code-feedback-modal-title\" }, \"Provide additional feedback\")),\n        React.createElement(\"form\", { onSubmit: handleSubmit, className: \"as-code-feedback-form\" },\n            React.createElement(\"div\", { className: \"as-code-feedback-text-area\" },\n                React.createElement(\"textarea\", { autoFocus: true, disabled: false, maxLength: 200, value: text, onKeyDown: handleKeyDown, onChange: e => setText(e.target.value), rows: 3, className: \"as-instruction-input-textarea\", placeholder: 'What was the issue with the generated code? How could it improve?' })),\n            React.createElement(\"div\", { className: \"as-code-feedback-button-container\" },\n                React.createElement(\"button\", { type: \"submit\", className: \"as-code-feedback-submit-button\" }, \"Submit\")))));\n}\n","const MAX_LENGTH = 2500;\nexport function extractErrorContext(errorCell, notebook, error) {\n    const errorCellId = errorCell.model.sharedModel.getId();\n    const idx = notebook.widgets.findIndex(cell => cell.model.sharedModel.getId() === errorCellId);\n    if (idx === -1)\n        return null; // Cell not found (shouldn't happen)\n    // Get the source for the cells preceding the error cell\n    const precedingCells = trimPrecedingCells(notebook.widgets\n        .slice(0, idx)\n        .filter(cell => cell.model.type === 'code')\n        .map(cell => ({\n        id: cell.model.sharedModel.getId(),\n        source: cell.model.sharedModel.getSource()\n    })));\n    return {\n        precedingCells,\n        cell: {\n            id: errorCellId,\n            source: errorCell.model.sharedModel.getSource()\n        },\n        errorText: error\n    };\n}\n/**\n * Trims the preceding cells to a maximum length of 1250 characters\n * Tries to keep cells closest to the error (last in the array) intact\n * @param precedingCells\n */\nexport function trimPrecedingCells(precedingCells) {\n    let totalLength = 0;\n    return precedingCells\n        .reverse() // Start with cells closest to the error\n        .map(cell => {\n        totalLength += cell.source.length;\n        return { id: cell.id, source: truncateIfTooLong(totalLength, cell) };\n    })\n        .reverse();\n}\nfunction truncateIfTooLong(totalLength, cell) {\n    if (totalLength > MAX_LENGTH && totalLength - cell.source.length < MAX_LENGTH) {\n        // This cell has pushed length over the limit, so truncate the cell to fit the max length\n        return cell.source.slice(0, MAX_LENGTH - (totalLength - cell.source.length) - 3) + '...';\n    }\n    else if (totalLength > MAX_LENGTH) {\n        // Over the limit, so truncate entirely\n        return '...';\n    }\n    else {\n        // Under the limit, so return the full cell\n        return cell.source;\n    }\n}\n","import React from 'react';\nimport { AssistantComponentContext, SettingsPage, matchMultipleChildNames, settingAddCodeToNotebookTitles } from '@anaconda/assistant-components';\nimport { useStore } from '../store/store';\nimport { Switch } from './switch';\nimport { shallow } from 'zustand/shallow';\nimport { FormControl, MenuItem, Select, ThemeProvider, createTheme } from '@mui/material';\nimport { getActiveChat } from '../store/state-fns';\nimport { getIsProTier, getIsStarterTier, logout } from '../utils/nucleus/accountUtils';\nimport { isCloudNotebooks, isLocalNotebooks } from '../utils/environmentType';\nexport function SettingsWrapper() {\n    const [account, enableDataCollection, setEnableDataCollection, _addCodeToNotebook, setAddCodeToNotebook] = useStore(state => [\n        state.account,\n        state.settings.enableDataCollection,\n        state.setEnableDataCollection,\n        state.settings.addCodeToNotebook,\n        state.setAddCodeToNotebook,\n        getActiveChat(state)\n    ], shallow);\n    const isStarterTier = getIsStarterTier(account);\n    const isProTier = getIsProTier(account);\n    const addCodeToNotebook = _addCodeToNotebook || 'below-active-cell';\n    const theme = createTheme({\n        palette: {\n            primary: {\n                main: '#43B049'\n            }\n        },\n        typography: {\n            fontSize: 11\n        }\n    });\n    const showLogout = () => {\n        if (account && isLocalNotebooks()) {\n            return {\n                logout,\n                accountUserEmail: account?.user.email || ''\n            };\n        }\n        return null;\n    };\n    return (React.createElement(ThemeProvider, { theme: theme },\n        React.createElement(AssistantComponentContext.Provider, { value: {\n                replaceChildren: matchMultipleChildNames([\n                    /data-collection.*action/,\n                    (childClassName) => (React.createElement(FormControl, { className: childClassName },\n                        React.createElement(Switch, { checked: enableDataCollection, onChange: (_, checked) => setEnableDataCollection(checked) })))\n                ], [\n                    /run-code.*action/,\n                    (childClassName) => (React.createElement(FormControl, { className: childClassName, variant: \"standard\", sx: { maxWidth: 200 } },\n                        React.createElement(Select, { value: addCodeToNotebook, displayEmpty: true, inputProps: { 'aria-label': 'Without label' }, onChange: e => {\n                                setAddCodeToNotebook(e.target.value);\n                            } }, Object.entries(settingAddCodeToNotebookTitles).map(([key, value]) => (React.createElement(MenuItem, { key: key, value: key }, value))))))\n                ])\n            } },\n            React.createElement(SettingsPage, { showLogout: showLogout, enableDataCollection: enableDataCollection, setEnableDataCollection: setEnableDataCollection, addCodeToNotebook: addCodeToNotebook, setAddCodeToNotebook: setAddCodeToNotebook, isProTier: isProTier, isStarterTier: isStarterTier, isCloudNotebooks: isCloudNotebooks() }))));\n}\n","import React from 'react';\nimport { Icons } from '@anaconda/assistant-components';\nimport { useStore } from '../store/store';\nimport useResizeObserver from 'use-resize-observer';\nimport { HistoryMenu } from './history-menu';\nimport { shallow } from 'zustand/shallow';\nimport { getChatTitle, getIsNewChat, getIsOnChatStarter } from '../store/state-fns';\nexport function SubHeader() {\n    const [chatTitle, isNewChat, isOnChatStarter, menuOpen, setMenuOpen, toggleMenuOpen, resetToHomeScreen] = useStore(state => [\n        getChatTitle(state),\n        getIsNewChat(state),\n        getIsOnChatStarter(state),\n        state.menuOpen,\n        state.setMenuOpen,\n        state.toggleMenuOpen,\n        state.resetToHomeScreen\n    ], shallow);\n    const { ref, width } = useResizeObserver();\n    const showNewChatTooltip = !isNewChat || isOnChatStarter;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(HistoryMenu, { open: menuOpen, width: width, setClosed: () => setMenuOpen(false) }),\n        React.createElement(\"div\", { className: \"as-sub-header-container\", ref: ref },\n            React.createElement(\"div\", { className: \"as-sub-header-menu-icon-wrapper\", onClick: toggleMenuOpen },\n                React.createElement(\"div\", { className: \"as-sub-header-menu-icon\" },\n                    React.createElement(Icons.Bars, null)),\n                React.createElement(\"div\", null, \"History\")),\n            React.createElement(\"div\", { className: \"as-sub-header-title-container\" },\n                React.createElement(\"div\", { className: \"as-sub-header-title\" }, isNewChat ? (React.createElement(\"div\", { className: \"as-sub-header-link-text\" },\n                    \"Read our\",\n                    ' ',\n                    React.createElement(\"a\", { href: \"https://docs.anaconda.com/free/anaconda-notebooks/anaconda-assistant/\", target: \"_blank\" }, \"docs\"))) : (chatTitle))),\n            React.createElement(\"div\", { className: `as-sub-header-new-chat-icon-wrapper ${showNewChatTooltip ? '' : 'disabled'}`, onClick: resetToHomeScreen },\n                React.createElement(\"div\", { className: \"as-sub-header-new-chat-icon\" },\n                    React.createElement(Icons.Plus, null)),\n                React.createElement(\"div\", null, \"New Chat\")))));\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { default as BaseSwitch } from '@mui/material/Switch';\nexport const Switch = styled((props) => (React.createElement(BaseSwitch, Object.assign({ focusVisibleClassName: \".Mui-focusVisible\", disableRipple: true }, props))))(({ theme }) => ({\n    width: 42,\n    height: 26,\n    padding: 0,\n    '& .MuiSwitch-switchBase': {\n        padding: 0,\n        margin: 2,\n        transitionDuration: '300ms',\n        '&.Mui-checked': {\n            transform: 'translateX(16px)',\n            color: '#fff',\n            '& + .MuiSwitch-track': {\n                backgroundColor: theme.palette.mode === 'dark' ? '#2ECA45' : '#65C466',\n                opacity: 1,\n                border: 0\n            },\n            '&.Mui-disabled + .MuiSwitch-track': {\n                opacity: 0.5\n            }\n        },\n        '&.Mui-focusVisible .MuiSwitch-thumb': {\n            color: '#33cf4d',\n            border: '6px solid #fff'\n        },\n        '&.Mui-disabled .MuiSwitch-thumb': {\n            color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n        },\n        '&.Mui-disabled + .MuiSwitch-track': {\n            opacity: theme.palette.mode === 'light' ? 0.7 : 0.3\n        }\n    },\n    '& .MuiSwitch-thumb': {\n        boxSizing: 'border-box',\n        width: 22,\n        height: 22\n    },\n    '& .MuiSwitch-track': {\n        borderRadius: 26 / 2,\n        backgroundColor: theme.palette.mode === 'light' ? '#E9E9EA' : '#39393D',\n        opacity: 1,\n        transition: theme.transitions.create(['background-color'], {\n            duration: 500\n        })\n    }\n}));\n","import { useEffect, useState } from 'react';\nimport { useStore } from '../store/store';\n/**\n * We only want to animate the feedback buttons if the menu is closed. This is because\n * the feedback buttons use css animation to beat, but if the sidebar menu is open, this will\n * cause them to appear in front of the menu, so we hide them when the menu is open.\n * This logic is encapsulated in this hook.\n */\nexport function useShouldAnimate() {\n    const menuOpen = useStore(state => state.menuOpen);\n    const [animate, setAnimate] = useState(false);\n    useEffect(() => {\n        if (!menuOpen)\n            setAnimate(true);\n        setTimeout(() => setAnimate(false), 2000);\n    }, [menuOpen]);\n    return animate && !menuOpen;\n}\n","import { sharedCore } from './jupyter/extension-load-utils';\nimport { isLocalDev } from './utils/environmentType';\nconst LD_KEY_ASSISTANT_USE_DEV_API_ENDPOINT = 'assistant-use-dev-api-endpoint';\n// We specify the server URL based on the account we are logged into.\n// We fetch the account only once and cache the response.\nlet serverUrlPromise = null;\nexport function getServerUrl() {\n    if (!serverUrlPromise) {\n        serverUrlPromise = (async () => {\n            if (isLocalDev()) {\n                return 'http://localhost:8000';\n            }\n            const useDevServer = sharedCore.getFeatureFlagBool(LD_KEY_ASSISTANT_USE_DEV_API_ENDPOINT);\n            console.log('[Assistant] Using dev server because of LD feature flag:', useDevServer);\n            if (useDevServer) {\n                return 'https://jupyterassistant.anacondaconnect.com';\n            }\n            else {\n                return sharedCore.getCoreReady().config.assistant.apiUrl || 'https://assistant.anaconda.cloud';\n            }\n        })();\n    }\n    return serverUrlPromise;\n}\n// TODO:\n// Make this dynamic by reading it from the backend\nexport const CLIENT_VERSION = '0.4.0';\n// The maximum amount of input tokens to allow sending up. The current model, gpt-3.5-turbo-0613, supports 4096\n// and so it looks like we will want to adjust this based on the model in the future. We're limiting to 3/4 in the\n// input in order to allow tokens in the response.\nexport const TOKEN_LIMIT = 4096;\n// We can use this to show/hide the settings button\n// which will open the settings page when we have configurable settings in the future\nexport const SHOW_SETTINGS = true;\n","import AssistantPlugin from './assistant_plugin';\nexport { AssistantPlugin };\n","import { CodeCell } from '@jupyterlab/cells';\nimport { useStore } from '../store/store';\nimport { getSelectionFromEditor } from '../utils/text-selection-utils';\nexport function getActivateAssistantWithCodeSelection(opts) {\n    return async function () {\n        const { assistant, notebookTracker } = opts;\n        assistant.activateWidget();\n        const activeCell = notebookTracker.activeCell;\n        const editor = activeCell?.editor;\n        if (!editor) {\n            return;\n        }\n        // If there is a selection, use it\n        const currentSelection = editor?.getSelection();\n        const selectedText = getSelectionFromEditor(editor, currentSelection);\n        if (selectedText.text) {\n            useStore.getState().setTextSelection(selectedText);\n            return;\n        }\n        // Only select text in code cells\n        if (activeCell instanceof CodeCell) {\n            const lastLine = editor.getLine(editor.lineCount - 1) || '';\n            const totalLines = editor.lineCount - 1;\n            editor.setSelection({\n                start: { line: 0, column: 0 },\n                end: { line: totalLines, column: lastLine.length }\n            });\n            const selection = editor.getSelection();\n            const selectedText = getSelectionFromEditor(editor, selection);\n            useStore.getState().setTextSelection(selectedText);\n        }\n    };\n}\n","import { Panel, PanelLayout, Widget } from '@lumino/widgets';\nimport { AssistantIcon } from '../components/icon';\nimport { onMessageAccumulator } from './extension-load-utils';\nimport { AssistantPanelWidget } from '../components/assistant-panel-widget';\nexport class AssistantSidebarWidget extends Widget {\n    constructor(opts) {\n        super();\n        this.content = null;\n        this.manuallyClosed = false;\n        /**\n         * A function that allows subscribing to messages sent to this this.\n         */\n        this._onMessageFn = null;\n        this.opts = opts;\n        this.initialize();\n        // save a copy of this.processMessage, then overwrite it\n        const oldProcessMessage = this.processMessage.bind(this);\n        this.processMessage = (msg) => {\n            if (this._onMessageFn) {\n                this._onMessageFn(msg);\n            }\n            oldProcessMessage(msg);\n        };\n        // If the user closes the widget, it shouldn't be opened automatically\n        // However, if the system closes the widget, it should be opened automatically.\n        // We detect this by checking if the widget was hidden and detached in the last second.\n        // Also, if the widget is shown, we clear the manuallyClosed flag.\n        const onMessage = (message) => {\n            onMessageAccumulator(message, (messages) => {\n                const recentlyHidden = messages.find(m => m.type === 'after-hide');\n                const recentlyDetached = messages.find(m => m.type === 'after-detach');\n                const recentlyShown = messages.find(m => m.type === 'after-show');\n                if (recentlyHidden && !recentlyDetached) {\n                    this.manuallyClosed = true;\n                    // Hack to only track actual close from user interaction\n                    if (messages.length === 2) {\n                        this.hideFirstTimeLoginPage();\n                    }\n                }\n                if (recentlyShown) {\n                    this.manuallyClosed = false;\n                }\n            });\n        };\n        this.onMessage(onMessage);\n    }\n    /**\n     * Initializes the widget\n     */\n    initialize() {\n        const layout = (this.layout = new PanelLayout());\n        this.addClass('jp-SidePanel');\n        this.content = new Panel();\n        const assistantPanelWidget = new AssistantPanelWidget(this.opts.notebookTracker);\n        assistantPanelWidget.addClass('as-widget-content');\n        this.content.addWidget(assistantPanelWidget);\n        this.content.node.setAttribute('role', 'region');\n        this.content.node.setAttribute('aria-label', 'Assistant content');\n        this.content.addClass('as-widget-content');\n        this.addClass('as-widget-container');\n        layout.addWidget(this.content);\n        this.id = 'anaconda-assistant';\n        this.title.icon = AssistantIcon;\n        this.title.closable = true;\n    }\n    onMessage(fn) {\n        this._onMessageFn = fn;\n    }\n    // Shows the widget\n    // If the widget is visible, we don't do anything.\n    // If the widget is disposed, we regenerate it.\n    // If the widget is not attached, we add it to the main area.\n    // If the main area is not visible, we show it, unless keepHidden is true.\n    // Finally, we activate the widget, if keepHidden is false.\n    activateWidget(keepHidden = false) {\n        const app = this.opts.jupyterFrontEnd;\n        // If the widget is visible, don't do anything\n        if (this.isAttached && this.parent?.isVisible) {\n            return;\n        }\n        // Regenerate the widget if disposed\n        if (this.isDisposed) {\n            this.initialize();\n        }\n        // Add the widget to the main work area if it's not there\n        if (!this.isAttached) {\n            app.shell.add(this, 'right');\n        }\n        // If the main area is not visible, and the widget is hidden, show the widget and the main area\n        if (!this.parent?.isVisible && !keepHidden) {\n            this.show();\n            this.parent?.show();\n        }\n        // Activate the widget if keepHidden is false\n        if (!keepHidden) {\n            app.shell.activateById(this.id);\n        }\n    }\n    // Hides the widget and the parent widget\n    hideWidget() {\n        this.hide();\n        this.parent?.hide();\n        this.hideFirstTimeLoginPage();\n    }\n    hideFirstTimeLoginPage() {\n        window.localStorage.setItem('anaconda-assistant-opened-once', 'true');\n    }\n    // Toggles the widget\n    // If the widget is attached and the parent is visible, we close the parent.\n    // We indicate that this was done manually.\n    // Otherwise, we clear the manuallyClosed flag and activate the widget\n    toggleWidget() {\n        // If the widget is attached and the parent is visible, we close the parent.\n        if (this.isAttached && this.parent?.isVisible) {\n            // Once changed manually, it shouldn't be changed automatically\n            this.manuallyClosed = true;\n            this.hideWidget();\n            return;\n        }\n        this.manuallyClosed = false;\n        return this.activateWidget();\n    }\n}\n","/**\n * This function is used to detect if the user manually closed the widget.\n * It works by accumulating all messages from the widget that happened\n * within the time specified by the timeout parameter.\n * After the timeout, the accumulated messages are passed to the callback.\n */\nlet messagesInTheLastSecond = [];\nlet messageAccumulatorTimeout;\nexport const onMessageAccumulator = (message, callback, timeout = 100) => {\n    messagesInTheLastSecond.push(message);\n    clearTimeout(messageAccumulatorTimeout);\n    messageAccumulatorTimeout = setTimeout(() => {\n        if (messagesInTheLastSecond.length > 0 && callback) {\n            callback(messagesInTheLastSecond);\n        }\n        messagesInTheLastSecond = [];\n    }, timeout);\n};\n/**\n * Helper to load the core plugin\n */\nexport class SharedCorePlugin {\n    constructor() {\n        this.corePlugin = null;\n        this.coreReady = null;\n    }\n    async setCore(corePlugin) {\n        this.corePlugin = corePlugin;\n        this.coreReady = await corePlugin.ready();\n    }\n    getCore() {\n        if (!this.corePlugin) {\n            throw new Error('Core not set');\n        }\n        return this.corePlugin;\n    }\n    getCoreReady() {\n        this.getCore();\n        if (!this.coreReady) {\n            throw new Error('Core not ready');\n        }\n        return this.coreReady;\n    }\n    getFeatureFlagBool(name) {\n        return this.getCoreReady().featureFlag.getBool(name, false);\n    }\n}\nexport const sharedCore = new SharedCorePlugin();\n","import { fetchTermsAndConditionsVersion } from '../api/terms-and-conditions-version';\nimport { noDataframeStarters } from '../store/home-screen-state-fns';\nimport { STATE_VERSION, useStore } from '../store/store';\nimport { ADD_CODE_TO_NOTEBOOK_TYPES } from '../types';\nimport { requestAPI } from '../utils/launchdarkly/handler';\nimport { logout } from '../utils/nucleus/accountUtils';\nexport function normalizeDiskState(diskState, currentAppState) {\n    // Extract as minimal state as possible\n    let addCodeToNotebook = diskState.settings?.addCodeToNotebook;\n    if (!addCodeToNotebook || !ADD_CODE_TO_NOTEBOOK_TYPES.includes(addCodeToNotebook)) {\n        addCodeToNotebook = currentAppState.settings?.addCodeToNotebook;\n    }\n    let notebooks = [];\n    if (diskState.notebooks) {\n        for (const notebook of diskState.notebooks) {\n            if (typeof notebook.path !== 'string')\n                continue;\n            if (!notebook.path)\n                continue;\n            if (!notebook.chats)\n                continue;\n            const chats = {};\n            for (const chat of Object.values(notebook.chats)) {\n                if (typeof chat.key !== 'string')\n                    continue;\n                if (typeof chat.name !== 'string')\n                    continue;\n                chats[chat.key] = {\n                    // Being permissive here since the corruption would have to be surgical to break here,\n                    // and chats are of too many types to be able to validate them all\n                    // in this iteration.\n                    ...chat,\n                    lastUpdated: new Date(chat.lastUpdated || 0)\n                };\n            }\n            notebooks.push({\n                path: notebook.path,\n                notebookState: {\n                    dataframes: [],\n                    selectedCell: null,\n                    selectedText: null,\n                    error: null\n                },\n                homeScreen: {\n                    chatStarters: noDataframeStarters,\n                    selectedChatStarter: null\n                },\n                suggestionState: {\n                    loading: false,\n                    suggestions: null,\n                    dataframe: null,\n                    error: null\n                },\n                chats,\n                activeChatKey: null,\n                previousChatKey: null\n            });\n        }\n    }\n    return {\n        terms: {\n            accepted: Boolean(diskState.terms?.accepted || currentAppState.terms?.accepted),\n            version: diskState.terms?.version || currentAppState.terms?.version || null\n        },\n        notebooks,\n        settings: {\n            open: Boolean(diskState.settings?.open),\n            enableDataCollection: Boolean(diskState.settings?.enableDataCollection),\n            addCodeToNotebook\n        }\n    };\n}\n/**\n * Fetches the state from disk.\n * Ignores the state if the received state is not an object (meaning JSON parsing failed).\n * Ignores the state if the version does not match.\n * @returns The state from disk or null if there is no state.\n */\nexport async function fetchAndNormalizeDiskState(currentAppState) {\n    const diskStateResponse = await requestAPI('get_disk_state');\n    const isObject = Boolean(diskStateResponse && typeof diskStateResponse === 'object');\n    const hasState = Boolean(isObject && diskStateResponse.state && typeof diskStateResponse.state === 'object');\n    const hasVersion = Boolean(isObject && diskStateResponse.version && typeof diskStateResponse.version === 'number');\n    const versionIsUpToDate = Boolean(isObject && diskStateResponse.version && diskStateResponse.version === STATE_VERSION);\n    if (isObject && hasState && hasVersion && versionIsUpToDate) {\n        return normalizeDiskState(diskStateResponse.state, currentAppState);\n    }\n    return null;\n}\n/**\n * Fetches the state from disk and merges it with the app state.\n */\nexport function fetchDiskState() {\n    return new Promise(async (resolve, reject) => {\n        try {\n            // Fetching state from disk\n            const diskState = await fetchAndNormalizeDiskState(useStore.getState());\n            if (!diskState) {\n                // If we didn't receive a valid state and we are logged in, try to log out\n                if (useStore.getState()?.terms?.accepted) {\n                    console.log('No state found on disk and locally the Assistant is already loaded. Logging out.');\n                    await logout([\n                        'An Assistant in another Jupyter Lab session or browser tab logged out.',\n                        'Do you want to log out as well?',\n                        'Logging out will remove all your Anaconda Assistant data,',\n                        'but if you decide to stay some features will not be available.'\n                    ].join(' '));\n                    resolve(void 0);\n                    return;\n                }\n                console.log('No state found on disk. Skipping state update.');\n                resolve(void 0);\n                return;\n            }\n            // If we can't fetch the terms version, the user doesn't have access to our API.\n            let fetchedVersion = null;\n            try {\n                fetchedVersion = await fetchTermsAndConditionsVersion();\n            }\n            catch (e) {\n                console.error('Error fetching terms and conditions version', e);\n            }\n            if (!fetchedVersion) {\n                console.log('No terms and conditions version found. The user is not allowed to use our API.');\n                useStore.getState()?.setAccess(false);\n            }\n            // Accepting terms locally if they are accepted on disk\n            const version = diskState.terms?.version || useStore.getState()?.terms?.version || fetchedVersion;\n            if (!useStore.getState()?.terms?.accepted && diskState.terms?.accepted && version) {\n                console.log('Terms and conditions accepted on disk. Accepting them locally.');\n                useStore.getState()?.acceptTerms(version, true);\n            }\n            // Syncing chats\n            for (const notebook of diskState.notebooks || []) {\n                const chats = Object.values(notebook.chats);\n                console.log(`Syncing ${chats.length} chats to ${notebook.path}`);\n                useStore.getState()?.addSyncedChats(notebook, chats);\n            }\n            resolve(void 0);\n        }\n        catch (e) {\n            console.error('Error updating state from disk', e);\n            reject(e);\n        }\n    });\n}\n","import { useStore } from '../store/store';\nimport _ from 'lodash';\n/**\n * Initializes the assistant by hiding it if there's no active notebook.\n * Also, if the current widget is a notebook and has a path,\n * sets the path in the store if it's not set.\n */\nexport function initializeAssistant(opts) {\n    const { assistant, jupyterFrontEnd: app } = opts;\n    const onCurrentWidgetChanged = typeof app.shell?._currentChanged?.connect === 'function';\n    if (!onCurrentWidgetChanged) {\n        return;\n    }\n    let hadUrlParam = false;\n    async function onConnect() {\n        const context = app.shell.currentWidget?.context;\n        const factoryName = context?.factoryName;\n        const isNotebook = factoryName && factoryName.toLowerCase() === 'notebook';\n        // Get ?open_assistant=true from the URL\n        const urlParams = new URLSearchParams(window.location.search);\n        const openAssistant = urlParams.get('open_assistant');\n        // Remove the query param from the URL\n        urlParams.delete('open_assistant');\n        window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`);\n        if (openAssistant === 'true') {\n            hadUrlParam = true;\n            if (!isNotebook && useStore.getState().account) {\n                // If the user already logged in, but the current widget is not a notebook,\n                // we must create a notebook.\n                // The only view that works without a notebook is the login view.\n                await app.commands.execute('notebook:create-new');\n            }\n            assistant.activateWidget();\n            return;\n        }\n        if ((!hadUrlParam || useStore.getState().account) &&\n            !isNotebook &&\n            Boolean(window.localStorage.getItem('anaconda-assistant-opened-once'))) {\n            assistant.hideWidget();\n            assistant.close();\n            return;\n        }\n        // TODO:\n        // `!assistant.parent` seems to be necessary for JupyterLab v4\n        if (!assistant.parent || !(assistant.isAttached && assistant.parent?.isVisible)) {\n            assistant.activateWidget(assistant.manuallyClosed);\n        }\n        const state = useStore.getState();\n        if (context?.path && (!state.path || state.path !== context.path)) {\n            useStore.getState().setPath(context?.path || '', { user: state.user || '', dataframes: [] });\n        }\n    }\n    // TODO:\n    // This code seems to be necessary for JupyterLab v4\n    const debouncedOnConnect = _.debounce(onConnect, 100);\n    app.shell._currentChanged.connect(debouncedOnConnect);\n    // TODO:\n    // This code seems to be necessary for JupyterLab v4\n    debouncedOnConnect();\n}\n","import { STATE_VERSION, useStore } from '../store/store';\nimport { requestAPI } from '../utils/launchdarkly/handler';\nimport { getAccessToken } from '../utils/nucleus/auth';\n/**\n * Synchronizes the state of the store with the server.\n * Does so by sending the state to the server,\n * except for the terms and conditions, which\n * are only sent if they have been accepted.\n */\nexport async function syncDiskState(termsAccepted) {\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n        console.log('Could not sync state, no access token');\n        return;\n    }\n    const appState = useStore.getState();\n    const state = {\n        ...appState,\n        terms: {\n            accepted: false,\n            version: appState.terms?.version || null\n        }\n    };\n    // Special case for terms and conditions\n    if (appState.terms?.accepted === true || termsAccepted) {\n        state.terms.accepted = true;\n    }\n    requestAPI('sync_disk_state', {\n        headers: { 'X-Nucleus-Token': accessToken.accessToken },\n        method: 'POST',\n        body: JSON.stringify({\n            state,\n            version: STATE_VERSION\n        })\n    });\n}\nexport async function clearDiskState() {\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n        console.log('Could not sync state, no access token');\n        return;\n    }\n    requestAPI('sync_disk_state', {\n        headers: { 'X-Nucleus-Token': accessToken.accessToken },\n        method: 'POST',\n        body: JSON.stringify({})\n    });\n}\n","import { useStore } from '../store/store';\nimport { fetchDiskState } from './fetchDiskState';\nimport { syncDiskState } from './syncDiskState';\nimport { hasAccess } from '../api/access';\nlet chainedPromise = null;\n/**\n * Synchronizes the state of the store with the server.\n * First, it checks if there is a promise running.\n * If there is, it waits for it to finish.\n * Then, it checks if the user has access to our API.\n * If not, it sets the access to false in the store.\n * If the user has access, it updates the account in the store.\n * Then, it fetches the state from disk and merges it with the app state.\n * Finally, it synchronizes the state with the server.\n */\nexport function syncDiskStateChained(termsAccepted) {\n    chainedPromise = (async () => {\n        if (chainedPromise) {\n            await chainedPromise;\n        }\n        if (!(await hasAccess())) {\n            console.log('The user is not allowed to use our API.');\n            useStore.getState().setAccess(false);\n            return;\n        }\n        try {\n            await useStore.getState().updateAccount();\n        }\n        catch (e) {\n            console.log('Unable to pre-load account. The user is not logged in');\n        }\n        await fetchDiskState();\n        await syncDiskState(termsAccepted);\n        chainedPromise = null;\n    })();\n    return chainedPromise;\n}\nexport function syncDiskStateChainedEventFunction() {\n    syncDiskStateChained();\n}\nexport function bindSyncDiskStateChained() {\n    window.addEventListener('blur', syncDiskStateChainedEventFunction);\n    window.addEventListener('focus', syncDiskStateChainedEventFunction);\n}\nexport function unbindSyncDiskStateChained() {\n    try {\n        window.removeEventListener('blur', syncDiskStateChainedEventFunction);\n        window.removeEventListener('focus', syncDiskStateChainedEventFunction);\n    }\n    catch (e) {\n        console.log('Error unbinding syncDiskStateChained', e);\n    }\n}\n","import { getActiveNotebook } from './state-fns';\nconst loadVolcanoData = {\n    name: 'load-volcano-data',\n    category: 'tutorial',\n    label: 'Load volcano data from the Smithsonian Institute'\n};\nconst plotFibonacci = {\n    name: 'plot-fibonacci',\n    category: 'tutorial',\n    label: 'Plot the first 100 Fibonacci numbers'\n};\nconst maskEmails = {\n    name: 'mask-emails',\n    category: 'tutorial',\n    label: 'Create a function to mask emails'\n};\nconst loadADataFrame = {\n    name: 'load-a-dataframe',\n    category: 'dataframes',\n    label: 'Load a DataFrame'\n};\nconst explainDataframe = {\n    name: 'describe-dataframe',\n    category: 'dataframes',\n    label: 'Describe the data in a DataFrame'\n};\nconst graphDataframe = {\n    name: 'graph-dataframe',\n    category: 'dataframes',\n    label: 'Generate a graph for data in a DataFrame'\n};\nconst dataCleaningSuggestions = {\n    name: 'data-cleaning-suggestions',\n    category: 'dataframes',\n    label: 'Suggestions for cleaning data'\n};\nconst dataframeSuggestions = {\n    name: 'dataframe-suggestions',\n    category: 'dataframes',\n    label: 'More suggestions...'\n};\nconst dataframePresentStarters = [\n    loadVolcanoData,\n    plotFibonacci,\n    maskEmails,\n    loadADataFrame,\n    graphDataframe,\n    explainDataframe,\n    dataCleaningSuggestions,\n    dataframeSuggestions\n];\nexport const noDataframeStarters = [loadVolcanoData, plotFibonacci, maskEmails, loadADataFrame];\nexport function initialHomeScreenState(dataframes) {\n    return {\n        chatStarters: dataframes.length > 0 ? dataframePresentStarters : noDataframeStarters,\n        selectedChatStarter: null\n    };\n}\nexport function updateHomeScreenState(homeScreen, dataframes) {\n    if (selectedStarterNeedsDataframe(homeScreen) && dataframes.length === 0) {\n        homeScreen.chatStarters = noDataframeStarters;\n        homeScreen.selectedChatStarter = null;\n        return;\n    }\n    homeScreen.chatStarters = dataframes.length > 0 ? dataframePresentStarters : noDataframeStarters;\n}\nexport function selectChatStarter(state, chatStarter) {\n    const activeNotebook = getActiveNotebook(state);\n    if (!activeNotebook)\n        return;\n    activeNotebook.homeScreen.selectedChatStarter = chatStarter;\n}\nexport function resetToHomeScreen(state) {\n    const activeNotebook = getActiveNotebook(state);\n    if (!activeNotebook)\n        return;\n    activeNotebook.homeScreen.selectedChatStarter = null;\n    activeNotebook.previousChatKey = activeNotebook.activeChatKey;\n    activeNotebook.activeChatKey = null;\n}\nfunction selectedStarterNeedsDataframe(homeScreen) {\n    const { selectedChatStarter } = homeScreen;\n    return (selectedChatStarter?.name === 'graph-dataframe' ||\n        selectedChatStarter?.name === 'describe-dataframe' ||\n        selectedChatStarter?.name === 'data-cleaning-suggestions' ||\n        selectedChatStarter?.name === 'dataframe-suggestions');\n}\n","import { entries, flatten, values } from 'lodash';\nimport { getActiveChat, getActiveNotebook } from './state-fns';\nlet MAX_STORED_CHATS = 50;\nexport function updateStoreState(state, error) {\n    if (state) {\n        const notebooks = state.notebooks;\n        notebooks.forEach(nb => {\n            values(nb.chats).forEach(chat => {\n                // Need to ensure chat timestamps strings are converted to Date objects\n                chat.lastUpdated = new Date(chat.lastUpdated);\n            });\n        });\n        state.menuOpen = false;\n        const notebook = getActiveNotebook(state);\n        const activeChat = getActiveChat(state);\n        if (notebook && activeChat) {\n            if (activeChat.inProgress) {\n                // If there is an in progress chat request, we want to remove it\n                activeChat.inProgress = null;\n                notebook.activeChatKey = null;\n                if (activeChat.messages.length === 1) {\n                    // If there is only one message in the chat, we want to remove the chat altogether\n                    delete notebook.chats[activeChat.key];\n                }\n                else {\n                    // Otherwise, we want to remove the last message from the chat\n                    activeChat.messages.pop();\n                }\n            }\n        }\n        if (notebook) {\n            // Don't want to rehydrate cell execution errors\n            notebook.notebookState.error = null;\n            // Don't want to rehydrate selected text\n            notebook.notebookState.selectedText = null;\n        }\n        // Want to cap the total number of chats in case we fill up local storage\n        // Get all chat lastUpdated dates, and remove any chats that are older than the\n        // 50th most recent chat across all notebooks\n        const allDates = getLastUpdatedOfAllChats(state);\n        if (allDates.length > MAX_STORED_CHATS) {\n            const sortedDates = allDates.sort((a, b) => b.getTime() - a.getTime());\n            const cutoffDate = sortedDates[MAX_STORED_CHATS];\n            notebooks.forEach(nb => {\n                const chats = entries(nb.chats);\n                const chatKeysToDelete = chats\n                    .filter(([_, chat]) => chat.lastUpdated <= cutoffDate)\n                    .map(([key, _]) => key);\n                chatKeysToDelete.forEach(key => delete nb.chats[key]);\n            });\n        }\n        let i = notebooks.length;\n        while (i--) {\n            // If there are no chats in a notebook, and this is not the active notebook, remove it\n            if (Object.values(notebooks[i].chats).length === 0 && notebooks[i].path !== state.path) {\n                notebooks.splice(i, 1);\n            }\n        }\n    }\n}\nfunction getLastUpdatedOfAllChats(state) {\n    return flatten(state.notebooks.map(nb => values(nb.chats).map(chat => chat.lastUpdated)));\n}\n// Only use for testing\nexport function _overrideMaxChatsForTesting(maxChats) {\n    MAX_STORED_CHATS = maxChats;\n}\n","import { messageId, requireChatState } from './store';\nimport { v4 as uuidv4 } from 'uuid';\nimport { hasActiveCodeResponse } from '../api/assistant-request-generator';\nimport { extractMessageBlocks, } from '../utils/code-cleaner';\nimport { original } from 'immer';\nimport { initialHomeScreenState, updateHomeScreenState } from './home-screen-state-fns';\nimport { AssistantError } from '../utils/errors';\nimport { formatContextVariables } from '../utils/contextMessage';\nimport { attachmentMessagePrefix, cleanMessageWithAttachmentPrefix } from '../utils/specialPrefixes';\nexport function setNotebook(state, path, nbState) {\n    state.path = path;\n    state.user = nbState.user;\n    const notebook = state.notebooks.find(notebook => notebook.path === path);\n    if (notebook) {\n        notebook.notebookState.dataframes = nbState.dataframes;\n        updateHomeScreenState(notebook.homeScreen, nbState.dataframes);\n    }\n    else {\n        state.notebooks.push({\n            path,\n            activeChatKey: null,\n            previousChatKey: null,\n            chats: {},\n            notebookState: {\n                dataframes: nbState.dataframes,\n                selectedCell: null,\n                selectedText: null,\n                error: null\n            },\n            homeScreen: initialHomeScreenState(nbState.dataframes),\n            suggestionState: { loading: false, suggestions: null, dataframe: null, error: null }\n        });\n    }\n    return state;\n}\nexport function setActiveChat(state, chatKey) {\n    const notebook = getActiveNotebook(state);\n    if (notebook) {\n        notebook.previousChatKey = notebook.activeChatKey;\n        if (chatKey === null) {\n            notebook.activeChatKey = null;\n        }\n        else if (chatKey && notebook.chats[chatKey] != null) {\n            notebook.activeChatKey = chatKey;\n        }\n    }\n}\nexport function showBackButton(state) {\n    const activeNotebook = getActiveNotebook(state);\n    const previousChat = getPreviousChat(state);\n    const activeChat = getActiveChat(state);\n    const chatStarter = activeNotebook?.homeScreen.selectedChatStarter;\n    const isNotSuggestions = chatStarter &&\n        chatStarter.name !== 'data-cleaning-suggestions' &&\n        chatStarter.name !== 'dataframe-suggestions';\n    return Boolean(previousChat && (activeChat || isNotSuggestions));\n}\nexport function setupInitialRequestState(state, context, instruction) {\n    const chatState = getActiveChat(state);\n    state.attachContextOpen = false;\n    state.hidePopups = true;\n    if (chatState) {\n        addNewInstruction(chatState, instruction);\n    }\n    else {\n        setInitialChatState(state, context, instruction);\n    }\n}\nexport function updateCode(state, response) {\n    const { chatState } = requireChatState(state);\n    if (hasActiveCodeResponse(chatState.inProgress)) {\n        chatState.inProgress.content = response.content;\n        if (response.tokens)\n            chatState.tokens = response.tokens;\n        if (response.maxTokens)\n            chatState.maxTokens = response.maxTokens;\n    }\n}\nexport function completeRequest(state, onComplete) {\n    const { chatState } = requireChatState(state);\n    const code = hasActiveCodeResponse(chatState.inProgress) ? chatState.inProgress.content : '';\n    const message_id = messageId(chatState.session, chatState.messages.length + 1);\n    const content = chatState.inProgress.content;\n    if (!content) {\n        throw new AssistantError('error', 'Missing content', 200);\n    }\n    chatState.messages.push({\n        role: 'assistant',\n        content,\n        messageId: message_id,\n        feedback: null,\n        tokens: chatState.tokens ?? 0,\n        maxTokens: chatState.maxTokens\n    });\n    chatState.inProgress = null;\n    chatState.lastUpdated = new Date();\n    // chatState.session is a wrapped immer proxy at this point, need to unwrap it\n    const session = original(chatState.session);\n    if (onComplete && session) {\n        const blocks = extractMessageBlocks(code);\n        const firstCodeBlock = blocks.find(block => block.type === 'python' && block.content !== '');\n        if (firstCodeBlock)\n            onComplete(firstCodeBlock.content, message_id, session);\n    }\n}\nexport function cleanupError(state, path, selectedChat, error) {\n    const notebook = state.notebooks.find(nb => nb.path === path);\n    const chatState = notebook?.chats[selectedChat];\n    if (!notebook || !chatState)\n        return;\n    if (error) {\n        chatState.inProgress = error;\n    }\n    else if (chatState.messages.length === 1) {\n        delete notebook.chats[selectedChat];\n    }\n    else {\n        chatState.messages.pop(); // Remove the last instruction\n        chatState.inProgress = null;\n    }\n}\nexport function removeFailedMessages(state) {\n    const notebook = getActiveNotebook(state);\n    const chatState = getActiveChat(state);\n    if (!notebook?.activeChatKey || !chatState || chatState?.inProgress?.type !== 'error')\n        return;\n    if (chatState.messages.length === 0) {\n        delete notebook.chats[notebook.activeChatKey];\n    }\n    else {\n        chatState.messages.pop(); // Remove the last instruction\n        chatState.inProgress = null;\n    }\n}\nexport function resetActiveChat(state) {\n    const { notebook, activeChatKey } = requireChatState(state);\n    delete notebook.chats[activeChatKey];\n}\nexport function submitFeedback(state, feedback) {\n    const { chatState } = requireChatState(state);\n    const message = chatState.messages.find(msg => msg.messageId === feedback.messageId);\n    if (message?.role === 'assistant')\n        message.feedback = feedback;\n}\nexport function setCellError(state, outputError) {\n    const activeNotebook = getActiveNotebook(state);\n    state.hidePopups = false;\n    if (activeNotebook)\n        activeNotebook.notebookState.error = outputError;\n}\nexport function setTextSelection(state, selection) {\n    const activeNotebook = getActiveNotebook(state);\n    state.hidePopups = false;\n    if (activeNotebook)\n        activeNotebook.notebookState.selectedText = selection;\n}\nexport function setSuggestionsLoading(state, loading) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = { ...activeNotebook.suggestionState, loading };\n    }\n}\nexport function setSuggestionsError(state, error) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = { ...activeNotebook.suggestionState, loading: false, error };\n    }\n}\nexport function setSuggestionsDataframe(state, dataframe) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = {\n            ...activeNotebook.suggestionState,\n            suggestions: null,\n            error: null,\n            loading: false,\n            dataframe\n        };\n    }\n}\nexport function updateSuggestions(state, suggestions) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = {\n            ...activeNotebook.suggestionState,\n            error: null,\n            loading: false,\n            suggestions: suggestions?.length ? suggestions : activeNotebook.suggestionState.suggestions\n        };\n    }\n}\nexport function resetSuggestions(state) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = {\n            dataframe: null,\n            error: null,\n            loading: false,\n            suggestions: null\n        };\n    }\n}\nfunction addNewInstruction(chatState, instruction) {\n    const { session, messages } = chatState;\n    const message_id = messageId(session, messages.length + 1);\n    const responseMessageId = messageId(session, messages.length + 2);\n    chatState.messages.push({\n        role: 'user',\n        content: instruction,\n        messageId: message_id,\n    });\n    chatState.inProgress = { type: 'active', content: '', message_id: responseMessageId };\n}\nfunction setInitialChatState(state, context, instruction) {\n    const notebook = getActiveNotebook(state);\n    const chatKey = uuidv4();\n    if (notebook) {\n        notebook.chats[chatKey] = initialChatState(state.user || '', chatKey, context, instruction);\n        notebook.activeChatKey = chatKey;\n    }\n}\nfunction initialChatState(user_id, chatKey, context, instruction) {\n    const session = { sessionId: uuidv4(), userId: user_id };\n    const name = determineChatName(context, instruction);\n    return {\n        key: chatKey,\n        name,\n        context,\n        messages: [\n            {\n                role: 'user',\n                content: instruction,\n                messageId: messageId(session, 1),\n                tokens: 0\n            }\n        ],\n        inProgress: { type: 'active', content: '', message_id: messageId(session, 2) },\n        session,\n        tokens: 0,\n        lastUpdated: new Date(),\n        maxTokens: 4096\n    };\n}\nexport function getActiveChat(state) {\n    const notebook = state.notebooks.find(notebook => notebook.path === state.path);\n    return notebook?.activeChatKey ? notebook.chats[notebook.activeChatKey] || null : null;\n}\nexport function getInProgressResponse(state) {\n    const activeChat = getActiveChat(state);\n    return activeChat?.inProgress?.type === 'active' ? activeChat.inProgress : null;\n}\nexport function getPreviousChat(state) {\n    const notebook = state.notebooks.find(notebook => notebook.path === state.path);\n    return notebook?.previousChatKey ? notebook.chats[notebook.previousChatKey] || null : null;\n}\nexport function getActiveNotebook(state) {\n    const notebook = state.notebooks.find(notebook => notebook.path === state.path);\n    return notebook || null;\n}\nexport function getChatTitle(state) {\n    const activeNotebook = getActiveNotebook(state);\n    return !activeNotebook ? '' : titleFromChat(getActiveChat(state), activeNotebook);\n}\nexport function getIsNewChat(state) {\n    const activeNotebook = getActiveNotebook(state);\n    return !activeNotebook ? false : !activeNotebook.activeChatKey;\n}\nexport function getIsOnChatStarter(state) {\n    const activeNotebook = getActiveNotebook(state);\n    return !activeNotebook ? false : activeNotebook.homeScreen.selectedChatStarter !== null;\n}\nexport function getPreviousChatName(state) {\n    const activeNotebook = getActiveNotebook(state);\n    if (!activeNotebook)\n        return '';\n    const chat = getPreviousChat(state);\n    return chat ? determineChatName(chat.context, chat.messages[0].content) : '';\n}\nexport function gotoPreviousChat(state) {\n    const previousChat = getPreviousChat(state);\n    setActiveChat(state, previousChat?.key || null);\n}\nfunction determineChatName(context, instruction) {\n    const suffix = formatContextVariables(context, instruction);\n    switch (context.type) {\n        case 'graph-dataframe':\n            return `Graph ${suffix}`;\n        case 'describe-dataframe':\n            return `Describe data in ${suffix}`;\n        case 'explain-code':\n            return `Explain ${suffix}`;\n        case 'comment-code':\n            return `Comment ${suffix}`;\n        case 'improve-code':\n            return `Refactor ${suffix}`;\n        case 'debug-error':\n            return `Debugging ${suffix}`;\n        case 'suggestions-chat':\n        case 'default-python':\n            if (instruction.startsWith(attachmentMessagePrefix)) {\n                return cleanMessageWithAttachmentPrefix(instruction);\n            }\n            else {\n                return `${instruction} (using ${suffix})`;\n            }\n    }\n}\nfunction titleFromChat(activeChat, activeNotebook) {\n    if (activeChat) {\n        return chatTitleFromContext(activeChat.context);\n    }\n    else if (activeNotebook.homeScreen.selectedChatStarter) {\n        return chatTitleFromStarterName(activeNotebook.homeScreen.selectedChatStarter.name);\n    }\n    else {\n        return 'New Chat';\n    }\n}\nfunction chatTitleFromContext(context) {\n    switch (context.type) {\n        case 'graph-dataframe':\n            return 'Generate graph from a Dataframe';\n        case 'describe-dataframe':\n            return 'Describe dataframe';\n        case 'explain-code':\n            return 'Explain code';\n        case 'comment-code':\n            return 'Comment code';\n        case 'improve-code':\n            return 'Format code';\n        case 'debug-error':\n            return 'Debug error';\n        case 'suggestions-chat':\n            return 'Assistant Suggestions';\n        case 'default-python':\n            return 'Generate Python code';\n    }\n}\nfunction chatTitleFromStarterName(name) {\n    switch (name) {\n        case 'load-volcano-data':\n            return 'Volcano data from the Smithsonian Institute';\n        case 'plot-fibonacci':\n            return 'Plot Fibonacci numbers';\n        case 'mask-emails':\n            return 'Mask emails';\n        case 'load-a-dataframe':\n            return 'Load a DataFrame';\n        case 'describe-dataframe':\n            return 'Describe DataFrame';\n        case 'graph-dataframe':\n            return 'Generate graph from a DataFrame';\n        case 'data-cleaning-suggestions':\n            return 'Suggestions for cleaning data';\n        case 'dataframe-suggestions':\n            return 'Suggestions for working with DataFrames';\n    }\n}\n","import { create } from 'zustand';\nimport { createJSONStorage, devtools, persist } from 'zustand/middleware';\nimport { immer } from 'zustand/middleware/immer';\nimport { ASSISTANT_API_ERROR_NAME, ASSISTANT_API_NETWORK_ERROR_NAME, ASSISTANT_API_SERVER_ERROR_NAME, ASSISTANT_API_INVALID_RESPONSE_ERROR_NAME, ASSISTANT_API_UNKNOWN_ERROR_NAME, ASSISTANT_SDK_ERROR_NAME, ASSISTANT_SDK_INVALID_VERSION_ERROR_NAME, ASSISTANT_SDK_INVALID_API_URL_ERROR_NAME, ASSISTANT_SDK_UNKNOWN_ERROR_NAME } from '@anaconda/assistant-sdk';\nimport { cleanupError, completeRequest, getActiveChat, getActiveNotebook, gotoPreviousChat, removeFailedMessages, resetActiveChat, setActiveChat, setCellError, setNotebook, setSuggestionsDataframe, setSuggestionsError, setSuggestionsLoading, resetSuggestions, setTextSelection, setupInitialRequestState, submitFeedback, updateCode, updateSuggestions } from './state-fns';\nimport { ASSISTANT_ERROR } from '../utils/errors';\nimport { postFeedback } from '../api/feedback';\nimport { generateRequest } from '../api/assistant-request-generator';\nimport { resetToHomeScreen, selectChatStarter } from './home-screen-state-fns';\nimport { updateStoreState } from './rehydration-utils';\nimport { createTestStorage, isTestMode } from './test-storage';\nimport { getSuggestions } from './suggestions-fns';\nimport { getServerUrl } from '../config';\nimport { getNucleusAccount } from '../utils/nucleus/account';\nimport { getAccountMaxTokens } from '../utils/nucleus/accountUtils';\nimport { isLocalDev } from '../utils/environmentType';\nimport { getAssistantSdk } from '../assistant-sdk';\nimport { syncDiskStateChained, unbindSyncDiskStateChained } from '../jupyter/syncStateDebounced';\nexport const STATE_VERSION = 9;\n// The abortController is used to ensure we only have one in-flight request at a time\nlet abortController = null;\n/**\n * This is where we define our global Zustand store. All actions that modify the store are also\n * defined here. We use the immer middleware to allow us to use immutable state in a more ergonomic way\n *\n * The store describes all the state of the application and the actions that can be taken to modify that state.\n * As such you should try and ensure to keep the store as clean as possible and extract any logic to external functions\n * such as the state-fns.ts file.\n *\n * In practice these external functions will be pure functions, since we are passing an immer 'draft' state to them\n * In the function, you can mutate the state as if it were mutable, and immer will take care of creating a new state\n *\n */\nexport const useStore = create(persist(devtools(immer((set, get) => ({\n    access: true,\n    terms: {\n        accepted: false,\n        version: null\n    },\n    serverUrl: null,\n    notebooks: [],\n    path: null,\n    settings: {\n        enableDataCollection: false,\n        open: false,\n        addCodeToNotebook: null\n    },\n    user: null,\n    account: null,\n    menuOpen: false,\n    attachContextOpen: false,\n    setServerUrl: async () => {\n        let _serverUrl = null;\n        try {\n            _serverUrl = await getServerUrl();\n        }\n        catch (e) {\n            console.error('Error getting server url', e);\n        }\n        if (!_serverUrl) {\n            set(state => void (state.serverUrl = _serverUrl));\n        }\n    },\n    setPath: (path, nbState) => {\n        if (path !== get().path && abortController) {\n            abortController.abort();\n            get().resetToHomeScreen();\n        }\n        set(state => setNotebook(state, path, nbState));\n    },\n    setAccess: (access) => {\n        set(state => {\n            if (!access) {\n                state.logout();\n            }\n            else {\n                state.access = true;\n            }\n        }, true);\n    },\n    setTermsVersion: (version) => {\n        set(state => void (state.terms.version = version));\n    },\n    acceptTerms: (version, accepted) => {\n        set(state => {\n            state.terms.accepted = accepted;\n            // Ensure that other copies of the app also accept terms and conditions.\n            // We'll leave rejecting T&C to the API call that checks for the version on load.\n            if (accepted) {\n                syncDiskStateChained(accepted);\n            }\n        });\n    },\n    updateAccount: async () => {\n        if (isLocalDev())\n            return;\n        const account = await getNucleusAccount();\n        const maxTokens = await getAccountMaxTokens(account);\n        set(state => {\n            state.account = account;\n            const activeChat = getActiveChat(state);\n            if (!activeChat)\n                return;\n            activeChat.maxTokens = maxTokens;\n        }, true);\n    },\n    selectChatStarter: (chatStarter) => {\n        set(state => selectChatStarter(state, chatStarter));\n    },\n    resetToHomeScreen: () => {\n        abortController?.abort();\n        get().setAttachContextOpen(false);\n        get().setHidePopups(true);\n        set(state => void resetSuggestions(state));\n        set(state => resetToHomeScreen(state));\n    },\n    setActiveChat: (chatKey) => {\n        abortController?.abort();\n        set(state => setActiveChat(state, chatKey));\n    },\n    setMenuOpen: (menuOpen) => {\n        set(state => void (state.menuOpen = menuOpen));\n    },\n    setCellError: (error) => {\n        set(state => void setCellError(state, error));\n    },\n    setTextSelection: (selection) => {\n        set(state => void setTextSelection(state, selection));\n    },\n    updateSuggestions: async (activeCell, type, dataframe) => {\n        set(state => void setSuggestionsLoading(state, true));\n        try {\n            const suggestions = await getSuggestions(get(), activeCell, type, dataframe);\n            set(state => void updateSuggestions(state, suggestions));\n        }\n        catch (e) {\n            set(state => void setSuggestionsLoading(state, false));\n            set(state => void setSuggestionsError(state, e.message));\n        }\n    },\n    setSuggestionsDataframe: (dataframe) => {\n        set(state => void setSuggestionsDataframe(state, dataframe));\n    },\n    toggleMenuOpen: () => {\n        set(state => void (state.menuOpen = !state.menuOpen));\n    },\n    setAttachContextOpen: (attachContextOpen) => {\n        set(state => {\n            state.hidePopups = false;\n            state.attachContextOpen = attachContextOpen;\n        });\n    },\n    addInstruction: async ({ instruction }) => {\n        const chat = getActiveChat(get());\n        const context = chat ? chat.context : { type: 'default-python', variables: {} };\n        await get().makeChatRequest({ context, instruction });\n    },\n    makeChatRequest: async ({ context, instruction }) => {\n        abortController = new AbortController();\n        set(state => setupInitialRequestState(state, context, instruction));\n        const { path, activeChatKey } = requireChatState(get());\n        const sdk = getAssistantSdk();\n        const request = generateRequest(get());\n        try {\n            for await (const code of sdk.streamResponse(request, { abortController })) {\n                set(state => updateCode(state, code));\n            }\n            set(state => completeRequest(state, () => {\n                // Sync the latest messages from the active chat up to the disk state\n                syncDiskStateChained();\n            }));\n        }\n        catch (e) {\n            console.error('Error making chat request', e);\n            const error = refineError(e, instruction);\n            set(state => cleanupError(state, path, activeChatKey, error));\n        }\n        finally {\n            abortController = null;\n        }\n    },\n    addSyncedChats: (notebook, chats) => {\n        if (!(notebook && notebook.path))\n            return;\n        let findNotebook = (state) => state.notebooks.find(nb => nb.path === notebook.path);\n        for (const chat of chats) {\n            set(state => {\n                let _foundNotebook = findNotebook(state);\n                if (!_foundNotebook) {\n                    console.log(`Adding notebook ${notebook.path} to state after sync`);\n                    state.notebooks.push(notebook);\n                    _foundNotebook = notebook;\n                }\n                // Only add the chat if it doesn't already exist\n                if (!_foundNotebook.chats[chat.key]) {\n                    _foundNotebook.chats[chat.key] = chat;\n                }\n            });\n        }\n    },\n    resetActiveChat: () => {\n        abortController?.abort();\n        const chat = getActiveChat(get());\n        set(state => resetActiveChat(state));\n        if (chat && chat.messages.length > 0)\n            get().makeChatRequest({ context: chat.context, instruction: chat.messages[0].content });\n    },\n    deleteMessagesStartingWith: (message_id) => {\n        set(state => {\n            const activeChat = getActiveChat(state);\n            if (!activeChat)\n                return;\n            const index = activeChat.messages.findIndex(msg => msg.messageId === message_id);\n            activeChat.messages = activeChat.messages.slice(0, index);\n            activeChat.tokens = activeChat.messages[activeChat.messages.length - 1].tokens || 0;\n        });\n    },\n    submitFeedback: async (feedback) => {\n        set(state => void submitFeedback(state, feedback));\n        const session = getActiveChat(get())?.session;\n        if (session)\n            await postFeedback({ session, feedback });\n    },\n    retryError: () => {\n        const chatState = getActiveChat(get());\n        if (chatState?.inProgress?.type === 'error') {\n            const instruction = chatState.inProgress.failingInstruction;\n            const context = chatState.context;\n            set(state => removeFailedMessages(state));\n            get().makeChatRequest({ context, instruction });\n        }\n    },\n    gotoPreviousChat: () => {\n        set(state => void gotoPreviousChat(state));\n    },\n    toggleSettings: () => {\n        set(state => void (state.settings.open = !state.settings.open));\n    },\n    setEnableDataCollection: (enableDataCollection) => {\n        const sdk = getAssistantSdk();\n        if (enableDataCollection) {\n            sdk.enableDataCollection();\n        }\n        else {\n            sdk.disableDataCollection();\n        }\n        set(state => void (state.settings.enableDataCollection = enableDataCollection));\n    },\n    setAddCodeToNotebook: (addCodeToNotebook) => {\n        set(state => void (state.settings.addCodeToNotebook = addCodeToNotebook));\n    },\n    deleteChat: (chatKey) => {\n        set(state => {\n            const notebook = getActiveNotebook(state);\n            if (notebook && notebook.activeChatKey !== chatKey) {\n                delete notebook.chats[chatKey];\n                return state;\n            }\n        });\n    },\n    setHidePopups: (hidePopups) => {\n        set(state => {\n            state.hidePopups = hidePopups;\n            state.attachContextOpen = false;\n        });\n    },\n    logout: () => {\n        set(state => {\n            unbindSyncDiskStateChained();\n            state.account = null;\n            state.user = null;\n            state.terms.accepted = false;\n            state.terms.version = null;\n            state.settings.open = false;\n            state.settings.enableDataCollection = false;\n            const notebook = getActiveNotebook(state);\n            state.notebooks = [\n                {\n                    ...notebook,\n                    path: notebook?.path,\n                    activeChatKey: null,\n                    previousChatKey: null,\n                    chats: {},\n                    notebookState: {\n                        dataframes: [],\n                        selectedCell: null,\n                        selectedText: null,\n                        error: null\n                    },\n                    suggestionState: {\n                        loading: false,\n                        suggestions: null,\n                        dataframe: null,\n                        error: null\n                    },\n                    homeScreen: {\n                        chatStarters: notebook?.homeScreen.chatStarters,\n                        selectedChatStarter: null\n                    }\n                }\n            ];\n            return state;\n        }, true);\n    }\n})), { enabled: process.env.NODE_ENV === 'development' } // Only enable devtools in development\n), {\n    name: 'anaconda-assistant',\n    version: STATE_VERSION,\n    storage: createJSONStorage(() => (isTestMode() ? createTestStorage() : localStorage)),\n    onRehydrateStorage: () => updateStoreState\n}));\nexport function requireChatState(state) {\n    const notebook = getActiveNotebook(state);\n    const chatState = getActiveChat(state);\n    const { path, settings } = state;\n    if (!notebook?.activeChatKey || !chatState || !path)\n        throw new Error('No active chat');\n    const { activeChatKey } = notebook;\n    return { notebook, chatState, activeChatKey: activeChatKey, path, settings };\n}\nexport function messageId(session, messageIdx) {\n    return `${session.sessionId}-${messageIdx}`;\n}\nfunction refineError(e, instruction) {\n    if (abortController?.signal.aborted) {\n        return null; // In this case we don't want to show an error\n    }\n    const name = e.name;\n    const isKnownError = [\n        ASSISTANT_ERROR,\n        ASSISTANT_API_ERROR_NAME,\n        ASSISTANT_API_NETWORK_ERROR_NAME,\n        ASSISTANT_API_SERVER_ERROR_NAME,\n        ASSISTANT_API_INVALID_RESPONSE_ERROR_NAME,\n        ASSISTANT_API_UNKNOWN_ERROR_NAME,\n        ASSISTANT_SDK_ERROR_NAME,\n        ASSISTANT_SDK_INVALID_VERSION_ERROR_NAME,\n        ASSISTANT_SDK_INVALID_API_URL_ERROR_NAME,\n        ASSISTANT_SDK_UNKNOWN_ERROR_NAME\n    ].includes(name);\n    return {\n        type: 'error',\n        errorType: isKnownError ? e.type : 'unknown',\n        status: isKnownError ? e.status : 0,\n        message: isKnownError ? e.message : 'An unknown error occurred',\n        failingInstruction: instruction || ''\n    };\n}\n","import { getActiveChat, getActiveNotebook } from './state-fns';\nimport { getAssistantSdk } from '../assistant-sdk';\n// Store an abort controller per path\nconst abortControllers = {};\nexport async function getSuggestions(state, activeCell, type, dataframe) {\n    const activeNotebook = getActiveNotebook(state);\n    const activeChat = getActiveChat(state);\n    return activeNotebook && (!activeChat || !abortControllers[activeNotebook.path])\n        ? _getSuggestions({\n            state,\n            activeNotebook,\n            activeChat,\n            activeCell,\n            type,\n            dataframe\n        })\n        : null;\n}\nasync function _getSuggestions(params) {\n    const { state, activeNotebook, activeChat, activeCell, type, dataframe } = params;\n    if (!state.user) {\n        throw new Error('User is not logged in');\n    }\n    try {\n        const abortController = new AbortController();\n        abortControllers[activeNotebook.path] = abortController;\n        const sdk = getAssistantSdk();\n        return await sdk.fetchSuggestions({\n            session: activeChat?.session || {\n                userId: state.user,\n                // TODO: This is a legacy session ID that we should remove\n                // once we make suggestions create a new chat before fetching.\n                // Attempting to do so today causes an error which says that the list of chats cannot be modified.\n                // This is due to where I was trying to modify the chats.\n                // I will deal with this after the release.\n                sessionId: 'LEGACY_SUGGESTIONS'\n            },\n            type,\n            variables: {\n                code_cell: activeCell,\n                name: dataframe?.name || '',\n                dtypes_str: dataframe?.dtypesStr || ''\n            }\n        }, { abortController });\n    }\n    catch (e) {\n        console.error('Error fetching suggestions', e);\n        throw e;\n    }\n    finally {\n        // Remove the abort controller\n        abortControllers[activeNotebook.path] = null;\n    }\n}\n","const items = {};\nexport function isTestMode() {\n    return typeof localStorage === 'undefined';\n}\nexport function createTestStorage() {\n    return {\n        getItem: (name) => {\n            return items[name] ? JSON.parse(items[name]) : null;\n        },\n        setItem: (name, value) => {\n            items[name] = JSON.stringify(value);\n        },\n        removeItem: (name) => {\n            delete items[name];\n        }\n    };\n}\n","export const ADD_CODE_TO_NOTEBOOK_TYPES = [\n    'below-active-cell',\n    'at-end-of-notebook',\n    'in-place'\n];\n","const extractPartsRegex = /\\n?``` ?(python)?\\n?/gms;\nexport function extractMessageBlocks(message) {\n    const matches = message.matchAll(extractPartsRegex);\n    const blocks = [];\n    let currentIdx = 0;\n    let currentType = 'text';\n    for (const match of matches) {\n        if (match.index !== undefined && match.index !== -1) {\n            const part = message.substring(currentIdx, match.index);\n            blocks.push({ type: currentType, content: part });\n            currentIdx = match.index + match[0].length;\n            currentType = currentType === 'text' ? (match[1] === 'python' ? 'python' : 'output') : 'text';\n        }\n    }\n    if (currentIdx < message.length)\n        blocks.push({ type: currentType, content: message.substring(currentIdx) });\n    return blocks.filter(block => block.content !== '');\n}\n","import { truncate } from 'lodash';\nimport { attachmentMessagePrefix } from './specialPrefixes';\nexport function formatContextVariables(context, content) {\n    const contextMessages = [];\n    switch (context.type) {\n        case 'graph-dataframe':\n        case 'describe-dataframe':\n            contextMessages.push(`dataframe ${context.variables.dataframe.name}`);\n            break;\n        case 'explain-code':\n        case 'comment-code':\n        case 'improve-code':\n            if (context.variables.selected_code) {\n                contextMessages.push('selected code');\n            }\n            break;\n        case 'debug-error':\n            if (context.variables.error_cell_code) {\n                contextMessages.push('error cell');\n            }\n            if (context.variables.error_output) {\n                contextMessages.push(`error output: ${truncate(context.variables.error_output, { length: 100 })}`);\n            }\n            break;\n        case 'suggestions-chat':\n            if (context.variables.code_cell) {\n                contextMessages.push('active code cell');\n            }\n            if (context.variables.name) {\n                contextMessages.push(`dataframe ${context.variables.name}`);\n            }\n            break;\n        case 'default-python':\n        default:\n            if (content.startsWith(attachmentMessagePrefix)) {\n                return '';\n            }\n            else {\n                contextMessages.push('no context from Notebook');\n            }\n            break;\n    }\n    if (contextMessages.length === 0) {\n        return '';\n    }\n    if (contextMessages.length === 1) {\n        return contextMessages[0];\n    }\n    return `${contextMessages.slice(0, -1).join(', ')} and ${contextMessages.slice(-1)}`;\n}\n","export function parsePythonResult(result) {\n    try {\n        if (typeof result !== 'string')\n            return null;\n        const stripped = result.replace(/^'/, '').replace(/'$/, '');\n        return JSON.parse(stripped);\n    }\n    catch (e) {\n        console.error('Could not parse variables', e);\n        return null;\n    }\n}\nexport const dataFrameCheckerPython = `\nimport json\nimport getpass\nimport hashlib\n\ndef import_pandas_safely():\n    try:\n        return __import__('pandas')\n    except ImportError:\n        return False\n\n\n__pandas = import_pandas_safely()\n\n\ndef is_data_frame(v: str):\n    obj = eval(v)\n    if  isinstance(obj, __pandas.core.frame.DataFrame) or isinstance(obj, __pandas.core.series.Series):\n        return True\n\n\ndef dataframe_columns(var):\n    df = eval(var)\n    if isinstance(df, __pandas.core.series.Series):\n        return [[df.name, str(df.dtype)]]\n    return list(map(lambda col: [col, str(df[col].dtype)], df.columns))\n\n\ndef dtypes_str(frame):\n    return str(eval(frame).dtypes)\n\ndef dataframe_hash(var):\n    # Return a hash including the column names and number of rows \n    df = eval(var)\n    if isinstance(df, __pandas.core.series.Series):\n        return hashlib.sha256(f\"{var}-{df.name},{len(df)}\".encode('utf-8')).hexdigest()\n    return hashlib.sha256(f\"{var}-{','.join(df.columns)},{len(df)}\".encode('utf-8')).hexdigest()\n\ndef get_dataframes():\n    if __pandas is None:\n        return []\n    user = getpass.getuser()\n    values = %who_ls\n    dataframes = [\n        {\n            \"name\": var,\n            \"type\": type(eval(var)).__name__,\n            \"hash\": dataframe_hash(var),\n            \"cols\": dataframe_columns(var),\n            \"dtypesStr\": dtypes_str(var),\n        }\n        for var in values if is_data_frame(var)\n    ]\n    result = {\"dataframes\": dataframes, \"user\": user}\n    return json.dumps(result, ensure_ascii=False)\n\n\nget_dataframes()\n`;\n","import { sharedCore } from '../jupyter/extension-load-utils';\nfunction getEnvironmentType() {\n    const environmentType = sharedCore.getCoreReady().config.assistant.environmentType;\n    return environmentType;\n}\nexport function isLocalDev() {\n    return getEnvironmentType() === 'local-dev';\n}\nexport function isLocalNotebooks() {\n    return getEnvironmentType() === 'local-notebooks-prod' || isLocalNotebooksDev();\n}\nexport function isLocalNotebooksDev() {\n    return getEnvironmentType() === 'local-notebooks-dev';\n}\nexport function isCloudNotebooks() {\n    return getEnvironmentType() === 'cloud-notebooks-prod';\n}\nexport function isEnterpriseNotebooksDev() {\n    return getEnvironmentType() === 'enterprise-notebooks-dev';\n}\nexport function isEnterpriseNotebooks() {\n    return getEnvironmentType() === 'enterprise-notebooks-prod' || isEnterpriseNotebooksDev();\n}\nexport function getClientSource() {\n    if (isLocalDev())\n        return 'anaconda-local-dev';\n    if (isCloudNotebooks())\n        return 'anaconda-cloud-notebooks-prod';\n    if (isLocalNotebooksDev())\n        return 'anaconda-local-notebooks-dev';\n    if (isLocalNotebooks())\n        return 'anaconda-local-notebooks-prod';\n    if (isEnterpriseNotebooksDev())\n        return 'anaconda-enterprise-notebooks-dev';\n    if (isEnterpriseNotebooks())\n        return 'anaconda-enterprise-notebooks-prod';\n    return 'unknown';\n}\n","export const ASSISTANT_ERROR = 'ASSISTANT_ERROR';\nexport class AssistantError extends Error {\n    constructor(type, message, status) {\n        super(message);\n        this.name = ASSISTANT_ERROR;\n        this.status = status;\n        this.type = type;\n    }\n}\n","let cachedCookies = null;\nexport function getCookies() {\n    if (cachedCookies) {\n        return cachedCookies;\n    }\n    if (typeof document === 'undefined') {\n        return {};\n    }\n    const pairs = document.cookie.split(';');\n    const cookies = {};\n    for (let i = 0; i < pairs.length; i++) {\n        const pair = pairs[i].split('=');\n        cookies[(pair[0] + '').trim()] = unescape(pair.slice(1).join('='));\n    }\n    cachedCookies = cookies;\n    return cookies;\n}\n","function getHostName() {\n    if (typeof window === 'undefined') {\n        return 'anaconda.cloud';\n    }\n    return window.location.host.replace(/^nb\\./, '');\n}\nexport const ENV = {\n    PROD: {\n        LEGACY_CLOUD_API_BASE_URL: 'https://anaconda.cloud/api',\n        CLOUD_API_BASE_URL: `https://${getHostName()}/api`,\n        LD_CLIENT_SIDE_ID: '6408b2b7e550011343183538',\n        DATADOG_CLIENT_TOKEN: 'pub2b6467ca1f0ee597585d8a8bf43d523f'\n    }\n};\n","import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, \n    // TODO: Move this to a configuration outside of the shared code\n    'aext_assistant_server', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data;\n}\nexport async function getJson(response) {\n    if (!response.ok) {\n        try {\n            const text = await response.text();\n            return Promise.reject(`Failed with status ${response.status} and body ${text}`);\n        }\n        catch (e) {\n            return Promise.reject(`Failed with status ${response.status}`);\n        }\n    }\n    return response.json();\n}\nexport async function getJsonFromExtension(response) {\n    if (response.remote_status_code < 200 || response.remote_status_code >= 300) {\n        throw new Error(`Failed with status ${response.remote_status_code} and body ${response.remote_data}`);\n    }\n    return response.remote_data;\n}\n","import { getJsonFromExtension, requestAPI } from '../launchdarkly/handler';\nimport { getAccessToken } from './auth';\n/**\n * Returns the Nucleus account of the current user.\n * This function is memoized, so it will only make one request to the server\n * until the page is reloaded.\n */\nlet nucleusAccountPromise = null;\nexport function getNucleusAccount() {\n    if (nucleusAccountPromise) {\n        return nucleusAccountPromise;\n    }\n    nucleusAccountPromise = (async () => {\n        const accessToken = await getAccessToken();\n        if (!accessToken) {\n            throw new Error('No access token');\n        }\n        const accountResponse = await requestAPI('nucleus_user', {\n            headers: { 'X-Nucleus-Token': accessToken.accessToken }\n        });\n        return await getJsonFromExtension(accountResponse);\n    })();\n    return nucleusAccountPromise;\n}\n/**\n * Clears the memoized Nucleus account.\n */\nexport function clearNucleusAccountPromise() {\n    nucleusAccountPromise = null;\n}\n","import { requestAPI } from '../launchdarkly/handler';\nimport { useStore } from '../../store/store';\nimport { clearNucleusAccountPromise } from './account';\nimport { getAccessToken, clearTokenPromise } from './auth';\nimport { getAssistantSdk } from '../../assistant-sdk';\nimport { fetchTermsAndConditionsVersion } from '../../api/terms-and-conditions-version';\nimport { bindSyncDiskStateChained, syncDiskStateChained, unbindSyncDiskStateChained } from '../../jupyter/syncStateDebounced';\nimport { clearDiskState } from '../../jupyter/syncDiskState';\nexport const PRO_TIER_SUBSCRIPTIONS = [\n    'commercial_subscription',\n    'security_subscription',\n    'enterprise_subscription'\n];\nexport const STARTER_TIER_SUBSCRIPTION = 'starter_subscription';\nconst defaultMaxTokens = 4096;\nexport async function getAccountMaxTokens(account) {\n    if (getIsProTier(account)) {\n        return 16384;\n    }\n    return defaultMaxTokens;\n}\nexport function getIsProTier(account) {\n    if (!account) {\n        return false;\n    }\n    const subscription = account.subscriptions;\n    if (!subscription.length) {\n        return false;\n    }\n    const productCodes = subscription.map(sub => sub.product_code);\n    return productCodes.some(code => PRO_TIER_SUBSCRIPTIONS.includes(code));\n}\nexport function getIsStarterTier(account) {\n    if (!account) {\n        return false;\n    }\n    const subscription = account.subscriptions;\n    if (!subscription.length) {\n        return false;\n    }\n    const productCodes = subscription.map(sub => sub.product_code);\n    return productCodes.some(code => code === STARTER_TIER_SUBSCRIPTION);\n}\n/**\n * Logs out the current user.\n */\nexport async function logout(message) {\n    if (window.confirm(message ||\n        'Are you sure you want to log out? Logging out will remove all your Anaconda Assistant data.')) {\n        try {\n            await clearDiskState();\n        }\n        catch (e) {\n            console.error('Error clearing disk state', e);\n        }\n        clearNucleusAccountPromise();\n        clearTokenPromise();\n        try {\n            await requestAPI('logout');\n        }\n        catch (e) {\n            console.error('Error logging out', e);\n        }\n        useStore.getState().logout();\n    }\n}\n/**\n * Logs in the current user.\n */\nexport async function login() {\n    unbindSyncDiskStateChained();\n    clearNucleusAccountPromise();\n    clearTokenPromise();\n    await requestAPI('login');\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n        return logout();\n    }\n    const sdk = getAssistantSdk();\n    sdk.accessToken.setAccessToken(accessToken);\n    const version = await fetchTermsAndConditionsVersion();\n    const state = useStore.getState();\n    state.setAccess(Boolean(version));\n    await state.updateAccount();\n    const app = _jupyterFrontEnd;\n    if (!app) {\n        console.error('Could not find Jupyter Front End');\n        return;\n    }\n    const context = app.shell.currentWidget?.context;\n    const factoryName = context?.factoryName;\n    const isNotebook = factoryName && factoryName.toLowerCase() === 'notebook';\n    if (!isNotebook && useStore.getState().account) {\n        // If the user already logged in, but the current widget is not a notebook,\n        // we must create a notebook.\n        // The only view that works without a notebook is the login view.\n        await app.commands.execute('notebook:create-new');\n    }\n    await syncDiskStateChained();\n    state.resetToHomeScreen();\n    bindSyncDiskStateChained();\n}\nlet _jupyterFrontEnd = null;\nexport function shareJupyterFrontEndWithLogin(jupyterFrontEnd) {\n    _jupyterFrontEnd = jupyterFrontEnd;\n}\n","import { getJson, requestAPI } from '../launchdarkly/handler';\nimport { ENV } from '../launchdarkly/constants';\nimport { getCookies } from '../getCookies';\nimport { isEnterpriseNotebooks, isLocalDev, isLocalNotebooks } from '../environmentType';\nlet statePromise = null;\nconst authenticationMethod = [\n    {\n        unavailable: false,\n        getUrl: () => `${ENV.PROD.LEGACY_CLOUD_API_BASE_URL}/iam/token`,\n        getOptions: () => ({\n            method: 'POST',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ grant_type: 'refresh_token' })\n        })\n    },\n    {\n        unavailable: false,\n        getUrl: () => `${ENV.PROD.CLOUD_API_BASE_URL}/iam/token`,\n        getOptions: () => ({\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                grant_type: 'refresh_token',\n                refresh_token: getCookies().refresh_token\n            })\n        })\n    }\n];\nasync function initState() {\n    let tokenResponse = null;\n    for (const method of authenticationMethod) {\n        if (method.unavailable) {\n            continue;\n        }\n        console.log('[Assistant] Trying to get access token from', method.getUrl());\n        try {\n            tokenResponse = await fetch(method.getUrl(), method.getOptions());\n            if (tokenResponse.status === 200) {\n                break;\n            }\n        }\n        catch (e) {\n            console.error(e);\n            method.unavailable = true;\n        }\n    }\n    if (!tokenResponse || tokenResponse.status !== 200) {\n        throw new Error('Unable to get access token');\n    }\n    const { access_token, expires_in } = await getJson(tokenResponse);\n    const expires = new Date();\n    expires.setSeconds(expires.getSeconds() + expires_in);\n    return { token: access_token, expires };\n}\nlet tokenPromise = null;\nexport function getNucleusAccessToken(path) {\n    if (tokenPromise) {\n        return tokenPromise;\n    }\n    tokenPromise = (async () => {\n        const response = await requestAPI(path);\n        if (response.access_token === null) {\n            return null;\n        }\n        return {\n            accessToken: response.access_token,\n            expiresAt: response.expires_at\n        };\n    })();\n    return tokenPromise;\n}\nexport function clearTokenPromise() {\n    tokenPromise = null;\n}\nexport async function getAccessToken(loopCount = 0) {\n    // If localhost, don't try to get an access token\n    if (isLocalDev()) {\n        return null;\n    }\n    // If local notebooks\n    if (isLocalNotebooks()) {\n        return getNucleusAccessToken('nucleus_token');\n    }\n    // If enterprise notebooks\n    if (isEnterpriseNotebooks()) {\n        return getNucleusAccessToken('ae5_nucleus_token');\n    }\n    // Otherwise, get the access token\n    if (loopCount > 2) {\n        throw new Error('The access token expires_at is causing a loop');\n    }\n    if (!statePromise) {\n        statePromise = initState();\n    }\n    const state = await statePromise;\n    const now = new Date();\n    // Invalidate the token when it gets within 30 seconds of expiration\n    // to avoid clock drift etc.\n    if (now >= state.expires) {\n        statePromise = null;\n        return getAccessToken(loopCount++);\n    }\n    return {\n        accessToken: state.token,\n        expiresAt: state.expires.getTime()\n    };\n}\n","/**\n * We will inject this prefix to all messages that contain attachments.\n * Before sending messages to our API, we will remove this prefix.\n */\nexport const attachmentMessagePrefix = 'attachment://';\nexport function attachmentMessageInstruction(name, cols) {\n    return (`${attachmentMessagePrefix}` +\n        `In a brief sentence, acknowledge you have received the following dataframe information: ` +\n        `\\`>>> ${name}.dtypes\\` outputs:\\n\\`\\`\\`\\n${cols\n            .map(col => `${col[0]} ${col[1]}`)\n            .join('\\n')}\\n\\`\\`\\``);\n}\nexport function cleanMessageWithAttachmentPrefix(message) {\n    // Extracting df.dtypes from the message.\n    const match = message.match(/`>>> (.*)`/);\n    if (match) {\n        const name = match[1].split('.')[0];\n        return `Attached the column names and types of dataframe ${name}: \\`${match[1]}\\`.`;\n    }\n    else {\n        return message;\n    }\n}\n","export function isSelectionEqual(current, selection) {\n    return (current !== null &&\n        current.uuid === selection.uuid &&\n        current.startColumn === selection.start.column &&\n        current.endColumn === selection.end.column &&\n        current.startRow === selection.start.line &&\n        current.endRow === selection.end.line);\n}\nexport function getSelectionFromEditor(editor, selection) {\n    const startPos = editor.getOffsetAt(selection.start);\n    const endPos = editor.getOffsetAt(selection.end);\n    const source = editor.model.sharedModel.getSource();\n    const text = source.substring(startPos, endPos);\n    const cell = { id: selection.uuid?.toString() || '', source };\n    return { text, cell };\n}\nexport function convertSelection(selection) {\n    return {\n        uuid: selection.uuid?.toString() || '',\n        startColumn: selection.start.column,\n        startRow: selection.start.line,\n        endColumn: selection.end.column,\n        endRow: selection.end.line\n    };\n}\n","// We use https://github.com/nem035/GPT-3-Encoder, which is a fork of https://github.com/latitudegames/GPT-3-Encoder\n// since the original uses node apis which cannot be bundled in the library\n// Should look at either vendoring it, or creating our own fork\nimport { encode } from '@nem035/gpt-3-encoder';\nexport function countTokens(message) {\n    return encode(message).length;\n}\n"],"names":[],"sourceRoot":""}